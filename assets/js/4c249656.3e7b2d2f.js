"use strict";(self.webpackChunkwhnhn=self.webpackChunkwhnhn||[]).push([[7385],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>k});var a=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var o=a.createContext({}),s=function(e){var n=a.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=s(e.components);return a.createElement(o.Provider,{value:n},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},c=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,o=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),d=s(t),c=i,k=d["".concat(o,".").concat(c)]||d[c]||m[c]||r;return t?a.createElement(k,l(l({ref:n},u),{},{components:t})):a.createElement(k,l({ref:n},u))}));function k(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,l=new Array(r);l[0]=c;var p={};for(var o in n)hasOwnProperty.call(n,o)&&(p[o]=n[o]);p.originalType=e,p[d]="string"==typeof e?e:i,l[1]=p;for(var s=2;s<r;s++)l[s]=t[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}c.displayName="MDXCreateElement"},3840:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>m,frontMatter:()=>r,metadata:()=>p,toc:()=>s});var a=t(87462),i=(t(67294),t(3905));const r={tags:["golang","\u6cdb\u578b"]},l="Golang \u6cdb\u578b",p={permalink:"/blog/tech/Golang\u6cdb\u578b",source:"@site/tech/Golang\u6cdb\u578b.md",title:"Golang \u6cdb\u578b",description:"\u6982\u8ff0",date:"2023-03-05T05:06:07.000Z",formattedDate:"2023\u5e743\u67085\u65e5",tags:[{label:"golang",permalink:"/blog/tech/tags/golang"},{label:"\u6cdb\u578b",permalink:"/blog/tech/tags/\u6cdb\u578b"}],readingTime:40.16,hasTruncateMarker:!1,authors:[],frontMatter:{tags:["golang","\u6cdb\u578b"]},prevItem:{title:"\u81ea\u5b9a\u4e49SpringBoot Starter",permalink:"/blog/tech/\u81ea\u5b9a\u4e49SpringBootStarter"},nextItem:{title:"\u73a9\u8f6c Java \u7ebf\u7a0b\u53ca\u7ebf\u7a0b\u6c60",permalink:"/blog/tech/\u73a9\u8f6cJava\u7ebf\u7a0b\u53ca\u7ebf\u7a0b\u6c60"}},o={authorsImageUrls:[]},s=[{value:"\u6982\u8ff0",id:"\u6982\u8ff0",level:2},{value:"\u7c7b\u578b\u53c2\u6570",id:"\u7c7b\u578b\u53c2\u6570",level:2},{value:"\u7ea6\u675f",id:"\u7ea6\u675f",level:2},{value:"<code>any</code>\u7684\u5141\u8bb8\u64cd\u4f5c",id:"any\u7684\u5141\u8bb8\u64cd\u4f5c",level:2},{value:"\u5b9a\u4e49\u7ea6\u675f",id:"\u5b9a\u4e49\u7ea6\u675f",level:2},{value:"<code>any</code>\u7ea6\u675f",id:"any\u7ea6\u675f",level:2},{value:"\u4f7f\u7528\u7ea6\u675f",id:"\u4f7f\u7528\u7ea6\u675f",level:2},{value:"\u591a\u7c7b\u578b\u53c2\u6570",id:"\u591a\u7c7b\u578b\u53c2\u6570",level:2},{value:"\u6cdb\u578b\u7c7b\u578b",id:"\u6cdb\u578b\u7c7b\u578b",level:2},{value:"\u65b9\u6cd5\u4e0d\u80fd\u63a5\u53d7\u5176\u4ed6\u7c7b\u578b\u53c2\u6570",id:"\u65b9\u6cd5\u4e0d\u80fd\u63a5\u53d7\u5176\u4ed6\u7c7b\u578b\u53c2\u6570",level:2},{value:"\u8fd0\u7b97\u7b26",id:"\u8fd0\u7b97\u7b26",level:2},{value:"\u7c7b\u578b\u96c6",id:"\u7c7b\u578b\u96c6",level:3},{value:"\u7ea6\u675f\u7c7b\u578b\u96c6",id:"\u7ea6\u675f\u7c7b\u578b\u96c6",level:3},{value:"\u7ea6\u675f\u5143\u7d20",id:"\u7ea6\u675f\u5143\u7d20",level:3},{value:"\u4efb\u610f\u7c7b\u578b\u7ea6\u675f\u5143\u7d20",id:"\u4efb\u610f\u7c7b\u578b\u7ea6\u675f\u5143\u7d20",level:4},{value:"\u8fd1\u4f3c\u7ea6\u675f\u5143\u7d20",id:"\u8fd1\u4f3c\u7ea6\u675f\u5143\u7d20",level:4},{value:"\u8054\u5408\u5143\u7d20",id:"\u8054\u5408\u5143\u7d20",level:4},{value:"\u57fa\u4e8e\u7c7b\u578b\u96c6\u7684\u8fd0\u7b97\u7b26",id:"\u57fa\u4e8e\u7c7b\u578b\u96c6\u7684\u8fd0\u7b97\u7b26",level:3},{value:"\u7ea6\u675f\u7684\u6bd4\u8f83\u7c7b\u578b",id:"\u7ea6\u675f\u7684\u6bd4\u8f83\u7c7b\u578b",level:3},{value:"\u76f8\u4e92\u5f15\u7528\u7684\u7c7b\u578b\u53c2\u6570",id:"\u76f8\u4e92\u5f15\u7528\u7684\u7c7b\u578b\u53c2\u6570",level:2},{value:"\u7c7b\u578b\u63a8\u65ad",id:"\u7c7b\u578b\u63a8\u65ad",level:2},{value:"\u7c7b\u578b\u7edf\u4e00",id:"\u7c7b\u578b\u7edf\u4e00",level:3},{value:"\u51fd\u6570\u5b9e\u53c2\u7c7b\u578b\u63a8\u65ad",id:"\u51fd\u6570\u5b9e\u53c2\u7c7b\u578b\u63a8\u65ad",level:3},{value:"\u7ea6\u675f\u7c7b\u578b\u63a8\u65ad",id:"\u7ea6\u675f\u7c7b\u578b\u63a8\u65ad",level:3},{value:"\u5143\u7d20\u7ea6\u675f\u793a\u4f8b",id:"\u5143\u7d20\u7ea6\u675f\u793a\u4f8b",level:3},{value:"\u6307\u9488\u65b9\u6cd5\u793a\u4f8b",id:"\u6307\u9488\u65b9\u6cd5\u793a\u4f8b",level:3},{value:"\u7ea6\u675f\u7c7b\u578b\u63a8\u65ad\u540e\u4ecd\u5e94\u7528\u7ea6\u675f",id:"\u7ea6\u675f\u7c7b\u578b\u63a8\u65ad\u540e\u4ecd\u5e94\u7528\u7ea6\u675f",level:3},{value:"\u4f7f\u7528\u5728\u7ea6\u675f\u4e2d\u5f15\u7528\u81ea\u8eab\u7684\u7c7b\u578b",id:"\u4f7f\u7528\u5728\u7ea6\u675f\u4e2d\u5f15\u7528\u81ea\u8eab\u7684\u7c7b\u578b",level:2},{value:"\u7c7b\u578b\u53c2\u6570\u7684\u503c\u672a\u88c5\u7bb1",id:"\u7c7b\u578b\u53c2\u6570\u7684\u503c\u672a\u88c5\u7bb1",level:2},{value:"\u7c7b\u578b\u96c6\u8be6\u7ec6\u4fe1\u606f",id:"\u7c7b\u578b\u96c6\u8be6\u7ec6\u4fe1\u606f",level:2},{value:"\u7ea6\u675f\u4e2d\u7684\u5143\u7d20\u548c\u65b9\u6cd5",id:"\u7ea6\u675f\u4e2d\u7684\u5143\u7d20\u548c\u65b9\u6cd5",level:3},{value:"\u7ea6\u675f\u4e2d\u7684\u590d\u5408\u7c7b\u578b",id:"\u7ea6\u675f\u4e2d\u7684\u590d\u5408\u7c7b\u578b",level:3},{value:"\u7c7b\u578b\u96c6\u4e2d\u7684\u7c7b\u578b\u53c2\u6570",id:"\u7c7b\u578b\u96c6\u4e2d\u7684\u7c7b\u578b\u53c2\u6570",level:3},{value:"\u7c7b\u578b\u8f6c\u6362",id:"\u7c7b\u578b\u8f6c\u6362",level:3},{value:"\u975e\u7c7b\u578b\u5316\u5e38\u91cf",id:"\u975e\u7c7b\u578b\u5316\u5e38\u91cf",level:3},{value:"\u5d4c\u5165\u7ea6\u675f\u7684\u7c7b\u578b\u96c6",id:"\u5d4c\u5165\u7ea6\u675f\u7684\u7c7b\u578b\u96c6",level:3},{value:"\u8054\u5408\u5143\u7d20\u4e2d\u7684\u63a5\u53e3\u7c7b\u578b",id:"\u8054\u5408\u5143\u7d20\u4e2d\u7684\u63a5\u53e3\u7c7b\u578b",level:3},{value:"\u7a7a\u7c7b\u578b\u96c6",id:"\u7a7a\u7c7b\u578b\u96c6",level:3},{value:"\u7c7b\u578b\u96c6\u7684\u4e00\u822c\u8bf4\u660e",id:"\u7c7b\u578b\u96c6\u7684\u4e00\u822c\u8bf4\u660e",level:3},{value:"\u53cd\u5c04",id:"\u53cd\u5c04",level:2},{value:"\u603b\u7ed3",id:"\u603b\u7ed3",level:2}],u={toc:s},d="wrapper";function m(e){let{components:n,...t}=e;return(0,i.kt)(d,(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"\u6982\u8ff0"},"\u6982\u8ff0"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u51fd\u6570\u53ef\u4ee5\u6709\u989d\u5916\u7684\u7c7b\u578b\u53c2\u6570\u96c6\uff0c\u7528\u65b9\u62ec\u53f7\u5b9a\u4e49\uff1a",(0,i.kt)("inlineCode",{parentName:"li"},"func F[T any](p T) {...}")),(0,i.kt)("li",{parentName:"ul"},"\u7c7b\u578b\u53c2\u6570\u5728\u51fd\u6570\u5185\u53ef\u4ee5\u5f53\u4f5c\u666e\u901a\u53c2\u6570\u4f7f\u7528"),(0,i.kt)("li",{parentName:"ul"},"\u7c7b\u578b\u901a\u5e38\u6709\u7c7b\u578b\u53c2\u6570\u96c6\uff1a",(0,i.kt)("inlineCode",{parentName:"li"},"type M[T any] []T")),(0,i.kt)("li",{parentName:"ul"},"\u6bcf\u4e2a\u7c7b\u578b\u53c2\u6570\u90fd\u6709\u7c7b\u578b\u7ea6\u675f\uff0c\u5c31\u5982\u6bcf\u4e2a\u666e\u901a\u53c2\u6570\u90fd\u6709\u7c7b\u578b\u4e00\u6837\uff1a",(0,i.kt)("inlineCode",{parentName:"li"},"func F[T Constraint](p T) {...}")),(0,i.kt)("li",{parentName:"ul"},"\u7c7b\u578b\u7ea6\u675f\u662f\u63a5\u53e3\u7c7b\u578b"),(0,i.kt)("li",{parentName:"ul"},"\u65b0\u7684\u9884\u58f0\u660e\u7b26",(0,i.kt)("inlineCode",{parentName:"li"},"any"),"\u662f\u4e00\u4e2a\u7c7b\u578b\u7ea6\u675f\uff0c\u8868\u793a\u4efb\u610f\u7c7b\u578b"),(0,i.kt)("li",{parentName:"ul"},"\u7c7b\u578b\u7ea6\u675f\u7684\u63a5\u53e3\u7c7b\u578b\u53ef\u4ee5\u5d4c\u5957\u5176\u4ed6\u5143\u7d20\u4f5c\u4e3a\u7c7b\u578b\u5b9e\u53c2\u96c6"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"T"),"\u4ee3\u8868\u4efb\u610f\u7c7b\u578b"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"~T"),"\u4ee3\u8868\u7ee7\u627f",(0,i.kt)("inlineCode",{parentName:"li"},"T"),"\u7684\u7c7b\u578b"),(0,i.kt)("li",{parentName:"ul"},"\u5e76\u96c6",(0,i.kt)("inlineCode",{parentName:"li"},"T1 | T2 | ..."),"\u4ee3\u8868\u4ec5\u9650\u4e8e\u5217\u51fa\u7684\u5143\u7d20"),(0,i.kt)("li",{parentName:"ul"},"\u6cdb\u578b\u51fd\u6570\u53ea\u80fd\u4f7f\u7528\u7ea6\u675f\u5141\u8bb8\u7684\u6240\u6709\u7c7b\u578b\u652f\u6301\u7684\u64cd\u4f5c"),(0,i.kt)("li",{parentName:"ul"},"\u6cdb\u578b\u51fd\u6570\u6216\u7c7b\u578b\u9700\u8981\u4f20\u5165\u7c7b\u578b\u5b9e\u53c2"),(0,i.kt)("li",{parentName:"ul"},"\u7c7b\u578b\u63a8\u65ad\u5141\u8bb8\u5728\u5e38\u89c1\u60c5\u51b5\u4e0b\u7701\u7565\u51fd\u6570\u8c03\u7528\u7684\u7c7b\u578b\u53c2\u6570")),(0,i.kt)("h2",{id:"\u7c7b\u578b\u53c2\u6570"},"\u7c7b\u578b\u53c2\u6570"),(0,i.kt)("p",null,"\u6cdb\u578b\u4e2d\u62bd\u8c61\u7684\u6570\u636e\u7c7b\u578b\u53eb\u7c7b\u578b\u53c2\u6570\uff0c\u8fd0\u884c\u6cdb\u578b\u4ee3\u7801\u7684\u65f6\u5019\u7c7b\u578b\u53c2\u6570\u4f1a\u88ab\u7c7b\u578b\u5b9e\u53c2\u66ff\u6362\u3002\n\u7c7b\u578b\u53c2\u6570\u4e0e\u666e\u901a\u975e\u7c7b\u578b\u51fd\u6570\u53c2\u6570\u7c7b\u4f3c\uff0c\u56e0\u6b64\u5e94\u4e0e\u5176\u4ed6\u53c2\u6570\u4e00\u8d77\u5217\u51fa\u3002\u5b9a\u4e49\u4e00\u4e2a\u989d\u5916\u7684\u53ef\u9009\u53c2\u6570\u5217\u8868\u6765\u63cf\u8ff0\u7c7b\u578b\u53c2\u6570\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"      func Print[T any](s []T) { \n        // Just an example, not the suggested syntax.\n        for _, v := range s {\n          fmt.Println(v)\n        }\n      }\n")),(0,i.kt)("p",null,"\u4e0e\u5e38\u89c4\u53c2\u6570\u5217\u8868\u4e0d\u540c\uff0c\u5728\u7c7b\u578b\u53c2\u6570\u5217\u8868\u4e2d\uff0c\u7c7b\u578b\u53c2\u6570\u9700\u8981\u540d\u79f0\uff0c\u8fd9\u907f\u514d\u4e86\u8bed\u6cd5\u4e0a\u7684\u6b67\u4e49\u3002"),(0,i.kt)("h2",{id:"\u7ea6\u675f"},"\u7ea6\u675f"),(0,i.kt)("p",null,"\u5fc5\u987b\u5bf9\u8c03\u7528\u65b9\u4f20\u9012\u7684\u7c7b\u578b\u53c2\u6570\u548c\u6cdb\u578b\u51fd\u6570\u4e2d\u7684\u4ee3\u7801\u8bbe\u7f6e\u9650\u5236\u3002\u8c03\u7528\u65b9\u53ea\u80fd\u4f20\u9012\u6ee1\u8db3\u7ea6\u675f\u7684\u7c7b\u578b\u53c2\u6570\u3002\u6cdb\u578b\u51fd\u6570\u53ea\u80fd\u4ee5\u7ea6\u675f\u5141\u8bb8\u7684\u65b9\u5f0f\u4f7f\u7528\u8fd9\u4e9b\u503c\u3002"),(0,i.kt)("h2",{id:"any\u7684\u5141\u8bb8\u64cd\u4f5c"},(0,i.kt)("inlineCode",{parentName:"h2"},"any"),"\u7684\u5141\u8bb8\u64cd\u4f5c"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"any"),"\u6765\u7ea6\u675f\u7c7b\u578b\u53c2\u6570\u65f6\uff0c\u8868\u793a\u53c2\u6570\u5165\u53c2\u53ef\u4ee5\u662f\u4efb\u610f\u7c7b\u578b\n\u5141\u8bb8\u7684\u64cd\u4f5c"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u58f0\u660e\u8fd9\u4e9b\u7c7b\u578b\u7684\u53d8\u91cf"),(0,i.kt)("li",{parentName:"ul"},"\u5c06\u76f8\u540c\u7c7b\u578b\u7684\u5176\u4ed6\u503c\u5206\u914d\u7ed9\u8fd9\u4e9b\u53d8\u91cf"),(0,i.kt)("li",{parentName:"ul"},"\u5c06\u8fd9\u4e9b\u53d8\u91cf\u4f20\u9012\u7ed9\u51fd\u6570\u6216\u4ece\u51fd\u6570\u8fd4\u56de"),(0,i.kt)("li",{parentName:"ul"},"\u83b7\u53d6\u8fd9\u4e9b\u53d8\u91cf\u7684\u5730\u5740\u5c06\u8fd9\u4e9b\u7c7b\u578b\u7684\u503c\u8f6c\u6362\u6216\u5206\u914d\u7ed9",(0,i.kt)("inlineCode",{parentName:"li"},"interface{}")),(0,i.kt)("li",{parentName:"ul"},"\u5c06\u7c7b\u578b",(0,i.kt)("inlineCode",{parentName:"li"},"T"),"\u7684\u503c\u8f6c\u6362\u4e3a\u7c7b\u578b",(0,i.kt)("inlineCode",{parentName:"li"},"T"),"\uff08\u5141\u8bb8\u4f46\u65e0\u7528\uff09"),(0,i.kt)("li",{parentName:"ul"},"\u4f7f\u7528\u7c7b\u578b\u65ad\u8a00\u5c06\u63a5\u53e3\u503c\u8f6c\u6362\u4e3a\u8be5\u7c7b\u578b"),(0,i.kt)("li",{parentName:"ul"},"\u5c06\u7c7b\u578b\u7528\u4f5c\u7c7b\u578b\u5f00\u5173\u4e2d"),(0,i.kt)("li",{parentName:"ul"},"\u5b9a\u4e49\u5e76\u4f7f\u7528\u4f7f\u7528\u8fd9\u4e9b\u7c7b\u578b\u7684\u590d\u5408\u7c7b\u578b\uff0c\u4f8b\u5982\u8be5\u7c7b\u578b\u7684\u7247\u6bb5"),(0,i.kt)("li",{parentName:"ul"},"\u5c06\u7c7b\u578b\u4f20\u9012\u7ed9\u67d0\u4e9b\u9884\u5148\u58f0\u660e\u7684\u51fd\u6570\uff0c\u4f8b\u5982",(0,i.kt)("inlineCode",{parentName:"li"},"new"))),(0,i.kt)("h2",{id:"\u5b9a\u4e49\u7ea6\u675f"},"\u5b9a\u4e49\u7ea6\u675f"),(0,i.kt)("p",null,"\u5df2\u7ecf\u6709\u4e86\u4e00\u4e2a\u63a5\u8fd1\u7ea6\u675f\u6240\u9700\u7684\u6784\u9020\uff1a\u63a5\u53e3\u7c7b\u578b\u3002\u63a5\u53e3\u7c7b\u578b\u662f\u4e00\u7ec4\u65b9\u6cd5\u3002\u552f\u4e00\u53ef\u4ee5\u5206\u914d\u7ed9\u63a5\u53e3\u7c7b\u578b\u53d8\u91cf\u7684\u503c\u662f\u90a3\u4e9b\u5b9e\u73b0\u76f8\u540c\u65b9\u6cd5\u7684\u7c7b\u578b\u3002\u63a5\u53e3\u7c7b\u578b\u7684\u503c\u80fd\u591f\u6267\u884c\u7684\u64cd\u4f5c\u662f\u8c03\u7528\u65b9\u6cd5\u3002\n\u4f7f\u7528\u7c7b\u578b\u5b9e\u53c2\u8c03\u7528\u6cdb\u578b\u51fd\u6570\u7c7b\u4f3c\u4e8e\u4e3a\u63a5\u53e3\u7c7b\u578b\u7684\u53d8\u91cf\u8d4b\u503c\uff1a\u7c7b\u578b\u5b9e\u53c2\u5fc5\u987b\u5b9e\u73b0\u7c7b\u578b\u53c2\u6570\u7684\u7ea6\u675f\u3002\u7f16\u5199\u6cdb\u578b\u51fd\u6570\u5c31\u50cf\u4f7f\u7528\u63a5\u53e3\u7c7b\u578b\u7684\u503c\uff1a\u6cdb\u578b\u4ee3\u7801\u53ea\u80fd\u4f7f\u7528\u7ea6\u675f\u5141\u8bb8\u7684\u64cd\u4f5c\uff08\u6216\u4efb\u4f55\u7c7b\u578b\u5141\u8bb8\u7684\u64cd\u4f5c\uff09\u3002\u56e0\u6b64\uff0c\u5728\u8fd9\u79cd\u8bbe\u8ba1\u4e2d\uff0c\u7ea6\u675f\u53ea\u662f\u63a5\u53e3\u7c7b\u578b\u3002\u6ee1\u8db3\u7ea6\u675f\u610f\u5473\u7740\u5b9e\u73b0\u63a5\u53e3\u7c7b\u578b\u3002"),(0,i.kt)("h2",{id:"any\u7ea6\u675f"},(0,i.kt)("inlineCode",{parentName:"h2"},"any"),"\u7ea6\u675f"),(0,i.kt)("p",null,"\u7b80\u5316\u6bcf\u6b21\u90fd\u5b9a\u4e49\u4e3a",(0,i.kt)("inlineCode",{parentName:"p"},"interface{}")),(0,i.kt)("h2",{id:"\u4f7f\u7528\u7ea6\u675f"},"\u4f7f\u7528\u7ea6\u675f"),(0,i.kt)("p",null,"\u5bf9\u4e8e\u6cdb\u578b\u51fd\u6570\uff0c\u53ef\u4ee5\u5c06\u7ea6\u675f\u89c6\u4e3a\u7c7b\u578b\u53c2\u6570\u7684\u7c7b\u578b\uff1a\u5143\u7c7b\u578b"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"      func Stringify[T Stringer](s []T) (ret []string) {\n        for _, v := range s {\n          ret = append(ret, v.String())\n        }\n        return ret\n      }\n")),(0,i.kt)("h2",{id:"\u591a\u7c7b\u578b\u53c2\u6570"},"\u591a\u7c7b\u578b\u53c2\u6570"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"      // s1 s2 \u53ef\u4ee5\u4e0d\u540c\u7c7b\u578b\n      func Print2[T1, T2 any](s1 []T1, s2 []T2) { ... }\n      \n      // s1 s2 \u5fc5\u987b\u662f\u5143\u7d20\u76f8\u540c\u7684\u7c7b\u578b\n      func Print2Same[T any](s1 []T, s2 []T) { ... }\n      \n      // s p \u4e0d\u540c\u7c7b\u578b\n      func ConcatTo[S Stringer, P Plusser](s []S, p []P) []string {}\n      \n      // s1 s2 \u90fd\u7b26\u5408 Stringer\uff0c\u4f46\u5b9e\u73b0\u7c7b\u578b\u4e0d\u540c\n      func Stringify2[T1, T2 Stringer](s1 []T1, s2 []T2) string {}\n")),(0,i.kt)("h2",{id:"\u6cdb\u578b\u7c7b\u578b"},"\u6cdb\u578b\u7c7b\u578b"),(0,i.kt)("p",null,"\u8981\u4f7f\u7528\u6cdb\u578b\u7c7b\u578b\uff0c\u5fc5\u987b\u63d0\u4f9b\u7c7b\u578b\u5b9e\u53c2\uff0c\u8fd9\u53eb\u505a\u5b9e\u4f8b\u5316\u3002\u7c7b\u578b\u53c2\u6570\u7528\u65b9\u62ec\u53f7\u62ec\u8d77\u6765\u3002\u901a\u8fc7\u4e3a\u7c7b\u578b\u53c2\u6570\u63d0\u4f9b\u7c7b\u578b\u5b9e\u53c2\u6765\u5b9e\u4f8b\u5316\u4e00\u4e2a\u7c7b\u578b\u65f6\uff0c\u4f1a\u751f\u6210\u4e00\u4e2a\u7c7b\u578b\uff0c\u5728\u7c7b\u578b\u53c2\u6570\u7684\u6bcf\u6b21\u4f7f\u7528\u90fd\u4f1a\u88ab\u76f8\u5e94\u7684\u7c7b\u578b\u5b9e\u53c2\u53d6\u4ee3\u3002\n\u6cdb\u578b\u7c7b\u578b\u53ef\u4ee5\u6709\u65b9\u6cd5\u3002\u65b9\u6cd5\u7684\u63a5\u6536\u65b9\u7c7b\u578b\u5fc5\u987b\u58f0\u660e\u4e0e\u63a5\u6536\u65b9\u7c7b\u578b\u65b9\u6cd5\u4e2d\u58f0\u660e\u7684\u7c7b\u578b\u53c2\u6570\u6570\u91cf\u76f8\u540c\u7684\u7c7b\u578b\u53c2\u6570\u3002\u5b83\u4eec\u7684\u58f0\u660e\u6ca1\u6709\u4efb\u4f55\u7ea6\u675f\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"      type Vector[T any] []T\n      \n      func (v *Vector[T]) Push(x T) { *v = append(*v, x) }\n")),(0,i.kt)("p",null,"\u65b9\u6cd5\u58f0\u660e\u4e2d\u5217\u51fa\u7684\u7c7b\u578b\u53c2\u6570\u4e0d\u5fc5\u4e0e\u7c7b\u578b\u58f0\u660e\u4e2d\u7684\u7c7b\u578b\u53c2\u6570\u540c\u540d\u3002\u7279\u522b\u662f\uff0c\u5982\u679c\u8be5\u65b9\u6cd5\u672a\u4f7f\u7528\u5b83\u4eec\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528",(0,i.kt)("inlineCode",{parentName:"p"},"_"),"\u3002\n\u6cdb\u578b\u7c7b\u578b\u901a\u5e38\u53ef\u4ee5\u5f15\u7528\u81ea\u8eab\uff0c\u4f46\u5f53\u6cdb\u578b\u7c7b\u578b\u5f15\u7528\u81ea\u8eab\u65f6\uff0c\u7c7b\u578b\u5b9e\u53c2\u5fc5\u987b\u4e0e\u7c7b\u578b\u53c2\u6570\u7684\u987a\u5e8f\u4e00\u81f4\u3002\u8fd9\u4e2a\u9650\u5236\u963b\u6b62\u4e86\u7c7b\u578b\u5b9e\u4f8b\u5316\u7684\u65e0\u9650\u9012\u5f52\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"      type List[T any] struct {\n        next *List[T] // this reference to List[T] is OK\n        val  T\n      }\n      \n      // This type is INVALID.t\n      type P[T1, T2 any] struct {\n        F *P[T2, T1] // INVALID; must be [T1, T2]}\n      }\n      \n      type ListHead[T any] struct {\n        head *ListElement[T]\n      }\n      \n      type ListElement[T any] struct {\n        next *ListElement[T]\n        val  T\n        // Using ListHead[T] here is OK.\n        // ListHead[T] refers to ListElement[T] refers to ListHead[T].\n        // Using ListHead[int] would not be OK, as ListHead[T]\n        // would have an indirect reference to ListHead[int].\n        head *ListHead[T]\n      }\n")),(0,i.kt)("h2",{id:"\u65b9\u6cd5\u4e0d\u80fd\u63a5\u53d7\u5176\u4ed6\u7c7b\u578b\u53c2\u6570"},"\u65b9\u6cd5\u4e0d\u80fd\u63a5\u53d7\u5176\u4ed6\u7c7b\u578b\u53c2\u6570"),(0,i.kt)("p",null,"\u867d\u7136\u6cdb\u578b\u7c7b\u578b\u7684\u65b9\u6cd5\u53ef\u4ee5\u4f7f\u7528\u8be5\u7c7b\u578b\u7684\u53c2\u6570\uff0c\u4f46\u65b9\u6cd5\u672c\u8eab\u53ef\u80fd\u6ca1\u6709\u5176\u4ed6\u7c7b\u578b\u53c2\u6570\u3002\u5982\u679c\u5411\u65b9\u6cd5\u4e2d\u6dfb\u52a0\u7c7b\u578b\u5b9e\u53c2\u662f\u6709\u7528\u7684\uff0c\u90a3\u4e48\u5fc5\u987b\u7f16\u5199\u4e00\u4e2a\u9002\u5f53\u7684\u53c2\u6570\u5316\u9876\u7ea7\u51fd\u6570\u3002"),(0,i.kt)("h2",{id:"\u8fd0\u7b97\u7b26"},"\u8fd0\u7b97\u7b26"),(0,i.kt)("h3",{id:"\u7c7b\u578b\u96c6"},"\u7c7b\u578b\u96c6"),(0,i.kt)("p",null,"\u6bcf\u4e2a\u7c7b\u578b\u90fd\u6709\u7c7b\u578b\u96c6\uff0c\u975e\u63a5\u53e3\u7c7b\u578b",(0,i.kt)("inlineCode",{parentName:"p"},"T"),"\u7684\u7c7b\u578b\u96c6\u5c31\u662f",(0,i.kt)("inlineCode",{parentName:"p"},"{T}"),"\uff0c\u4ec5\u5305\u542b\u81ea\u8eab\u7684\u96c6\u5408\u3002\u666e\u901a\u63a5\u53e3\u7c7b\u578b\u7684\u7c7b\u578b\u96c6\u5c31\u662f\u6240\u6709\u5b9e\u73b0\u63a5\u53e3\u65b9\u6cd5\u7684\u7c7b\u578b\u3002\n\u666e\u901a\u7c7b\u578b\u7684\u7c7b\u578b\u96c6\u662f\u65e0\u7a77\u7684\uff0c\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u7c7b\u578b",(0,i.kt)("inlineCode",{parentName:"p"},"T"),"\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u63a8\u65ad\u662f\u5426\u5c5e\u4e8e\u63a5\u53e3\u7c7b\u578b",(0,i.kt)("inlineCode",{parentName:"p"},"IT"),"\u3002\u4f46\u65e0\u6cd5\u7a77\u4e3e",(0,i.kt)("inlineCode",{parentName:"p"},"IT"),"\u7684\u6240\u6709\u7c7b\u578b\uff0c",(0,i.kt)("inlineCode",{parentName:"p"},"IT"),"\u662f\u5176\u672c\u8eab\u7c7b\u578b\u96c6\u7684\u4e00\u5458\uff0c",(0,i.kt)("inlineCode",{parentName:"p"},"interface{}"),"\u7684\u7c7b\u578b\u96c6\u662f\u6240\u6709\u53ef\u80fd\u7c7b\u578b\u7684\u96c6\u3002\n\u901a\u8fc7\u67e5\u770b\u63a5\u53e3\u7684\u5143\u7d20\u6765\u6784\u9020\u63a5\u53e3\u7c7b\u578b\u7684\u7c7b\u578b\u96c6\u662f\u5f88\u6709\u7528\u7684\u3002\u8fd9\u5c06\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u4ea7\u751f\u76f8\u540c\u7684\u7ed3\u679c\u3002\u63a5\u53e3\u7684\u5143\u7d20\u53ef\u4ee5\u662f\u65b9\u6cd5\u7b7e\u540d\u6216\u5d4c\u5165\u5f0f\u63a5\u53e3\u7c7b\u578b\u3002\u867d\u7136\u65b9\u6cd5\u7b7e\u540d\u4e0d\u662f\u4e00\u4e2a\u7c7b\u578b\uff0c\u4f46\u662f\u4e3a\u5b83\u5b9a\u4e49\u4e00\u4e2a\u7c7b\u578b\u96c6\u662f\u5f88\u65b9\u4fbf\u7684\uff1a\u58f0\u660e\u8be5\u65b9\u6cd5\u7684\u6240\u6709\u7c7b\u578b\u7684\u96c6\u5408\u3002\u5d4c\u5165\u5f0f\u63a5\u53e3\u7c7b\u578b",(0,i.kt)("inlineCode",{parentName:"p"},"E"),"\u7684\u7c7b\u578b\u96c6\u5c31\u662f",(0,i.kt)("inlineCode",{parentName:"p"},"E"),"\u7684\u7c7b\u578b\u96c6\uff1a\u58f0\u660e",(0,i.kt)("inlineCode",{parentName:"p"},"E"),"\u7684\u6240\u6709\u65b9\u6cd5\u7684\u6240\u6709\u7c7b\u578b\u7684\u96c6\u5408\u3002\n\u5bf9\u4e8e\u4efb\u4f55\u65b9\u6cd5\u7b7e\u540d",(0,i.kt)("inlineCode",{parentName:"p"},"M"),"\uff0c",(0,i.kt)("inlineCode",{parentName:"p"},"interface{ M }"),"\u7684\u7c7b\u578b\u96c6\u5c31\u662f\u7c7b\u578b",(0,i.kt)("inlineCode",{parentName:"p"},"M"),"\uff1a\u5b9a\u4e49",(0,i.kt)("inlineCode",{parentName:"p"},"M"),"\u7684\u6240\u6709\u7c7b\u578b\u96c6\u5408\u3002\u5bf9\u4efb\u4f55\u65b9\u6cd5\u7b7e\u540d",(0,i.kt)("inlineCode",{parentName:"p"},"M1"),"\u548c",(0,i.kt)("inlineCode",{parentName:"p"},"M2"),"\uff0c",(0,i.kt)("inlineCode",{parentName:"p"},"interface{ M1; M2 }"),"\u7684\u7c7b\u578b\u96c6\u5c31\u662f\u540c\u65f6\u5b9a\u4e49",(0,i.kt)("inlineCode",{parentName:"p"},"M1"),"\u548c",(0,i.kt)("inlineCode",{parentName:"p"},"M2"),"\u7684\u6240\u6709\u7c7b\u578b\u96c6\u5408\uff0c\u5373",(0,i.kt)("inlineCode",{parentName:"p"},"M1"),"\u7c7b\u578b\u96c6\u4e0e",(0,i.kt)("inlineCode",{parentName:"p"},"M2"),"\u7c7b\u578b\u96c6\u7684\u4ea4\u96c6\u3002"),(0,i.kt)("h3",{id:"\u7ea6\u675f\u7c7b\u578b\u96c6"},"\u7ea6\u675f\u7c7b\u578b\u96c6"),(0,i.kt)("p",null,"\u6ee1\u8db3\u7ea6\u675f\u7684\u7c7b\u578b\u5b9e\u53c2\u5c31\u662f\u7ea6\u675f\u7c7b\u578b\u96c6\u7684\u4e00\u5458\u3002\n\u5bf9\u4e8e\u666e\u901a\u63a5\u53e3\u7c7b\u578b\uff0c\u5176\u552f\u4e00\u5143\u7d20\u662f\u65b9\u6cd5\u7b7e\u540d\u548c\u5d4c\u5165\u7684\u666e\u901a\u63a5\u53e3\u7c7b\u578b\uff0c\u5176\u542b\u4e49\u5b8c\u5168\u76f8\u540c\uff1a\u5b9e\u73b0\u63a5\u53e3\u7c7b\u578b\u7684\u7c7b\u578b\u96c6\u5c31\u662f\u5176\u7c7b\u578b\u96c6\u4e2d\u7684\u7c7b\u578b\u96c6\u3002"),(0,i.kt)("h3",{id:"\u7ea6\u675f\u5143\u7d20"},"\u7ea6\u675f\u5143\u7d20"),(0,i.kt)("p",null,"\u666e\u901a\u63a5\u53e3\u7c7b\u578b\u7684\u5143\u7d20\u662f\u65b9\u6cd5\u7b7e\u540d\u548c\u5d4c\u5165\u5f0f\u63a5\u53e3\u7c7b\u578b\u3002\u5efa\u8bae\u5141\u8bb8\u5728\u7528\u4f5c\u7ea6\u675f\u7684\u63a5\u53e3\u7c7b\u578b\u4e2d\u4f7f\u7528\u53e6\u5916\u4e09\u4e2a\u5143\u7d20\u3002\u5982\u679c\u4f7f\u7528\u4e86\u8fd9\u4e9b\u9644\u52a0\u5143\u7d20\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\uff0c\u5219\u63a5\u53e3\u7c7b\u578b\u4e0d\u80fd\u7528\u4f5c\u666e\u901a\u7c7b\u578b\uff0c\u800c\u53ea\u80fd\u7528\u4f5c\u7ea6\u675f\u3002"),(0,i.kt)("h4",{id:"\u4efb\u610f\u7c7b\u578b\u7ea6\u675f\u5143\u7d20"},"\u4efb\u610f\u7c7b\u578b\u7ea6\u675f\u5143\u7d20"),(0,i.kt)("p",null,"\u65b0\u5143\u7d20\u53ea\u5141\u8bb8\u5217\u51fa\u4efb\u4f55\u7c7b\u578b\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u63a5\u53e3\u7c7b\u578b\u3002\u4f8b\u5982\uff1a",(0,i.kt)("inlineCode",{parentName:"p"},"type Integer interface{int}"),"\u3002\u5f53\u975e\u63a5\u53e3\u7c7b\u578b",(0,i.kt)("inlineCode",{parentName:"p"},"T"),"\u5217\u4e3a\u7ea6\u675f\u7684\u5143\u7d20\u65f6\uff0c\u5176\u7c7b\u578b\u96c6\u4ec5\u4e3a",(0,i.kt)("inlineCode",{parentName:"p"},"{T}"),"\u3002",(0,i.kt)("inlineCode",{parentName:"p"},"int"),"\u7684\u7c7b\u578b\u96c6\u662f",(0,i.kt)("inlineCode",{parentName:"p"},"{int}"),"\u3002\u7531\u4e8e\u7ea6\u675f\u7c7b\u578b\u96c6\u662f\u6240\u6709\u5143\u7d20\u7684\u7c7b\u578b\u96c6\u7684\u4ea4\u53c9\u90e8\u5206\uff0c\u56e0\u6b64",(0,i.kt)("inlineCode",{parentName:"p"},"Integer"),"\u7684\u7c7b\u578b\u96c6\u4e5f\u662f",(0,i.kt)("inlineCode",{parentName:"p"},"{int}"),"\u3002\u8fd9\u4e2a",(0,i.kt)("inlineCode",{parentName:"p"},"Integer"),"\u7ea6\u675f\u53ef\u4ee5\u88ab\u96c6\u5408",(0,i.kt)("inlineCode",{parentName:"p"},"{int}"),"\u4e2d\u7684\u4efb\u4f55\u7c7b\u578b\u6ee1\u8db3\u3002\n\u8be5\u7c7b\u578b\u53ef\u80fd\u662f\u5f15\u7528\u7c7b\u578b\u53c2\u6570\uff08\u6216\u591a\u4e2a\uff09\u7684\u7c7b\u578b\u6587\u5b57\uff0c\u4f46\u53ef\u80fd\u4e0d\u662f\u4e00\u4e2a\u4e3b\u7c7b\u578b\u53c2\u6570\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"              // EmbeddedParameter is INVALID.\n              type EmbeddedParameter[T any] interface {\n                T // INVALID: may not list a plain type parameter\n              }\n")),(0,i.kt)("h4",{id:"\u8fd1\u4f3c\u7ea6\u675f\u5143\u7d20"},"\u8fd1\u4f3c\u7ea6\u675f\u5143\u7d20"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"~T"),"\uff1a\u5e95\u5c42\u7c7b\u578b\u4e3a",(0,i.kt)("inlineCode",{parentName:"p"},"T"),"\u7684\u6240\u6709\u7c7b\u578b\u7684\u96c6\u5408\n\u5e95\u5c42\u7c7b\u578b\u6ee1\u8db3\uff1a"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"\u7c7b\u578b\u5b57\u9762\u91cf\uff0c\u4f8b\u5982",(0,i.kt)("inlineCode",{parentName:"li"},"[]byte"),"\u3001",(0,i.kt)("inlineCode",{parentName:"li"},"struct{ f int }")),(0,i.kt)("li",{parentName:"ol"},"\u5927\u90e8\u5206\u9884\u58f0\u660e\u7c7b\u578b\uff0c\u4f8b\u5982",(0,i.kt)("inlineCode",{parentName:"li"},"int"),"\u3001",(0,i.kt)("inlineCode",{parentName:"li"},"string"),"\uff08\u4e0d\u5305\u62ec",(0,i.kt)("inlineCode",{parentName:"li"},"error"),"\uff09\n\u5982\u679c",(0,i.kt)("inlineCode",{parentName:"li"},"T"),"\u662f\u7c7b\u578b\u53c2\u6570\u6216",(0,i.kt)("inlineCode",{parentName:"li"},"T"),"\u662f\u63a5\u53e3\u7c7b\u578b\uff0c\u5219\u4e0d\u5141\u8bb8\u4f7f\u7528",(0,i.kt)("inlineCode",{parentName:"li"},"~T"),"\u3002")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"              type MyString string\n              // AnyString matches any type whose underlying type is string.\n              // This includes, among others, the type string itself, and\n              // the type MyString.\n              type AnyString interface {\n                ~string\n              }\n              \n              // ApproximateMyString is INVALID.\n              type ApproximateMyString interface {\n                ~MyString // INVALID: underlying type of MyString is not MyString\n              }\n              \n              // ApproximateParameter is INVALID.\n              type ApproximateParameter[T any] interface {\n                ~T // INVALID: T is a type parameter\n              }\n")),(0,i.kt)("h4",{id:"\u8054\u5408\u5143\u7d20"},"\u8054\u5408\u5143\u7d20"),(0,i.kt)("p",null,"\u7ea6\u675f\u5143\u7d20\u7cfb\u5217\uff0c\u901a\u8fc7",(0,i.kt)("inlineCode",{parentName:"p"},"|"),"\u5206\u5272\uff0c\u662f\u6bcf\u4e2a\u5143\u7d20\u8054\u5408\u7684\u7c7b\u578b\u96c6\uff0c\u6bcf\u4e2a\u5143\u7d20\u5fc5\u987b\u662f\u4e0d\u540c\u7c7b\u578b"),(0,i.kt)("h3",{id:"\u57fa\u4e8e\u7c7b\u578b\u96c6\u7684\u8fd0\u7b97\u7b26"},"\u57fa\u4e8e\u7c7b\u578b\u96c6\u7684\u8fd0\u7b97\u7b26"),(0,i.kt)("p",null,"\u7c7b\u578b\u96c6\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u5728\u6cdb\u578b\u65b9\u6cd5\u4e2d\u4f7f\u7528\u8fd0\u7b97\u7b26\uff0c\u4f8b\u5982",(0,i.kt)("inlineCode",{parentName:"p"},"<"),"\u3002\u5728\u6cdb\u578b\u65b9\u6cd5\u4e2d\u5c31\u53ef\u4ee5\u4f7f\u7528\u7ea6\u675f\u7c7b\u578b\u6240\u652f\u6301\u7684\u8fd0\u7b97\u7b26\u3002"),(0,i.kt)("h3",{id:"\u7ea6\u675f\u7684\u6bd4\u8f83\u7c7b\u578b"},"\u7ea6\u675f\u7684\u6bd4\u8f83\u7c7b\u578b"),(0,i.kt)("p",null,"\u8fd0\u7b97\u7b26\u53ea\u80fd\u4e0e\u8bed\u8a00\u9884\u5148\u58f0\u660e\u7684\u7c7b\u578b\u4e00\u8d77\u4f7f\u7528\u7684\u89c4\u5219\u6709\u4e24\u4e2a\u4f8b\u5916\u60c5\u51b5",(0,i.kt)("inlineCode",{parentName:"p"},"=="),"\u3001",(0,i.kt)("inlineCode",{parentName:"p"},"!="),"\uff0c\u8fd9\u4e24\u4e2a\u8fd0\u7b97\u7b26\u4ec5\u5bf9\u7ed3\u6784\u4f53\u3001\u6570\u7ec4\u548c\u63a5\u53e3\u7c7b\u578b\u5141\u8bb8\u4f7f\u7528\u3002\n\u4e3a\u4e86\u5b9a\u4e49\u63a5\u53d7\u6bd4\u8f83\u7c7b\u578b\u7684\u7ea6\u675f\uff0c\u5f15\u5165",(0,i.kt)("inlineCode",{parentName:"p"},"comparable"),"\u3002",(0,i.kt)("inlineCode",{parentName:"p"},"comparable"),"\u7ea6\u675f\u7684\u7c7b\u578b\u96c6\u662f\u6240\u6709\u6bd4\u8f83\u7c7b\u578b\u7684\u96c6\u5408\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"          // Index returns the index of x in s, or -1 if not found.\n          func Index[T comparable](s []T, x T) int {\n            for i, v := range s {\n              // v and x are type T, which has the comparable\n              // constraint, so we can use == here.\n              if v == x {\n                return i\n              }\n            }\n            return -1\n          }\n          \n          // ComparableHasher is a type constraint that matches all\n          // comparable types with a Hash method.\n          type ComparableHasher interface {\n            comparable\n            Hash() uintptr\n          }\n          \n          // ImpossibleConstraint is a type constraint that no type can satisfy,\n          // because slice types are not comparable.\n          type ImpossibleConstraint interface {\n            comparable\n            []int\n          }\n")),(0,i.kt)("h2",{id:"\u76f8\u4e92\u5f15\u7528\u7684\u7c7b\u578b\u53c2\u6570"},"\u76f8\u4e92\u5f15\u7528\u7684\u7c7b\u578b\u53c2\u6570"),(0,i.kt)("p",null,"\u5728\u5355\u4e2a\u7c7b\u578b\u53c2\u6570\u5217\u8868\u4e2d\uff0c\u7ea6\u675f\u53ef\u4ee5\u5f15\u7528\u4efb\u4f55\u5176\u4ed6\u7c7b\u578b\u53c2\u6570\uff0c\u751a\u81f3\u662f\u7a0d\u540e\u5728\u540c\u4e00\u5217\u8868\u4e2d\u58f0\u660e\u7684\u7c7b\u578b\u53c2\u6570\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"      package graph\n      // NodeConstraint is the type constraint for graph nodes:\n      // they must have an Edges method that returns the Edge's\n      // that connect to this Node.\n      type NodeConstraint[Edge any] interface {\n        Edges() []Edge\n      }\n      \n      // EdgeConstraint is the type constraint for graph edges:\n      // they must have a Nodes method that returns the two Nodes\n      // that this edge connects.\n      type EdgeConstraint[Node any] interface {\n        Nodes() (from, to Node)\n      }\n      \n      // Graph is a graph composed of nodes and edges.\n      type Graph[Node NodeConstraint[Edge], Edge EdgeConstraint[Node]] struct { ... }\n      \n      // New returns a new graph given a list of nodes.\n      func New[Node NodeConstraint[Edge], Edge EdgeConstraint[Node]] (nodes []Node) *Graph {\n        ...\n      }\n      \n      // ShortestPath returns the shortest path between two nodes,\n      // as a list of edges.\n      func (g *Graph[Node, Edge]) ShortestPath(from, to Node) []Edge {\n        ... \n      }\n      \n      \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n      package demo\n      \n      // Vertex is a node in a graph.\n      type Vertex struct { ... }\n      \n      // Edges returns the edges connected to v.\n      func (v *Vertex) Edges() []*FromTo { ... }\n      \n      // FromTo is an edge in a graph.\n      type FromTo struct { ... }\n      \n      // Nodes returns the nodes that ft connects.\n      func (ft *FromTo) Nodes() (*Vertex, *Vertex) { ... }\n      \n      \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n      var g = graph.New[*Vertex, *FromTo]([]*Vertex{...})\n      \n      type NodeInterface interface { Edges() []EdgeInterface }\n      type EdgeInterface interface { Nodes() (NodeInterface, NodeInterface) }\n      \n      // \u5141\u8bb8\u8fd9\u4e48\u5b9a\u4e49\uff0c\u4f46\u4e0d\u5efa\u8bae\n      var g = graph.New[*NodeInterface, *EdgeInterface]([]*NodeInterface{...})\n")),(0,i.kt)("h2",{id:"\u7c7b\u578b\u63a8\u65ad"},"\u7c7b\u578b\u63a8\u65ad"),(0,i.kt)("p",null,"\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u4f7f\u7528\u7c7b\u578b\u63a8\u65ad\u6765\u907f\u514d\u663e\u5f0f\u5199\u51fa\u90e8\u5206\u6216\u5168\u90e8\u7c7b\u578b\u53c2\u6570\u3002\u53ef\u4ee5\u5bf9\u51fd\u6570\u8c03\u7528\u4f7f\u7528\u51fd\u6570\u5b9e\u53c2\u7c7b\u578b\u63a8\u65ad\uff0c\u4ece\u975e\u7c7b\u578b\u5165\u53c2\u7684\u7c7b\u578b\u63a8\u65ad\u7c7b\u578b\u5b9e\u53c2\u3002\u53ef\u4ee5\u4f7f\u7528\u7ea6\u675f\u7c7b\u578b\u63a8\u65ad\u4ece\u5df2\u77e5\u7c7b\u578b\u5165\u53c2\u63a8\u65ad\u672a\u77e5\u7c7b\u578b\u5b9e\u53c2\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"      func Map[F, T any](s []F, f func(F) T) []T { ... }\n      \n      var s []int\n      f := func(i int) int64 { return int64(i) }\n      var r []int64\n      // Specify both type arguments explicitly.\n      r = Map[int, int64](s, f)\n      // Specify just the first type argument, for F,\n      // and let T be inferred.\n      r = Map[int](s, f)\n      // Don't specify any type arguments, and let both be inferred.\n      r = Map(s, f)\n")),(0,i.kt)("h3",{id:"\u7c7b\u578b\u7edf\u4e00"},"\u7c7b\u578b\u7edf\u4e00"),(0,i.kt)("p",null,"\u7c7b\u578b\u7edf\u4e00\u57fa\u4e8e\u7c7b\u578b\u63a8\u65ad\uff0c\u5e94\u7528\u4e8e\u4e24\u79cd\u7c7b\u578b\uff0c\u6ee1\u8db3\u4ee5\u4e0b\u4e00\u79cd\u6216\u90fd\u6ee1\u8db3\uff1a"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"\u662f\u7c7b\u578b\u53c2\u6570"),(0,i.kt)("li",{parentName:"ol"},"\u5305\u542b\u7c7b\u578b\u53c2\u6570")),(0,i.kt)("p",null,"\u7c7b\u578b\u7edf\u4e00\u901a\u8fc7\u6bd4\u8f83\u7c7b\u578b\u7ed3\u6784\u5b9e\u73b0\uff0c\u5ffd\u7565\u7c7b\u578b\u53c2\u6570\u7684\u7ed3\u6784\u5fc5\u987b\u76f8\u540c\uff0c\u5176\u4ed6\u7c7b\u578b\u5fc5\u987b\u7b49\u6548\u3002\n\u4f8b\u5982\uff1a",(0,i.kt)("inlineCode",{parentName:"p"},"T1"),"\u3001",(0,i.kt)("inlineCode",{parentName:"p"},"T2"),"\u662f\u7c7b\u578b\u53c2\u6570\uff0c",(0,i.kt)("inlineCode",{parentName:"p"},"[]map[int]bool"),"\u53ef\u4ee5\u4e0e\u4ee5\u4e0b\u7c7b\u578b\u7edf\u4e00\uff1a"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"[]map[int]bool")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"T1(T1 matches []map[int]bool)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"[]T1(T1 matches map[int]bool)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"[]map[T1]T2(T1 matches int, T2 matches bool)"))),(0,i.kt)("h3",{id:"\u51fd\u6570\u5b9e\u53c2\u7c7b\u578b\u63a8\u65ad"},"\u51fd\u6570\u5b9e\u53c2\u7c7b\u578b\u63a8\u65ad"),(0,i.kt)("p",null,"\u552f\u4e00\u53ef\u4ee5\u63a8\u65ad\u7684\u7c7b\u578b\u5b9e\u53c2\u662f\u90a3\u4e9b\u7528\u4e8e\u51fd\u6570\uff08\u975e\u7c7b\u578b\uff09\u8f93\u5165\u53c2\u6570\u7c7b\u578b\u7684\u53c2\u6570\u3002\u5982\u679c\u67d0\u4e9b\u7c7b\u578b\u5b9e\u53c2\u4ec5\u7528\u4e8e\u51fd\u6570\u7684\u7ed3\u679c\u53c2\u6570\u7c7b\u578b\uff0c\u6216\u4ec5\u7528\u4e8e\u51fd\u6570\u4f53\uff0c\u5219\u65e0\u6cd5\u4f7f\u7528\u51fd\u6570\u5b9e\u53c2\u7c7b\u578b\u63a8\u65ad\u6765\u63a8\u65ad\u8fd9\u4e9b\u7c7b\u578b\u5b9e\u53c2\u3002\n\u51fd\u6570\u5b9e\u53c2\u7c7b\u578b\u63a8\u65ad\u662f\u4e00\u79cd\u53cc\u8fc7\u7a0b\u7b97\u6cd5\uff0c\u4f7f\u7528\u53cc\u8fc7\u7a0b\u7b97\u6cd5\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u540e\u9762\u7684\u7b97\u6cd5\u53ef\u4ee5\u786e\u5b9a\u975e\u7c7b\u578b\u7ea6\u675f\u7684\u7c7b\u578b\uff1a"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"\u5ffd\u7565\u8c03\u7528\u8005\u4fa7\u7684\u975e\u7c7b\u578b\u7ea6\u675f\u4ee5\u53ca\u65b9\u6cd5\u5b9a\u4e49\u4e2d\u7684\u7ec4\u5408\u7c7b\u578b\u3002\u7edf\u4e00\u5217\u8868\u4e2d\u7684\u76f8\u5e94\u7c7b\u578b\u3002\u8fd9\u5c06\u63d0\u4f9b\u51fd\u6570\u7aef\u7684\u7c7b\u578b\u53c2\u6570\u4e0e\u8c03\u7528\u65b9\u7aef\u7684\u7c7b\u578b\u4e4b\u95f4\u7684\u5173\u8054\u3002\u5982\u679c\u540c\u4e00\u7c7b\u578b\u53c2\u6570\u5728\u51fd\u6570\u7aef\u51fa\u73b0\u591a\u6b21\uff0c\u5219\u5b83\u5c06\u5339\u914d\u8c03\u7528\u65b9\u7aef\u7684\u591a\u4e2a\u5b9e\u53c2\u7c7b\u578b\u3002\u5982\u679c\u8fd9\u4e9b\u8c03\u7528\u65b9\u7c7b\u578b\u4e0d\u7b49\u4ef7\uff0c\u5c31\u4f1a\u62a5\u544a\u4e00\u4e2a\u9519\u8bef\u3002"),(0,i.kt)("li",{parentName:"ol"},"\u68c0\u67e5\u8c03\u7528\u7aef\u975e\u7c7b\u578b\u7ea6\u675f\u3002\u5982\u679c\u4e0d\u5b58\u5728\u975e\u7c7b\u578b\u7ea6\u675f\u6216\u5728\u76f8\u5e94\u65b9\u6cd5\u7c7b\u578b\u7684\u7c7b\u578b\u53c2\u6570\u5df2\u7ecf\u5339\u914d\u5176\u4ed6\u8f93\u5165\u7c7b\u578b\uff0c\u5219\u7c7b\u578b\u63a8\u65ad\u7ed3\u675f\u3002")),(0,i.kt)("p",null,"\u4f8b\u5b50\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"              s1 := []int{1, 2, 3}\n              Print(s1)\n")),(0,i.kt)("p",null,"\u5c06",(0,i.kt)("inlineCode",{parentName:"p"},"[]int"),"\u4e0e",(0,i.kt)("inlineCode",{parentName:"p"},"[]T"),"\u6bd4\u8f83\uff0c",(0,i.kt)("inlineCode",{parentName:"p"},"int"),"\u5339\u914d",(0,i.kt)("inlineCode",{parentName:"p"},"T"),"\uff0c\u63a8\u65ad\u7ed3\u675f\u3002",(0,i.kt)("inlineCode",{parentName:"p"},"T"),"\u5c31\u662f",(0,i.kt)("inlineCode",{parentName:"p"},"int"),"\uff0c\u56e0\u6b64",(0,i.kt)("inlineCode",{parentName:"p"},"Print"),"\u5c31\u662f\u8c03\u7528",(0,i.kt)("inlineCode",{parentName:"p"},"Print[int]")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"              // Map calls the function f on every element of the slice s,\n              // returning a new slice of the results.\n              func Map[F, T any](s []F, f func(F) T) []T {\n                r := make([]T, len(s))\n                for i, v := range s {\n                  r[i] = f(v)\n                }\n                return r\n              }\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"F"),"\u3001",(0,i.kt)("inlineCode",{parentName:"p"},"T"),"\u90fd\u4f5c\u4e3a\u5165\u53c2\uff0c\u6240\u4ee5\u65b9\u6cd5\u5b9e\u53c2\u7c7b\u578b\u63a5\u53e3\u662f\u53ef\u884c\u7684\u3002",(0,i.kt)("inlineCode",{parentName:"p"},"strs := Mqp([]int{1, 2, 3}, strconv.Itoa)"),"\u3002\u53ef\u4ee5\u5c06",(0,i.kt)("inlineCode",{parentName:"p"},"[]int"),"\u5339\u914d",(0,i.kt)("inlineCode",{parentName:"p"},"[]F"),"\uff0c",(0,i.kt)("inlineCode",{parentName:"p"},"F"),"\u5339\u914d",(0,i.kt)("inlineCode",{parentName:"p"},"int"),"\u3002",(0,i.kt)("inlineCode",{parentName:"p"},"strconv.Itoa"),"\u662f",(0,i.kt)("inlineCode",{parentName:"p"},"func(int) string"),"\uff0c\u56e0\u6b64",(0,i.kt)("inlineCode",{parentName:"p"},"F"),"\u5bf9\u5e94",(0,i.kt)("inlineCode",{parentName:"p"},"int"),"\uff0c",(0,i.kt)("inlineCode",{parentName:"p"},"T"),"\u5bf9\u5e94",(0,i.kt)("inlineCode",{parentName:"p"},"string"),"\u3002",(0,i.kt)("inlineCode",{parentName:"p"},"F"),"\u5339\u914d\u4e862\u6b21",(0,i.kt)("inlineCode",{parentName:"p"},"int"),"\u3002\u63a8\u65ad\u6210\u529f\uff0c\u56e0\u6b64\u5339\u914d\u4e3a",(0,i.kt)("inlineCode",{parentName:"p"},"Map[int, string]"),"\u3002\n\u51fd\u6570\u5b9e\u53c2\u7c7b\u578b\u63a8\u65ad\u662f\u5728\u4e0d\u8003\u8651\u7ea6\u675f\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u7684\u3002\u9996\u5148\uff0c\u4f7f\u7528\u51fd\u6570\u5b9e\u53c2\u7c7b\u578b\u63a8\u65ad\u6765\u786e\u5b9a\u8981\u7528\u4e8e\u51fd\u6570\u7684\u7c7b\u578b\u5b9e\u53c2\uff0c\u7136\u540e\uff0c\u5982\u679c\u6210\u529f\uff0c\u5c06\u68c0\u67e5\u8fd9\u4e9b\u7c7b\u578b\u5b9e\u53c2\u662f\u5426\u5b9e\u73b0\u4e86\u7ea6\u675f\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09\u3002\u6ce8\u610f\uff0c\u5728\u7684\u51fd\u6570\u5b9e\u53c2\u7c7b\u578b\u63a8\u65ad\u6210\u529f\u4e4b\u540e\uff0c\u7f16\u8bd1\u5668\u4ecd\u5fc5\u987b\u68c0\u67e5\u5b9e\u53c2\u662f\u5426\u53ef\u4ee5\u5206\u914d\u7ed9\u53c2\u6570\uff0c\u5c31\u50cf\u4efb\u4f55\u51fd\u6570\u8c03\u7528\u4e00\u6837\u3002"),(0,i.kt)("h3",{id:"\u7ea6\u675f\u7c7b\u578b\u63a8\u65ad"},"\u7ea6\u675f\u7c7b\u578b\u63a8\u65ad"),(0,i.kt)("p",null,"\u7ea6\u675f\u7c7b\u578b\u63a8\u65ad\u5141\u8bb8\u57fa\u4e8e\u7c7b\u578b\u53c2\u6570\u7ea6\u675f\u4ece\u53e6\u4e00\u4e2a\u7c7b\u578b\u5b9e\u53c2\u63a8\u65ad\u4e00\u4e2a\u7c7b\u578b\u5b9e\u53c2\u3002\n\u5b9e\u7528\u6027\uff1a\u5f53\u51fd\u6570\u60f3\u8981\u4e3a\u67d0\u4e2a\u5176\u4ed6\u7c7b\u578b\u53c2\u6570\u7684\u5143\u7d20\u5b9a\u4e49\u7c7b\u578b\u540d\u65f6\uff0c\u6216\u8005\u5f53\u51fd\u6570\u60f3\u8981\u5bf9\u57fa\u4e8e\u67d0\u4e2a\u5176\u4ed6\u7c7b\u578b\u53c2\u6570\u7684\u7c7b\u578b\u5e94\u7528\u7ea6\u675f\u65f6\n\u53ea\u6709\u5f53\u67d0\u4e2a\u7c7b\u578b\u53c2\u6570\u7684\u7ea6\u675f\u4e2d\u7684\u67d0\u4e2a\u7c7b\u578b\u96c6\u4e2d\u53ea\u6709\u4e00\u4e2a\u7c7b\u578b\uff0c\u6216\u8005\u67d0\u4e2a\u7c7b\u578b\u96c6\u4e2d\u6bcf\u4e2a\u7c7b\u578b\u7684\u57fa\u7840\u7c7b\u578b\u90fd\u662f\u540c\u4e00\u7c7b\u578b\u65f6\uff0c\u7ea6\u675f\u7c7b\u578b\u63a8\u65ad\u624d\u80fd\u63a8\u65ad\u7c7b\u578b\u3002\u8fd9\u4e24\u79cd\u60c5\u51b5\u7565\u6709\u4e0d\u540c\uff0c\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u7c7b\u578b\u96c6\u5177\u6709\u660e\u786e\u7684\u4e00\u79cd\u7c7b\u578b\uff0c\u5355\u4e2a\u7c7b\u578b\u4e0d\u5fc5\u662f\u5176\u81ea\u8eab\u7684\u57fa\u7840\u7c7b\u578b\u3002\u65e0\u8bba\u54ea\u79cd\u65b9\u5f0f\uff0c\u5355\u4e2a\u7c7b\u578b\u90fd\u79f0\u4e3a\u7ed3\u6784\u7c7b\u578b\uff0c\u7ea6\u675f\u79f0\u4e3a\u7ed3\u6784\u7ea6\u675f\u3002\u7ed3\u6784\u7c7b\u578b\u63cf\u8ff0\u4e86\u7c7b\u578b\u53c2\u6570\u6240\u9700\u7684\u7ed3\u6784\u3002\u7ed3\u6784\u7ea6\u675f\u4e5f\u53ef\u4ee5\u5b9a\u4e49\u65b9\u6cd5\uff0c\u4f46\u8fd9\u4e9b\u65b9\u6cd5\u88ab\u7ea6\u675f\u7c7b\u578b\u63a8\u7406\u5ffd\u7565\u3002\u4e3a\u4e86\u4f7f\u7ea6\u675f\u7c7b\u578b\u63a8\u65ad\u6709\u7528\uff0c\u901a\u5e38\u5c06\u4f7f\u7528\u4e00\u4e2a\u6216\u591a\u4e2a\u7c7b\u578b\u53c2\u6570\u6765\u5b9a\u4e49\u7ed3\u6784\u7c7b\u578b\u3002\n\u4ec5\u5f53\u81f3\u5c11\u6709\u4e00\u4e2a\u7c7b\u578b\u53c2\u6570\u7684\u7c7b\u578b\u53c2\u6570\u672a\u77e5\u65f6\uff0c\u624d\u4f1a\u5c1d\u8bd5\u7ea6\u675f\u7c7b\u578b\u63a8\u65ad\u3002\n\u63a8\u65ad\u7b97\u6cd5\uff1a"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"\u521b\u5efa\u4ece\u7c7b\u578b\u53c2\u6570\u5230\u7c7b\u578b\u5b9e\u53c2\u7684\u6620\u5c04\u3002\u6839\u636e\u5df2\u77e5\u7c7b\u578b\u5b9e\u53c2\u7684\u7c7b\u578b\u53c2\u6570\u521d\u59cb\u5316\u6620\u5c04\u3002"),(0,i.kt)("li",{parentName:"ol"},"\u5bf9\u4e8e\u6bcf\u4e2a\u7ed3\u6784\u7ea6\u675f\u7684\u7c7b\u578b\u53c2\u6570\uff0c\u7edf\u4e00\u7c7b\u578b\u53c2\u6570\u4e0e\u7ed3\u6784\u7c7b\u578b\u3002\u8fd9\u5c06\u7c7b\u578b\u53c2\u6570\u4e0e\u5176\u7ea6\u675f\u76f8\u5173\u8054\u3002\u5c06\u7ed3\u679c\u6dfb\u52a0\u5230\u7ef4\u62a4\u7684\u6620\u5c04\u4e2d\u3002"),(0,i.kt)("li",{parentName:"ol"},"\u7edf\u4e00\u7684\u8fc7\u7a0b\u4e2d\uff0c\u627e\u5230\u7c7b\u578b\u53c2\u6570\u7684\u5173\u8054\uff0c\u4e5f\u52a0\u5165\u6620\u5c04\u4e2d\u3002"),(0,i.kt)("li",{parentName:"ol"},"\u5f53\u627e\u5230\u4efb\u4f55\u4e00\u4e2a\u7c7b\u578b\u53c2\u6570\u7684\u591a\u4e2a\u5173\u8054\u65f6\uff0c\u7edf\u4e00\u8fd9\u4e9b\u5173\u8054\u4ee5\u751f\u6210\u5355\u4e2a\u6620\u5c04\u6761\u76ee\u3002"),(0,i.kt)("li",{parentName:"ol"},"\u5982\u679c\u4e00\u4e2a\u7c7b\u578b\u53c2\u6570\u4e0e\u53e6\u4e00\u4e2a\u7c7b\u578b\u53c2\u6570\u76f4\u63a5\u5173\u8054\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u4eec\u5fc5\u987b\u90fd\u4e0e\u540c\u4e00\u7c7b\u578b\u5339\u914d\uff0c\u90a3\u4e48\u5c06\u6bcf\u4e2a\u53c2\u6570\u7684\u5173\u8054\u7edf\u4e00\u5728\u4e00\u8d77\u3002"),(0,i.kt)("li",{parentName:"ol"},"\u4ee5\u4e0a\u4efb\u610f\u6b65\u9aa4\u5931\u8d25\uff0c\u7c7b\u578b\u63a8\u65ad\u5c31\u5931\u8d25")),(0,i.kt)("p",null,"\u5728\u5c06\u6240\u6709\u7c7b\u578b\u53c2\u6570\u4e0e\u7ed3\u6784\u7ea6\u675f\u5408\u5e76\u4e4b\u540e\uff0c\u5c31\u6709\u4e86\u5404\u79cd\u7c7b\u578b\u53c2\u6570\u5230\u7c7b\u578b\uff08\u53ef\u80fd\u662f\u6216\u5305\u542b\u5176\u4ed6\u7c7b\u578b\u53c2\u6570\uff09\u7684\u6620\u5c04\u3002\u7ee7\u7eed\u67e5\u627e\u7c7b\u578b\u53c2\u6570",(0,i.kt)("inlineCode",{parentName:"p"},"T"),"\u5230\u5b8c\u5168\u5df2\u77e5\u7684\u7c7b\u578b\u5b9e\u53c2",(0,i.kt)("inlineCode",{parentName:"p"},"A"),"\u7684\u6620\u5c04\uff0c\u8be5\u7c7b\u578b\u5b9e\u53c2\u4e0d\u5305\u542b\u4efb\u4f55\u7c7b\u578b\u53c2\u6570\u3002\n\u5728\u6620\u5c04\u7684\u7c7b\u578b\u53c2\u6570\u4e2d\u51fa\u73b0",(0,i.kt)("inlineCode",{parentName:"p"},"T"),"\u7684\u4efb\u4f55\u5730\u65b9\uff0c\u90fd\u5c06",(0,i.kt)("inlineCode",{parentName:"p"},"T"),"\u66ff\u6362\u4e3a",(0,i.kt)("inlineCode",{parentName:"p"},"A"),"\u3002\n\u91cd\u590d\u6b64\u8fc7\u7a0b\uff0c\u76f4\u5230\u66ff\u6362\u5b8c\u6bcf\u4e2a\u7c7b\u578b\u53c2\u6570\u3002\n\u5f53\u7ea6\u675f\u7c7b\u578b\u63a8\u65ad\u53ef\u884c\u65f6\uff0c\u5904\u7406\u6d41\u7a0b\uff1a"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u6839\u636e\u5df2\u77e5\u7c7b\u578b\u5b9e\u53c2\u6784\u5efa\u6620\u5c04"),(0,i.kt)("li",{parentName:"ul"},"\u5e94\u7528\u7ea6\u675f\u7c7b\u578b\u63a8\u65ad"),(0,i.kt)("li",{parentName:"ul"},"\u6839\u636e\u7c7b\u578b\u5b9e\u53c2\u5e94\u7528\u51fd\u6570\u7c7b\u578b\u63a8\u65ad"),(0,i.kt)("li",{parentName:"ul"},"\u518d\u6b21\u5e94\u7528\u7ea6\u675f\u7c7b\u578b\u63a8\u65ad"),(0,i.kt)("li",{parentName:"ul"},"\u4f7f\u7528\u4efb\u4f55\u5269\u4f59\u975e\u7c7b\u578b\u5b9e\u53c2\u7684\u9ed8\u8ba4\u7c7b\u578b\u51fd\u6570\u65b9\u6cd5\u7c7b\u578b\u63a8\u65ad"),(0,i.kt)("li",{parentName:"ul"},"\u518d\u6b21\u5e94\u7528\u7ea6\u675f\u7c7b\u578b\u63a8\u65ad")),(0,i.kt)("h3",{id:"\u5143\u7d20\u7ea6\u675f\u793a\u4f8b"},"\u5143\u7d20\u7ea6\u675f\u793a\u4f8b"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"          // Double returns a new slice that contains all the elements of s, doubled.\n          func Double[E constraints.Integer](s []E) []E {\n            r := make([]E, len(s))\n            for i, v := range s {\n              r[i] = v + v\n            }\n            return r\n          }\n          \n          // MySlice is a slice of ints.type \n          MySlice []int\n          \n          // The type of V1 will be []int, not MySlice.\n          // Here we are using function argument type inference,\n          // but not constraint type inference.\n          var V1 = Double(MySlice{1})\n          \n          // DoubleDefined returns a new slice that contains the elements of s,\n          // doubled, and also has the same type as s.\n          func DoubleDefined[S ~[]E, E constraints.Integer](s S) S {\n            // Note that here we pass S to make, where above we passed []E.\n            r := make(S, len(s))\n            for i, v := range s {\n              r[i] = v + v\n            }\n            return r\n          }\n          \n          // The type of V2 will be MySlice.\n          var V2 = DoubleDefined[MySlice, int](MySlice{1})\n          // \u65b9\u6cd5\u5b9e\u53c2\u7c7b\u578b\u63a8\u65ad\u672c\u8eab\u4e0d\u8db3\u4ee5\u63a8\u65ad\u6b64\u5904\u7684\u7c7b\u578b\u5b9e\u53c2\n          // \u56e0\u4e3a\u7c7b\u578b\u53c2\u6570E\u672a\u7528\u4e8e\u4efb\u4f55\u8f93\u5165\u53c2\u6570\u3002\u4f46\u65b9\u6cd5\u5b9e\u53c2\u7c7b\u578b\u63a8\u65ad\u548c\u7ea6\u675f\u7c7b\u578b\u63a8\u65ad\u7684\u7ec4\u5408\u662f\u6709\u6548\u7684\u3002\n          \n          // The type of V3 will be MySlice.\n          var V3 = DoubleDefined(MySlice{1})\n          // \u9996\u5148\u5e94\u7528\u65b9\u6cd5\u5b9e\u53c2\u7c7b\u578b\u63a8\u65ad\uff0c\u53ef\u4ee5\u770b\u51fa\u5b9e\u53c2\u7c7b\u578b\u662fMySlice\n          // \u65b9\u6cd5\u5b9e\u53c2\u7c7b\u578b\u63a8\u65ad\u5339\u914d\u7c7b\u578b\u53c2\u6570S\u4e3aMySlice.\n          // \u63a5\u7740\u8fdb\u884c\u7ea6\u675f\u7c7b\u578b\u63a8\u65ad\uff0c\u5df2\u77e5\u4e00\u4e2a\u7c7b\u578b\u5b9e\u53c2S\uff0c\u770b\u51fa\u7c7b\u578b\u5b9e\u53c2S\u662f\u7ed3\u6784\u4f53\u7c7b\u578b\u7ea6\u675f\n          // \u521b\u5efa\u5df2\u77e5\u7c7b\u578b\u5b9e\u53c2\u6620\u5c04 {S -> MySlice}\n          // \u7edf\u4e00\u7ea6\u675f\u7c7b\u578b\u96c6\u4e2d\u53ea\u6709\u5355\u4e00\u7c7b\u578b\u7684\u7ed3\u6784\u4f53\u7ea6\u675f\u7684\u6bcf\u4e2a\u7c7b\u578b\u53c2\u6570\u3002\u6b64\u60c5\u51b5\u4e0b\uff0c\u7ed3\u6784\u4f53\u7ea6\u675f\u662f ~[]E\uff0c\u7ed3\u6784\u4f53\u7c7b\u578b\u662f[]E\n          // \u56e0\u6b64\u5c06S\u7edf\u4e00\u6210[]E\uff0c\u56e0\u4e3a\u5df2\u7ecf\u6709S\u7684\u6620\u5c04\uff0c\u53ef\u4ee5\u5c06[]E\u7edf\u4e00\u6210MySlice\uff0c\u56e0MySlice\u5b9a\u4e49\u662f[]int\uff0c\u6240\u4ee5E\u5c31\u662fint\n          // \u5f97\u51fa {S -> MySlice, E -> int}\n          // \u6700\u7ec8\u8c03\u7528DoucleDefined\u7684\u7c7b\u578b\u5b9e\u53c2\u5c31\u662f [MySlice, int]\n")),(0,i.kt)("h3",{id:"\u6307\u9488\u65b9\u6cd5\u793a\u4f8b"},"\u6307\u9488\u65b9\u6cd5\u793a\u4f8b"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'          // Setter is a type constraint that requires that the type\n          // implement a Set method that sets the value from a string.\n          type Setter interface {\n            Set(string)\n          }\n          \n          // FromStrings takes a slice of strings and returns a slice of T,\n          // calling the Set method to set each returned value.\n          //\n          // Note that because T is only used for a result parameter,\n          // function argument type inference does not work when calling\n          // this function.\n          func FromStrings[T Setter](s []string) []T {\n            result := make([]T, len(s))\n            for i, v := range s {\n              result[i].Set(v)\n            }\n            return result\n          }\n          \n          --------------------------------------------------------------------\n          // Settable is an integer type that can be set from a string.\n          type Settable int\n          \n          // Set sets the value of *p from a string.\n          func (p *Settable) Set(s string) {\n            i, _ := strconv.Atoi(s) // real code should not ignore the error\n            *p = Settable(i)\n          }\n          \n          func F() {\n            // INVALID not compile\n            nums := FromStrings[Settable]([]string{"1", "2"})\n            \n            // INVALID compile but panic at run time, nil error\n            nums := FromStrings[*Settable]([]string{"1", "2"})\n            // Here we want nums to be []Settable{1, 2}\n            ....\n          }\n          \n          ------------------------------------------------------------------------\n          // Setter2 is a type constraint that requires that the type\n          // implement a Set method that sets the value from a string,\n          // and also requires that the type be a pointer to its type parameter.\n          type Setter2[B any] interface {\n            Set(string)\n            *B // non-interface type constraint element\n          }\n          \n          // FromStrings2 takes a slice of strings and returns a slice of T,\n          // calling the Set method to set each returned value.\n          //\n          // We use two different type parameters so that we can return\n          // a slice of type T but call methods on *T aka PT.\n          // The Setter2 constraint ensures that PT is a pointer to T.\n          func FromStrings2[T any, PT Setter2[T]](s []string) []T {\n            result := make([]T, len(s))\n            for i, v := range s {\n              // The type of &result[i] is *T which is in the type set\n              // of Setter2, so we can convert it to PT.\n              p := PT(&result[i])\n              // PT has a Set method.\n              p.Set(v)\n            }\n            return result\n          }\n          \n          func F2() {\n            // FromStrings2 takes two type parameters.\n            // The second parameter must be a pointer to the first.\n            // Settable is as above.\n            nums := FromStrings2[Settable, *Settable]([]string{"1", "2"})\n            // Now nums is []Settable{1, 2}\n            ....\n          }\n          \n          // \u7ea6\u675f\u7c7b\u578b\u63a8\u65ad\u53ef\u4ee5\u7b80\u5316\u4e0a\u8ff0\u5b9a\u4e49\n          nums := FromStrings2[Settable]([]string{"1", "2"})\n          // {T -> Settable}\uff0c{T -> Settable, PT -> *T}\uff0c{T -> Settable, PT -> *Settable}\n')),(0,i.kt)("h3",{id:"\u7ea6\u675f\u7c7b\u578b\u63a8\u65ad\u540e\u4ecd\u5e94\u7528\u7ea6\u675f"},"\u7ea6\u675f\u7c7b\u578b\u63a8\u65ad\u540e\u4ecd\u5e94\u7528\u7ea6\u675f"),(0,i.kt)("p",null,"\u5373\u4f7f\u57fa\u4e8e\u7ea6\u675f\u4f7f\u7528\u7ea6\u675f\u7c7b\u578b\u63a8\u65ad\u63a8\u65ad\u7c7b\u578b\u5b9e\u53c2\uff0c\u4e5f\u5fc5\u987b\u5728\u786e\u5b9a\u7c7b\u578b\u5b9e\u53c2\u540e\u68c0\u67e5\u7ea6\u675f\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'          // Unsettable is a type that does not have a Set method.\n          type Unsettable int\n          func F4() {\n            // This call is INVALID.\n            nums := FromStrings2[Unsettable]([]string{"1", "2"})\n            ...\n          }\n')),(0,i.kt)("h2",{id:"\u4f7f\u7528\u5728\u7ea6\u675f\u4e2d\u5f15\u7528\u81ea\u8eab\u7684\u7c7b\u578b"},"\u4f7f\u7528\u5728\u7ea6\u675f\u4e2d\u5f15\u7528\u81ea\u8eab\u7684\u7c7b\u578b"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"      // Index returns the index of e in s, or -1 if not found.\n      func Index[T Equaler](s []T, e T) int {\n        for i, v := range s {\n          if e.Equal(v) {\n            return i\n          }\n        }\n        return -1\n      }\n      \n      // Index returns the index of e in s, or -1 if not found.\n      func Index[T interface { Equal(T) bool }](s []T, e T) int {\n        // same as above\n      }\n      \n      // equalInt is a version of int that implements Equaler.\n      type equalInt int\n      \n      // The Equal method lets equalInt implement the Equaler constraint.\n      func (a equalInt) Equal(b equalInt) bool { return a == b }\n      \n      // indexEqualInts returns the index of e in s, or -1 if not found.\n      func indexEqualInt(s []equalInt, e equalInt) int {\n        // The type argument equalInt is shown here for clarity.\n        // Function argument type inference would permit omitting it.\n        return Index[equalInt](s, e)\n      }\n")),(0,i.kt)("h2",{id:"\u7c7b\u578b\u53c2\u6570\u7684\u503c\u672a\u88c5\u7bb1"},"\u7c7b\u578b\u53c2\u6570\u7684\u503c\u672a\u88c5\u7bb1"),(0,i.kt)("p",null,"\u5728\u5f53\u524d\u7684Go\u5b9e\u73b0\u4e2d\uff0c\u63a5\u53e3\u503c\u603b\u662f\u5305\u542b\u6307\u9488\u3002\u5c06\u975e\u6307\u9488\u503c\u653e\u5165\u63a5\u53e3\u53d8\u91cf\u4f1a\u5bfc\u81f4\u8be5\u503c\u88ab\u88c5\u7bb1\u3002\u8fd9\u610f\u5473\u7740\u5b9e\u9645\u503c\u5b58\u50a8\u5728\u5806\u6216\u5806\u6808\u4e0a\u7684\u5176\u4ed6\u4f4d\u7f6e\uff0c\u63a5\u53e3\u503c\u4fdd\u5b58\u6307\u5411\u8be5\u4f4d\u7f6e\u7684\u6307\u9488\u3002\n\u5728\u6b64\u8bbe\u8ba1\u4e0b\uff0c\u6cdb\u578b\u7684\u503c\u662f\u672a\u88c5\u7bb1\u7684\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'      // Settable is an integer type that can be set from a string.\n      type Settable int\n      \n      // Set sets the value of *p from a string.\n      func (p *Settable) Set(s string) {\n        // same as above\n      }\n      \n      func F() {\n        // The type of nums is []Settable.\n        nums := FromStrings2[Settable]([]string{"1", "2"})\n        // Settable can be converted directly to int.\n        // This will set first to 1.\n        first := int(nums[0])\n        ...\n      }\n')),(0,i.kt)("p",null,"\u5f53\u7528",(0,i.kt)("inlineCode",{parentName:"p"},"Settable"),"\u7c7b\u578b\u8c03\u7528",(0,i.kt)("inlineCode",{parentName:"p"},"FromStrings2"),"\u5b9e\u4f8b\u5316\u65f6\uff0c\u5f97\u5230\u4e00\u4e2a",(0,i.kt)("inlineCode",{parentName:"p"},"[]Settable"),"\u3002\u8be5\u5207\u7247\u7684\u5143\u7d20\u662f",(0,i.kt)("inlineCode",{parentName:"p"},"Settable"),"\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u4eec\u5c06\u662f\u6574\u6570\u3002\u5373\u4f7f\u5b83\u4eec\u662f\u7531\u6cdb\u578b\u51fd\u6570\u521b\u5efa\u548c\u8bbe\u7f6e\u7684\uff0c\u4e5f\u4e0d\u4f1a\u88ab\u88c5\u7bb1\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"      type Pair[F1, F2 any] struct {\n        first  F1\n        second F2\n      }\n      \n      // \u5f53\u4e0a\u8ff0\u7c7b\u578b\u88ab\u521d\u59cb\u5316\uff0c\u5c5e\u6027\u4e0d\u4f1a\u88c5\u7bb1\uff0c\u5c06\u4f1a\u5206\u914d\u5185\u5b58\u3002\n      // \u7c7b\u578b Pari[int, string] \u5c06\u4f1a\u8f6c\u5316\u4e3a struct { first int; second string}\n")),(0,i.kt)("h2",{id:"\u7c7b\u578b\u96c6\u8be6\u7ec6\u4fe1\u606f"},"\u7c7b\u578b\u96c6\u8be6\u7ec6\u4fe1\u606f"),(0,i.kt)("h3",{id:"\u7ea6\u675f\u4e2d\u7684\u5143\u7d20\u548c\u65b9\u6cd5"},"\u7ea6\u675f\u4e2d\u7684\u5143\u7d20\u548c\u65b9\u6cd5"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"          // StringableSignedInteger is a type constraint that matches any\n          // type that is both 1) defined as a signed integer type;\n          // 2) has a String method.\n          type StringableSignedInteger interface {\n            ~int | ~int8 | ~int16 | ~int32 | ~int64\n            String() string\n          }\n")),(0,i.kt)("p",null,"\u7c7b\u578b\u89c4\u5219\u51b3\u5b9a\u4e86\u8fd9\u610f\u5473\u7740\u4ec0\u4e48\u3002union\u5143\u7d20\u7684\u7c7b\u578b\u96c6\u662f\u6240\u6709\u7c7b\u578b\u7684\u96c6\uff0c\u8fd9\u4e9b\u7c7b\u578b\u7684\u57fa\u7840\u7c7b\u578b\u662f\u9884\u5148\u58f0\u660e\u7684\u6709\u7b26\u53f7\u6574\u6570\u7c7b\u578b\u4e4b\u4e00\u3002",(0,i.kt)("inlineCode",{parentName:"p"},"String() string"),"\u7684\u7c7b\u578b\u96c6\u662f\u5b9a\u4e49\u8be5\u65b9\u6cd5\u7684\u6240\u6709\u7c7b\u578b\u7684\u96c6\u3002",(0,i.kt)("inlineCode",{parentName:"p"},"StringableSignedInteger"),"\u7684\u7c7b\u578b\u96c6\u662f\u8fd9\u4e24\u4e2a\u7c7b\u578b\u96c6\u7684\u4ea4\u96c6\u3002\u7ed3\u679c\u662f\u6240\u6709\u7c7b\u578b\u7684\u96c6\u5408\uff0c\u8fd9\u4e9b\u7c7b\u578b\u7684\u57fa\u7840\u7c7b\u578b\u662f\u9884\u5148\u58f0\u660e\u7684\u6709\u7b26\u53f7\u6574\u6570\u7c7b\u578b\u4e4b\u4e00\uff0c\u5e76\u4e14\u8be5\u7c7b\u578b\u5b9a\u4e49\u4e86\u65b9\u6cd5",(0,i.kt)("inlineCode",{parentName:"p"},"String() string"),"\u3002\u4f7f\u7528\u53c2\u6570\u5316\u7c7b\u578bP\uff08\u4f7f\u7528",(0,i.kt)("inlineCode",{parentName:"p"},"StringableSignedInteger"),"\u4f5c\u4e3a\u7ea6\u675f\uff09\u7684\u65b9\u6cd5\u53ef\u4ee5\u5bf9\u7c7b\u578b",(0,i.kt)("inlineCode",{parentName:"p"},"P"),"\u7684\u503c\u4f7f\u7528\u4efb\u4f55\u6574\u6570\u7c7b\u578b\uff08+\u3001*\u7b49\uff09\u5141\u8bb8\u7684\u64cd\u4f5c\u3002\u5b83\u8fd8\u53ef\u4ee5\u5bf9\u7c7b\u578b",(0,i.kt)("inlineCode",{parentName:"p"},"P"),"\u7684\u503c\u8c03\u7528",(0,i.kt)("inlineCode",{parentName:"p"},"String"),"\u65b9\u6cd5\u4ee5\u83b7\u53d6\u5b57\u7b26\u4e32\u3002\n\u503c\u5f97\u6ce8\u610f\u7684\u662f",(0,i.kt)("inlineCode",{parentName:"p"},"~``\u5728\u8fd9\u91cc\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\u3002"),"StringableSignedIntegrater",(0,i.kt)("inlineCode",{parentName:"p"},"\u7ea6\u675f\u4f7f\u7528"),"~int",(0,i.kt)("inlineCode",{parentName:"p"},"\uff0c\u800c\u4e0d\u662f"),"int",(0,i.kt)("inlineCode",{parentName:"p"},"\u3002\u7c7b\u578b"),"int",(0,i.kt)("inlineCode",{parentName:"p"},"\u672c\u8eab\u4e0d\u5141\u8bb8\u4f5c\u4e3a\u7c7b\u578b\u53c2\u6570\uff0c\u56e0\u4e3a"),"int`\u6ca1\u6709\u5b57\u7b26\u4e32\u65b9\u6cd5\u3002"),(0,i.kt)("h3",{id:"\u7ea6\u675f\u4e2d\u7684\u590d\u5408\u7c7b\u578b"},"\u7ea6\u675f\u4e2d\u7684\u590d\u5408\u7c7b\u578b"),(0,i.kt)("p",null,"\u7ea6\u675f\u5143\u7d20\u53ef\u4ee5\u662f\u7c7b\u578b\u6587\u5b57"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"          type byteseq interface {string | []byte}\n")),(0,i.kt)("p",null,"\u901a\u5e38\u7684\u89c4\u5219\u9002\u7528\uff1a\u6b64\u7ea6\u675f\u7684\u7c7b\u578b\u53c2\u6570\u53ef\u4ee5\u662f",(0,i.kt)("inlineCode",{parentName:"p"},"string"),"\u6216",(0,i.kt)("inlineCode",{parentName:"p"},"[]byte"),"\uff1b\u5177\u6709\u6b64\u7ea6\u675f\u7684\u6cdb\u578b\u51fd\u6570\u53ef\u4ee5\u4f7f\u7528",(0,i.kt)("inlineCode",{parentName:"p"},"string"),"\u6216",(0,i.kt)("inlineCode",{parentName:"p"},"[]byte"),"\u5141\u8bb8\u7684\u4efb\u4f55\u64cd\u4f5c\u3002\n",(0,i.kt)("inlineCode",{parentName:"p"},"byteseq"),"\u7ea6\u675f\u5141\u8bb8\u7f16\u5199\u9002\u7528\u4e8e",(0,i.kt)("inlineCode",{parentName:"p"},"string"),"\u6216",(0,i.kt)("inlineCode",{parentName:"p"},"[]byte"),"\u7684\u6cdb\u578b\u51fd\u6570\u3002\n\u5bf9\u4e8e\u590d\u5408\u7c7b\u578b\uff08\u5b57\u7b26\u4e32\u3001\u6307\u9488\u3001\u6570\u7ec4\u3001\u5207\u7247\u3001\u7ed3\u6784\u4f53\u3001\u65b9\u6cd5\u3001\u6620\u5c04\u3001\u901a\u9053\uff09\uff0c\u65bd\u52a0\u4e86\u989d\u5916\u7684\u9650\u5236\uff1a\u53ea\u6709\u5f53\u64cd\u4f5c\u7b26\u63a5\u53d7\u76f8\u540c\u7684\u8f93\u5165\u7c7b\u578b\u5e76\u4e3a\u7c7b\u578b\u96c6\u4e2d\u7684\u6240\u6709\u7c7b\u578b\u751f\u6210\u76f8\u540c\u7684\u7ed3\u679c\u7c7b\u578b\u65f6\uff0c\u624d\u53ef\u4ee5\u4f7f\u7528\u64cd\u4f5c\u3002\n\u8981\u660e\u786e\u7684\u662f\uff0c\u6709\u4e2a\u4f8b\u5916\uff1a\u4ec5\u5f53\u590d\u5408\u7c7b\u578b\u51fa\u73b0\u5728\u7c7b\u578b\u96c6\u4e2d\u65f6\uff0c\u624d\u65bd\u52a0\u9650\u5236\u3002\u5f53\u590d\u5408\u7c7b\u578b\u662f\u4ece\u7c7b\u578b\u96c6\u4e4b\u5916\u7684\u7c7b\u578b\u53c2\u6570\u5f62\u6210\u65f6\uff0c\u5b83\u4e0d\u9002\u7528\uff0c\u4f8b\u5982\u5728",(0,i.kt)("inlineCode",{parentName:"p"},"var v[] T"),"\u4e2d\uff0c\u5bf9\u4e8e\u67d0\u4e9b\u7c7b\u578b\u53c2\u6570",(0,i.kt)("inlineCode",{parentName:"p"},"T"),"\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"          // structField is a type constraint whose type set consists of some\n          // struct types that all have a field named x.\n          type structField interface {\n            struct { a int; x int } |\n            struct { b int; x float64 } |\n            struct { c int; x uint64 }\n          }\n          \n          // This function is INVALID.\n          func IncrementX[T structField](p *T) {\n            v := p.x // INVALID: type of p.x is not the same for all types in set\n            v++\n            p.x = v\n          }\n          \n          // sliceOrMap is a type constraint for a slice or a map.\n          type sliceOrMap interface {\n            []int | map[int]int\n          }\n          \n          // Entry returns the i'th entry in a slice or the value of a map\n          // at key i. This is valid as the result of the operator is always int.\n          func Entry[T sliceOrMap](c T, i int) int {\n            // This is either a slice index operation or a map key lookup.\n            // Either way, the index and result types are type int.\n            return c[i]\n          }\n          \n          // sliceOrFloatMap is a type constraint for a slice or a map.\n          type sliceOrFloatMap interface {\n            []int | map[float64]int\n          }\n          \n          // This function is INVALID.\n          // In this example the input type of the index operation is either\n          // int (for a slice) or float64 (for a map), so the operation is\n          // not permitted.\n          func FloatEntry[T sliceOrFloatMap](c T) int {\n            return c[1.0] // INVALID: input type is either int or float64.\n          }\n")),(0,i.kt)("h3",{id:"\u7c7b\u578b\u96c6\u4e2d\u7684\u7c7b\u578b\u53c2\u6570"},"\u7c7b\u578b\u96c6\u4e2d\u7684\u7c7b\u578b\u53c2\u6570"),(0,i.kt)("p",null,"\u7ea6\u675f\u5143\u7d20\u4e2d\u7684\u7c7b\u578b\u6587\u5b57\u53ef\u4ee5\u5f15\u7528\u7ea6\u675f\u7684\u7c7b\u578b\u53c2\u6570\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u6cdb\u578b\u65b9\u6cd5",(0,i.kt)("inlineCode",{parentName:"p"},"Map"),"\u91c7\u7528\u4e24\u4e2a\u7c7b\u578b\u53c2\u6570\u3002\u7b2c\u4e00\u4e2a\u7c7b\u578b\u53c2\u6570\u9700\u8981\u6709\u4e00\u4e2a\u4f5c\u4e3a\u7b2c\u4e8c\u4e2a\u7c7b\u578b\u53c2\u6570\u5207\u7247\u7684\u5e95\u5c42\u7c7b\u578b\u3002\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e0a\u6ca1\u6709\u7ea6\u675f\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"          // SliceConstraint is a type constraint that matches a slice of\n          // the type parameter.\n          type SliceConstraint[T any] interface {\n            ~[]T\n          }\n          \n          // Map takes a slice of some element type and a transformation function,\n          // and returns a slice of the function applied to each element.\n          // Map returns a slice that is the same type as its slice argument,\n          // even if that is a defined type.\n          func Map[S SliceConstraint[E], E any](s S, f func(E) E) S {\n            r := make(S, len(s))\n            for i, v := range s {\n              r[i] = f(v)\n            }\n            return r\n          }\n          \n          // MySlice is a simple defined type.\n          type MySlice []int\n          \n          // DoubleMySlice takes a value of type MySlice and returns a new\n          // MySlice value with each element doubled in value.\n          func DoubleMySlice(s MySlice) MySlice {\n            // The type arguments listed explicitly here could be inferred.\n            v := Map[MySlice, int](s, func(e int) int { return 2 * e })\n            // Here v has type MySlice, not type []int.\n            return v\n          }\n")),(0,i.kt)("h3",{id:"\u7c7b\u578b\u8f6c\u6362"},"\u7c7b\u578b\u8f6c\u6362"),(0,i.kt)("p",null,"\u5728\u5177\u6709\u4e24\u4e2a\u7c7b\u578b\u53c2\u6570From\u548cTo\u7684\u51fd\u6570\u4e2d\uff0c\u5982\u679cFrom\u7ea6\u675f\u7c7b\u578b\u96c6\u4e2d\u7684\u6240\u6709\u7c7b\u578b\u90fd\u53ef\u4ee5\u8f6c\u6362\u4e3aTo\u7ea6\u675f\u7c7b\u578b\u96c6\u4e2d\u7684\u6240\u6709\u7c7b\u578b\uff0c\u5219From\u7c7b\u578b\u7684\u503c\u53ef\u4ee5\u8f6c\u6362\u4e3aTo\u7c7b\u578b\u7684\u503c\u3002\u8fd9\u662f\u4e00\u822c\u89c4\u5219\u7684\u7ed3\u679c\uff0c\u5373\u6cdb\u578b\u51fd\u6570\u53ef\u4ee5\u4f7f\u7528\u7c7b\u578b\u96c6\u4e2d\u5217\u51fa\u7684\u6240\u6709\u7c7b\u578b\u90fd\u5141\u8bb8\u7684\u4efb\u4f55\u64cd\u4f5c\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'          type integer interface {\n            ~int | ~int8 | ~int16 | ~int32 | ~int64 |\n            ~uint | ~uint8 | ~uint16 | ~uint32 | ~uint64 | ~uintptr\n          }\n          \n          func Convert[To, From integer](from From) To {\n            to := To(from)\n            if From(to) != from {\n              panic("conversion out of range")\n            }\n            return to\n          }\n')),(0,i.kt)("h3",{id:"\u975e\u7c7b\u578b\u5316\u5e38\u91cf"},"\u975e\u7c7b\u578b\u5316\u5e38\u91cf"),(0,i.kt)("p",null,"\u67d0\u4e9b\u65b9\u6cd5\u4f7f\u7528\u975e\u7c7b\u578b\u5316\u5e38\u91cf\u3002\u5982\u679c\u7c7b\u578b\u53c2\u6570\u7ea6\u675f\u7684\u7c7b\u578b\u96c6\u4e2d\u7684\u6bcf\u79cd\u7c7b\u578b\u90fd\u5141\u8bb8\u4f7f\u7528\u975e\u7c7b\u578b\u5e38\u91cf\uff0c\u5219\u5141\u8bb8\u4f7f\u7528typeparameter\u7684\u503c\u3002\u4e0e\u7c7b\u578b\u8f6c\u6362\u4e00\u6837\uff0c\u8fd9\u662f\u4e00\u822c\u89c4\u5219\u7684\u7ed3\u679c\uff0c\u5373\u6cdb\u578b\u51fd\u6570\u53ef\u4ee5\u4f7f\u7528\u7c7b\u578b\u96c6\u4e2d\u6240\u6709\u7c7b\u578b\u90fd\u5141\u8bb8\u7684\u4efb\u4f55\u64cd\u4f5c\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"          type integer interface {\n            ~int | ~int8 | ~int16 | ~int32 | ~int64 |\n            ~uint | ~uint8 | ~uint16 | ~uint32 | ~uint64 | ~uintptr\n          }\n          \n          func Add10[T integer](s []T) {\n            for i, v := range s {\n              s[i] = v + 10 // OK: 10 can convert to any integer type\n            }\n          }\n          \n          // This function is INVALID.\n          func Add1024[T integer](s []T) {\n            for i, v := range s {\n              s[i] = v + 1024 // INVALID: 1024 not permitted by int8/uint8\n            }\n          }\n")),(0,i.kt)("h3",{id:"\u5d4c\u5165\u7ea6\u675f\u7684\u7c7b\u578b\u96c6"},"\u5d4c\u5165\u7ea6\u675f\u7684\u7c7b\u578b\u96c6"),(0,i.kt)("p",null,"\u5f53\u4e00\u4e2a\u7ea6\u675f\u5d4c\u5165\u53e6\u4e00\u4e2a\u7ea6\u675f\u65f6\uff0c\u5916\u90e8\u7ea6\u675f\u7684\u7c7b\u578b\u96c6\u662f\u6240\u6709\u76f8\u5173\u7c7b\u578b\u96c6\u7684\u4ea4\u70b9\u3002\u5982\u679c\u6709\u591a\u4e2a\u5d4c\u5165\u7c7b\u578b\uff0c\u5219\u4ea4\u96c6\u5c06\u4fdd\u7559\u4efb\u4f55\u7c7b\u578b\u53c2\u6570\u5fc5\u987b\u6ee1\u8db3\u6240\u6709\u7ea6\u675f\u5143\u7d20\u8981\u6c42\u7684\u5c5e\u6027\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"          // Addable is types that support the + operator.\n          type Addable interface {\n            ~int | ~int8 | ~int16 | ~int32 | ~int64 |\n            ~uint | ~uint8 | ~uint16 | ~uint32 | ~uint64 | ~uintptr |\n            ~float32 | ~float64 | ~complex64 | ~complex128 |~string\n          }\n          \n          // Byteseq is a byte sequence: either string or []byte.\n          type Byteseq interface {\n            ~string | ~[]byte\n          }\n          \n          // AddableByteseq is a byte sequence that supports +.\n          // This is every type that is both Addable and Byteseq.\n          // In other words, just the type set ~string.\n          type AddableByteseq interface {\n            Addable\n            Byteseq\n          }\n")),(0,i.kt)("h3",{id:"\u8054\u5408\u5143\u7d20\u4e2d\u7684\u63a5\u53e3\u7c7b\u578b"},"\u8054\u5408\u5143\u7d20\u4e2d\u7684\u63a5\u53e3\u7c7b\u578b"),(0,i.kt)("p",null,"\u8054\u5408\u5143\u7d20\u7684\u7c7b\u578b\u96c6\u662funion\u4e2d\u6240\u6709\u7c7b\u578b\u7684\u7c7b\u578b\u96c6\u7684\u5e76\u96c6\u3002\u5bf9\u4e8e\u5927\u591a\u6570\u7c7b\u578b",(0,i.kt)("inlineCode",{parentName:"p"},"T"),"\uff0c",(0,i.kt)("inlineCode",{parentName:"p"},"T"),"\u7684\u7c7b\u578b\u96c6\u5c31\u662f",(0,i.kt)("inlineCode",{parentName:"p"},"T"),"\u672c\u8eab\u3002\u4f46\u662f\uff0c\u5bf9\u4e8e\u63a5\u53e3\u7c7b\u578b\uff08\u548c\u8fd1\u4f3c\u5143\u7d20\uff09\uff0c\u60c5\u51b5\u5e76\u975e\u5982\u6b64\u3002\u5982\u524d\u6240\u8ff0\uff0c\u4e0d\u5d4c\u5165\u975e\u63a5\u53e3\u5143\u7d20\u7684\u63a5\u53e3\u7c7b\u578b\u7684\u7c7b\u578b\u96c6\u662f\u58f0\u660e\u63a5\u53e3\u7684\u6240\u6709\u65b9\u6cd5\u7684\u6240\u6709\u7c7b\u578b\u7684\u96c6\u5408\uff0c\u5305\u62ec\u63a5\u53e3\u7c7b\u578b\u672c\u8eab\u3002\u4f7f\u7528union\u5143\u7d20\u4e2d\u7684\u6b64\u7c7b\u63a5\u53e3\u7c7b\u578b\u5c06\u5411union\u6dfb\u52a0\u8be5\u7c7b\u578b\u96c6\u3002"),(0,i.kt)("h3",{id:"\u7a7a\u7c7b\u578b\u96c6"},"\u7a7a\u7c7b\u578b\u96c6"),(0,i.kt)("p",null,"\u53ef\u4ee5\u4f7f\u7528\u7a7a\u7c7b\u578b\u96c6\u7f16\u5199\u7ea6\u675f\u3002\u6ca1\u6709\u4efb\u4f55\u7c7b\u578b\u53c2\u6570\u53ef\u4ee5\u6ee1\u8db3\u6b64\u7c7b\u7ea6\u675f\uff0c\u56e0\u6b64\u4efb\u4f55\u5c1d\u8bd5\u5b9e\u4f8b\u5316\u4f7f\u7528\u7a7a\u7c7b\u578b\u96c6\u7684\u7ea6\u675f\u7684\u51fd\u6570\u90fd\u5c06\u5931\u8d25\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u7f16\u8bd1\u5668\u4e0d\u53ef\u80fd\u68c0\u6d4b\u5230\u6240\u6709\u6b64\u7c7b\u60c5\u51b5\u3002\u5bf9\u4e8e\u80fd\u591f\u68c0\u6d4b\u5230\u7684\u60c5\u51b5\uff0cvet\u5de5\u5177\u53ef\u80fd\u5e94\u8be5\u7ed9\u51fa\u4e00\u4e2a\u9519\u8bef\u3002"),(0,i.kt)("h3",{id:"\u7c7b\u578b\u96c6\u7684\u4e00\u822c\u8bf4\u660e"},"\u7c7b\u578b\u96c6\u7684\u4e00\u822c\u8bf4\u660e"),(0,i.kt)("p",null,"\u5728\u7ea6\u675f\u4e2d\u663e\u5f0f\u5217\u51fa\u7c7b\u578b\u4f3c\u4e4e\u6709\u4e9b\u5c34\u5c2c\uff0c\u4f46\u8c03\u7528\u4fa7\u9700\u8981\u5f88\u6e05\u695a\u77e5\u9053\u5141\u8bb8\u54ea\u4e9b\u7c7b\u578b\u5b9e\u53c2\uff0c\u4ee5\u53ca\u6cdb\u578b\u65b9\u6cd5\u5141\u8bb8\u54ea\u4e9b\u64cd\u4f5c\u3002\n\u5982\u679c\u8bed\u8a00\u540e\u6765\u66f4\u6539\u4e3a\u652f\u6301\u64cd\u4f5c\u7b26\u65b9\u6cd5\uff08\u76ee\u524d\u6ca1\u6709\u6b64\u7c7b\u8ba1\u5212\uff09\uff0c\u90a3\u4e48\u7ea6\u675f\u5c06\u50cf\u5904\u7406\u4efb\u4f55\u5176\u4ed6\u7c7b\u578b\u7684\u65b9\u6cd5\u4e00\u6837\u5904\u7406\u5b83\u4eec\u3002\n\u9884\u58f0\u660e\u7c7b\u578b\u7684\u6570\u91cf\u603b\u662f\u6709\u9650\u7684\uff0c\u8fd9\u4e9b\u7c7b\u578b\u652f\u6301\u7684\u64cd\u4f5c\u7b26\u7684\u6570\u91cf\u4e5f\u6709\u9650\u3002\u672a\u6765\u7684\u8bed\u8a00\u53d8\u5316\u4e0d\u4f1a\u4ece\u6839\u672c\u4e0a\u6539\u53d8\u8fd9\u4e9b\u4e8b\u5b9e\uff0c\u56e0\u6b64\u8fd9\u79cd\u65b9\u6cd5\u5c06\u7ee7\u7eed\u6709\u7528\u3002\u8fd9\u79cd\u65b9\u6cd5\u4e0d\u4f1a\u8bd5\u56fe\u5904\u7406\u6240\u6709\u53ef\u80fd\u7684\u64cd\u4f5c\u3002\u6211\u4eec\u7684\u671f\u671b\u662f\uff0c\u901a\u5e38\u5728\u6cdb\u578b\u65b9\u6cd5\u548c\u7c7b\u578b\u58f0\u660e\u4e2d\u4f7f\u7528\u590d\u5408\u7c7b\u578b\u6765\u5904\u7406\u590d\u5408\u7c7b\u578b\uff0c\u800c\u4e0d\u662f\u5c06\u590d\u5408\u7c7b\u578b\u653e\u5165\u7c7b\u578b\u96c6\u4e2d\u3002"),(0,i.kt)("h2",{id:"\u53cd\u5c04"},"\u53cd\u5c04"),(0,i.kt)("p",null,"\u4e0d\u6253\u7b97\u4ee5\u4efb\u4f55\u65b9\u5f0f\u66f4\u6539reflect\u8f6f\u4ef6\u5305\u3002\u5f53\u4e00\u4e2a\u7c7b\u578b\u6216\u65b9\u6cd5\u88ab\u5b9e\u4f8b\u5316\u65f6\uff0c\u6240\u6709\u7c7b\u578b\u53c2\u6570\u90fd\u5c06\u6210\u4e3a\u666e\u901a\u7684\u975e\u6cdb\u578b\u7c7b\u578b\u3002\u5b9e\u4f8b\u5316\u7c7b\u578bString\u65b9\u6cd5\u7684",(0,i.kt)("inlineCode",{parentName:"p"},"reflect.Type"),"\u503c\u5c06\u8fd4\u56de\u540d\u79f0\uff0c\u5e76\u5728\u65b9\u62ec\u53f7\u4e2d\u5305\u542b\u7c7b\u578b\u5b9e\u53c2\u3002\u4f8b\u5982\uff0c",(0,i.kt)("inlineCode",{parentName:"p"},"List[int]"),"\u3002\n\u975e\u6cdb\u578b\u4ee3\u7801\u5728\u6ca1\u6709\u5b9e\u4f8b\u5316\u7684\u60c5\u51b5\u4e0b\u4e0d\u53ef\u80fd\u5f15\u7528\u6cdb\u578b\u4ee3\u7801\uff0c\u56e0\u6b64\u5bf9\u4e8e\u672a\u5b9e\u4f8b\u5316\u7684\u6cdb\u578b\u7c7b\u578b\u6216\u65b9\u6cd5\uff0c\u6ca1\u6709\u4efb\u4f55\u64cd\u4f5c\u4fe1\u606f\u3002"),(0,i.kt)("h2",{id:"\u603b\u7ed3"},"\u603b\u7ed3"),(0,i.kt)("p",null,"\u8981\u70b9\uff1a"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u51fd\u6570\u548c\u7c7b\u578b\u53ef\u4ee5\u6709\u7c7b\u578b\u53c2\u6570\uff0c\u7c7b\u578b\u53c2\u6570\u4f7f\u7528\u7ea6\u675f\uff0c\u800c\u7ea6\u675f\u53c8\u662f\u63a5\u53e3\u7c7b\u578b"),(0,i.kt)("li",{parentName:"ul"},"\u7ea6\u675f\u63cf\u8ff0\u7c7b\u578b\u53c2\u6570\u6240\u9700\u7684\u65b9\u6cd5\u548c\u5141\u8bb8\u7684\u7c7b\u578b"),(0,i.kt)("li",{parentName:"ul"},"\u7ea6\u675f\u63cf\u8ff0\u7c7b\u578b\u53c2\u6570\u5141\u8bb8\u7684\u65b9\u6cd5\u548c\u64cd\u4f5c"),(0,i.kt)("li",{parentName:"ul"},"\u5728\u4f7f\u7528\u7c7b\u578b\u53c2\u6570\u8c03\u7528\u51fd\u6570\u65f6\uff0c\u7c7b\u578b\u63a8\u65ad\u901a\u5e38\u5141\u8bb8\u7701\u7565\u7c7b\u578b\u53c2\u6570\u3002")))}m.isMDXComponent=!0}}]);