"use strict";(self.webpackChunkwhnhn=self.webpackChunkwhnhn||[]).push([[1895],{3905:(n,e,t)=>{t.d(e,{Zo:()=>m,kt:()=>g});var a=t(67294);function r(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function l(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,a)}return t}function o(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?l(Object(t),!0).forEach((function(e){r(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function i(n,e){if(null==n)return{};var t,a,r=function(n,e){if(null==n)return{};var t,a,r={},l=Object.keys(n);for(a=0;a<l.length;a++)t=l[a],e.indexOf(t)>=0||(r[t]=n[t]);return r}(n,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(n);for(a=0;a<l.length;a++)t=l[a],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(r[t]=n[t])}return r}var p=a.createContext({}),u=function(n){var e=a.useContext(p),t=e;return n&&(t="function"==typeof n?n(e):o(o({},e),n)),t},m=function(n){var e=u(n.components);return a.createElement(p.Provider,{value:e},n.children)},c="mdxType",s={inlineCode:"code",wrapper:function(n){var e=n.children;return a.createElement(a.Fragment,{},e)}},d=a.forwardRef((function(n,e){var t=n.components,r=n.mdxType,l=n.originalType,p=n.parentName,m=i(n,["components","mdxType","originalType","parentName"]),c=u(t),d=r,g=c["".concat(p,".").concat(d)]||c[d]||s[d]||l;return t?a.createElement(g,o(o({ref:e},m),{},{components:t})):a.createElement(g,o({ref:e},m))}));function g(n,e){var t=arguments,r=e&&e.mdxType;if("string"==typeof n||r){var l=t.length,o=new Array(l);o[0]=d;var i={};for(var p in e)hasOwnProperty.call(e,p)&&(i[p]=e[p]);i.originalType=n,i[c]="string"==typeof n?n:r,o[1]=i;for(var u=2;u<l;u++)o[u]=t[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},93757:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>p,contentTitle:()=>o,default:()=>s,frontMatter:()=>l,metadata:()=>i,toc:()=>u});var a=t(87462),r=(t(67294),t(3905));const l={tags:["golang"]},o="Golang\u8c03\u7528C\u4ee3\u7801",i={permalink:"/blog/tech/Golang\u8c03\u7528C\u4ee3\u7801",source:"@site/tech/Golang\u8c03\u7528C\u4ee3\u7801.md",title:"Golang\u8c03\u7528C\u4ee3\u7801",description:"Golang\u8c03\u7528C\u4ee3\u7801\u53ef\u4ee5\u6709\u4e09\u79cd\u65b9\u5f0f\uff1a",date:"2023-03-11T06:01:17.000Z",formattedDate:"2023\u5e743\u670811\u65e5",tags:[{label:"golang",permalink:"/blog/tech/tags/golang"}],readingTime:3.28,hasTruncateMarker:!1,authors:[],frontMatter:{tags:["golang"]},prevItem:{title:"mac\u5168\u5c40\u5b89\u88c5npm\u5305\u62a5\u9519",permalink:"/blog/tech/mac\u5168\u5c40\u5b89\u88c5npm\u5305\u62a5\u9519"},nextItem:{title:"Golang \u7f16\u8bd1\u65f6\u6307\u5b9a\u53c2\u6570",permalink:"/blog/tech/Golang\u7f16\u8bd1\u65f6\u6307\u5b9a\u53c2\u6570"}},p={authorsImageUrls:[]},u=[{value:"windows\u5e73\u53f0",id:"windows\u5e73\u53f0",level:2},{value:"\u5185\u5d4cC\u4ee3\u7801",id:"\u5185\u5d4cc\u4ee3\u7801",level:2},{value:"\u6df7\u7f16",id:"\u6df7\u7f16",level:2},{value:"\u5e93\u6587\u4ef6",id:"\u5e93\u6587\u4ef6",level:2},{value:"Windows",id:"windows",level:3},{value:"Linux \u7f16\u8bd1\u5e93",id:"linux-\u7f16\u8bd1\u5e93",level:3}],m={toc:u},c="wrapper";function s(n){let{components:e,...t}=n;return(0,r.kt)(c,(0,a.Z)({},m,t,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Golang\u8c03\u7528C\u4ee3\u7801\u53ef\u4ee5\u6709\u4e09\u79cd\u65b9\u5f0f\uff1a"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u5185\u5d4cC\u4ee3\u7801\u5230",(0,r.kt)("inlineCode",{parentName:"li"},".go"),"\u6587\u4ef6"),(0,r.kt)("li",{parentName:"ol"},"C\u4ee3\u7801\u76f4\u63a5\u653e\u5728\u9879\u76ee\u4e2d\uff0c\u548cGo\u4ee3\u7801\u6df7\u7f16"),(0,r.kt)("li",{parentName:"ol"},"\u5f15\u7528C\u7f16\u8bd1\u597d\u7684\u5e93\u6587\u4ef6")),(0,r.kt)("h2",{id:"windows\u5e73\u53f0"},"windows\u5e73\u53f0"),(0,r.kt)("p",null,"Windows\u4e0a\u662f\u6ca1\u6709gcc\u7a0b\u5e8f\u7684\uff0c\u8981\u60f3\u8fd0\u884cC\u4ee3\u7801\uff0c\u9700\u8981\u5148\u5b89\u88c5gcc\u3002"),(0,r.kt)("p",null,"\u63a8\u8350\u4f7f\u7528",(0,r.kt)("a",{parentName:"p",href:"https://www.msys2.org/"},"MSYS2")),(0,r.kt)("p",null,"\u5b89\u88c5\u597d\u540e\uff0c\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"pacman -S --needed base-devel mingw-w64-x86_64-toolchain make\n")),(0,r.kt)("p",null,"\u914d\u7f6e",(0,r.kt)("inlineCode",{parentName:"p"},"Path"),"\u73af\u5883\u53d8\u91cf\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"D:\\msys64\\mingw64\\bin\n")),(0,r.kt)("h2",{id:"\u5185\u5d4cc\u4ee3\u7801"},"\u5185\u5d4cC\u4ee3\u7801"),(0,r.kt)("p",null,"main.go"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\n/*#include <stdio.h>\n\nvoid say_hello_with_name(char * name){\n    printf("hello %s\\n", name);\n}\n\nunsigned long * array(unsigned short list[]) {\n    static unsigned long out[4];\n    for(int i=0; i<4;i++) {\n        out[i] = list[i] + 1;\n    }\n    return &out[0];\n}\n*/\nimport "C"\nimport (\n    "fmt"\n    "unsafe"\n)\n\nfunc main() {\n    C.say_hello_with_name(C.CString("oscar"))\n    data := []uint16{1, 2, 3, 4}\n    var pwd []uint32\n    size := 4\n    var param []C.ushort\n    for _, v := range data {\n        param = append(param, C.ushort(v))\n    }\n    out := C.array(&param[0])\n    ptr := unsafe.Pointer(out)\n    for i := 0; i < size; i++ {\n        vptr := unsafe.Pointer(uintptr(ptr) + uintptr(i)*unsafe.Sizeof(C.ulong(1)))\n        pwd = append(pwd, uint32(*(*C.ulong)(vptr)))\n    }\n    fmt.Println(pwd)\n}\n')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},'import "C"'),"\u548c\u6ce8\u91ca\u4e4b\u95f4\u4e0d\u80fd\u7528\u7a7a\u884c\uff0c\u5426\u5219\u4f1a\u62a5\u9519\uff1a",(0,r.kt)("inlineCode",{parentName:"p"},"could not determine kind of name for C.xxx"))),(0,r.kt)("p",null,"\u8fd0\u884c\u540e\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"[2 3 4 5]\nhello oscar\n")),(0,r.kt)("h2",{id:"\u6df7\u7f16"},"\u6df7\u7f16"),(0,r.kt)("p",null,"\u6587\u4ef6\u76ee\u5f55\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-txt"},"\u251c\u2500\u2500 demo.c\n\u251c\u2500\u2500 demo.h\n\u2514\u2500\u2500 main.go\n")),(0,r.kt)("p",null,"demo.h"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},"void say_hello_with_name(char * name);\nunsigned long * array(unsigned short list[]);\n")),(0,r.kt)("p",null,"demo.c"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},'#include <stdio.h>\n#include "demo.h"\n\nvoid say_hello_with_name(char * name) {\n    printf("hello %s\\n", name);\n}\n\nunsigned long * array(unsigned short list[]) {\n    static unsigned long out[4];\n    for(int i=0; i<4;i++) {\n        out[i] = list[i] + 1;\n    }\n    return &out[0];\n}\n')),(0,r.kt)("p",null,"main.go"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\n/*\n#include "demo.h"\n*/\nimport "C"\nimport (\n    "fmt"\n    "unsafe"\n)\n\nfunc main() {\n    C.say_hello_with_name(C.CString("oscar"))\n    data := []uint16{1, 2, 3, 4}\n    var pwd []uint32\n    size := 4\n    var param []C.ushort\n    for _, v := range data {\n        param = append(param, C.ushort(v))\n    }\n    out := C.array(&param[0])\n    ptr := unsafe.Pointer(out)\n    for i := 0; i < size; i++ {\n        vptr := unsafe.Pointer(uintptr(ptr) + uintptr(i)*unsafe.Sizeof(C.ulong(1)))\n        pwd = append(pwd, uint32(*(*C.ulong)(vptr)))\n    }\n    fmt.Println(pwd)\n}\n')),(0,r.kt)("h2",{id:"\u5e93\u6587\u4ef6"},"\u5e93\u6587\u4ef6"),(0,r.kt)("h3",{id:"windows"},"Windows"),(0,r.kt)("p",null,"\u7f16\u8bd1\u5e93\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"gcc -c demo.c\nar rcs libdemo.lib demo.o\ngcc -fPIC -shared demo.c -o libdemo.dll\n")),(0,r.kt)("p",null,"\u6587\u4ef6\u76ee\u5f55\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"\u251c\u2500\u2500 include\n\u2502\xa0\xa0 \u2514\u2500\u2500 demo.h\n\u251c\u2500\u2500 linux\n\u2502\xa0\xa0 \u2514\u2500\u2500 libdemo.lib\n\u2514\u2500\u2500 main.go\n")),(0,r.kt)("p",null,"main.go"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\n/*\n\n#cgo CFLAGS: -I./include\n\n#cgo LDFLAGS: -L./linux -llibdemo\n\n#include "demo.h"\n\n*/\nimport "C"\nimport (\n    "fmt"\n    "unsafe"\n)\n\nfunc main() {\n    C.say_hello_with_name(C.CString("oscar"))\n    data := []uint16{1, 2, 3, 4}\n    var pwd []uint32\n    size := 4\n    var param []C.ushort\n    for _, v := range data {\n        param = append(param, C.ushort(v))\n    }\n    out := C.array(&param[0])\n    ptr := unsafe.Pointer(out)\n    for i := 0; i < size; i++ {\n        vptr := unsafe.Pointer(uintptr(ptr) + uintptr(i)*unsafe.Sizeof(C.ulong(1)))\n        pwd = append(pwd, uint32(*(*C.ulong)(vptr)))\n    }\n    fmt.Println(pwd)\n}\n')),(0,r.kt)("h3",{id:"linux-\u7f16\u8bd1\u5e93"},"Linux \u7f16\u8bd1\u5e93"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"gcc -c demo.c\nar rcs libdemo.a demo.o\n")),(0,r.kt)("p",null,"\u6587\u4ef6\u76ee\u5f55\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"\u251c\u2500\u2500 include\n\u2502\xa0\xa0 \u2514\u2500\u2500 demo.h\n\u251c\u2500\u2500 linux\n\u2502\xa0\xa0 \u2514\u2500\u2500 libdemo.a\n\u2514\u2500\u2500 main.go\n")),(0,r.kt)("p",null,"main.go"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\n/*\n\n#cgo CFLAGS: -I./include\n\n#cgo LDFLAGS: -L./linux -ldemo\n\n#include "demo.h"\n\n*/\nimport "C"\nimport (\n    "fmt"\n    "unsafe"\n)\n\nfunc main() {\n    C.say_hello_with_name(C.CString("oscar"))\n    data := []uint16{1, 2, 3, 4}\n    var pwd []uint32\n    size := 4\n    var param []C.ushort\n    for _, v := range data {\n        param = append(param, C.ushort(v))\n    }\n    out := C.array(&param[0])\n    ptr := unsafe.Pointer(out)\n    for i := 0; i < size; i++ {\n        vptr := unsafe.Pointer(uintptr(ptr) + uintptr(i)*unsafe.Sizeof(C.ulong(1)))\n        pwd = append(pwd, uint32(*(*C.ulong)(vptr)))\n    }\n    fmt.Println(pwd)\n}\n')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Linux\u7cfb\u5217\u5e93\u6587\u4ef6\u5fc5\u987b\u662f",(0,r.kt)("inlineCode",{parentName:"p"},"lib"),"\u5f00\u5934\uff0c\u5f15\u5165\u7684\u65f6\u5019\u4e0d\u80fd\u6307\u5b9a")))}s.isMDXComponent=!0}}]);