"use strict";(self.webpackChunkwhnhn=self.webpackChunkwhnhn||[]).push([[6233],{5256:n=>{n.exports=JSON.parse('{"blogPosts":[{"id":"/Golang\u6cdb\u578b","metadata":{"permalink":"/blog/tech/Golang\u6cdb\u578b","source":"@site/tech/Golang\u6cdb\u578b.md","title":"Golang \u6cdb\u578b","description":"\u6982\u8ff0","date":"2023-03-05T05:06:07.000Z","formattedDate":"2023\u5e743\u67085\u65e5","tags":[{"label":"golang","permalink":"/blog/tech/tags/golang"},{"label":"\u6cdb\u578b","permalink":"/blog/tech/tags/\u6cdb\u578b"}],"readingTime":40.16,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["golang","\u6cdb\u578b"]},"nextItem":{"title":"\u73a9\u8f6c Java \u7ebf\u7a0b\u53ca\u7ebf\u7a0b\u6c60","permalink":"/blog/tech/\u73a9\u8f6cJava\u7ebf\u7a0b\u53ca\u7ebf\u7a0b\u6c60"}},"content":"## \u6982\u8ff0\\n\\n- \u51fd\u6570\u53ef\u4ee5\u6709\u989d\u5916\u7684\u7c7b\u578b\u53c2\u6570\u96c6\uff0c\u7528\u65b9\u62ec\u53f7\u5b9a\u4e49\uff1a`func F[T any](p T) {...}`\\n- \u7c7b\u578b\u53c2\u6570\u5728\u51fd\u6570\u5185\u53ef\u4ee5\u5f53\u4f5c\u666e\u901a\u53c2\u6570\u4f7f\u7528\\n- \u7c7b\u578b\u901a\u5e38\u6709\u7c7b\u578b\u53c2\u6570\u96c6\uff1a`type M[T any] []T`\\n- \u6bcf\u4e2a\u7c7b\u578b\u53c2\u6570\u90fd\u6709\u7c7b\u578b\u7ea6\u675f\uff0c\u5c31\u5982\u6bcf\u4e2a\u666e\u901a\u53c2\u6570\u90fd\u6709\u7c7b\u578b\u4e00\u6837\uff1a`func F[T Constraint](p T) {...}`\\n- \u7c7b\u578b\u7ea6\u675f\u662f\u63a5\u53e3\u7c7b\u578b\\n- \u65b0\u7684\u9884\u58f0\u660e\u7b26`any`\u662f\u4e00\u4e2a\u7c7b\u578b\u7ea6\u675f\uff0c\u8868\u793a\u4efb\u610f\u7c7b\u578b\\n- \u7c7b\u578b\u7ea6\u675f\u7684\u63a5\u53e3\u7c7b\u578b\u53ef\u4ee5\u5d4c\u5957\u5176\u4ed6\u5143\u7d20\u4f5c\u4e3a\u7c7b\u578b\u5b9e\u53c2\u96c6\\n- `T`\u4ee3\u8868\u4efb\u610f\u7c7b\u578b\\n- `~T`\u4ee3\u8868\u7ee7\u627f`T`\u7684\u7c7b\u578b\\n- \u5e76\u96c6`T1 | T2 | ...`\u4ee3\u8868\u4ec5\u9650\u4e8e\u5217\u51fa\u7684\u5143\u7d20\\n- \u6cdb\u578b\u51fd\u6570\u53ea\u80fd\u4f7f\u7528\u7ea6\u675f\u5141\u8bb8\u7684\u6240\u6709\u7c7b\u578b\u652f\u6301\u7684\u64cd\u4f5c\\n- \u6cdb\u578b\u51fd\u6570\u6216\u7c7b\u578b\u9700\u8981\u4f20\u5165\u7c7b\u578b\u5b9e\u53c2\\n- \u7c7b\u578b\u63a8\u65ad\u5141\u8bb8\u5728\u5e38\u89c1\u60c5\u51b5\u4e0b\u7701\u7565\u51fd\u6570\u8c03\u7528\u7684\u7c7b\u578b\u53c2\u6570\\n\\n## \u7c7b\u578b\u53c2\u6570\\n\\n\u6cdb\u578b\u4e2d\u62bd\u8c61\u7684\u6570\u636e\u7c7b\u578b\u53eb\u7c7b\u578b\u53c2\u6570\uff0c\u8fd0\u884c\u6cdb\u578b\u4ee3\u7801\u7684\u65f6\u5019\u7c7b\u578b\u53c2\u6570\u4f1a\u88ab\u7c7b\u578b\u5b9e\u53c2\u66ff\u6362\u3002\\n\u7c7b\u578b\u53c2\u6570\u4e0e\u666e\u901a\u975e\u7c7b\u578b\u51fd\u6570\u53c2\u6570\u7c7b\u4f3c\uff0c\u56e0\u6b64\u5e94\u4e0e\u5176\u4ed6\u53c2\u6570\u4e00\u8d77\u5217\u51fa\u3002\u5b9a\u4e49\u4e00\u4e2a\u989d\u5916\u7684\u53ef\u9009\u53c2\u6570\u5217\u8868\u6765\u63cf\u8ff0\u7c7b\u578b\u53c2\u6570\u3002\\n``` go\\n\\t  func Print[T any](s []T) { \\n\\t    // Just an example, not the suggested syntax.\\n\\t    for _, v := range s {\\n\\t      fmt.Println(v)\\n\\t    }\\n\\t  }\\n```\\n\u4e0e\u5e38\u89c4\u53c2\u6570\u5217\u8868\u4e0d\u540c\uff0c\u5728\u7c7b\u578b\u53c2\u6570\u5217\u8868\u4e2d\uff0c\u7c7b\u578b\u53c2\u6570\u9700\u8981\u540d\u79f0\uff0c\u8fd9\u907f\u514d\u4e86\u8bed\u6cd5\u4e0a\u7684\u6b67\u4e49\u3002\\n## \u7ea6\u675f\\n\u5fc5\u987b\u5bf9\u8c03\u7528\u65b9\u4f20\u9012\u7684\u7c7b\u578b\u53c2\u6570\u548c\u6cdb\u578b\u51fd\u6570\u4e2d\u7684\u4ee3\u7801\u8bbe\u7f6e\u9650\u5236\u3002\u8c03\u7528\u65b9\u53ea\u80fd\u4f20\u9012\u6ee1\u8db3\u7ea6\u675f\u7684\u7c7b\u578b\u53c2\u6570\u3002\u6cdb\u578b\u51fd\u6570\u53ea\u80fd\u4ee5\u7ea6\u675f\u5141\u8bb8\u7684\u65b9\u5f0f\u4f7f\u7528\u8fd9\u4e9b\u503c\u3002\\n## `any`\u7684\u5141\u8bb8\u64cd\u4f5c\\n`any`\u6765\u7ea6\u675f\u7c7b\u578b\u53c2\u6570\u65f6\uff0c\u8868\u793a\u53c2\u6570\u5165\u53c2\u53ef\u4ee5\u662f\u4efb\u610f\u7c7b\u578b\\n\u5141\u8bb8\u7684\u64cd\u4f5c\\n- \u58f0\u660e\u8fd9\u4e9b\u7c7b\u578b\u7684\u53d8\u91cf\\n- \u5c06\u76f8\u540c\u7c7b\u578b\u7684\u5176\u4ed6\u503c\u5206\u914d\u7ed9\u8fd9\u4e9b\u53d8\u91cf\\n- \u5c06\u8fd9\u4e9b\u53d8\u91cf\u4f20\u9012\u7ed9\u51fd\u6570\u6216\u4ece\u51fd\u6570\u8fd4\u56de\\n- \u83b7\u53d6\u8fd9\u4e9b\u53d8\u91cf\u7684\u5730\u5740\u5c06\u8fd9\u4e9b\u7c7b\u578b\u7684\u503c\u8f6c\u6362\u6216\u5206\u914d\u7ed9`interface{}`\\n- \u5c06\u7c7b\u578b`T`\u7684\u503c\u8f6c\u6362\u4e3a\u7c7b\u578b`T`\uff08\u5141\u8bb8\u4f46\u65e0\u7528\uff09\\n- \u4f7f\u7528\u7c7b\u578b\u65ad\u8a00\u5c06\u63a5\u53e3\u503c\u8f6c\u6362\u4e3a\u8be5\u7c7b\u578b\\n- \u5c06\u7c7b\u578b\u7528\u4f5c\u7c7b\u578b\u5f00\u5173\u4e2d\\n- \u5b9a\u4e49\u5e76\u4f7f\u7528\u4f7f\u7528\u8fd9\u4e9b\u7c7b\u578b\u7684\u590d\u5408\u7c7b\u578b\uff0c\u4f8b\u5982\u8be5\u7c7b\u578b\u7684\u7247\u6bb5\\n- \u5c06\u7c7b\u578b\u4f20\u9012\u7ed9\u67d0\u4e9b\u9884\u5148\u58f0\u660e\u7684\u51fd\u6570\uff0c\u4f8b\u5982`new`\\n## \u5b9a\u4e49\u7ea6\u675f\\n\u5df2\u7ecf\u6709\u4e86\u4e00\u4e2a\u63a5\u8fd1\u7ea6\u675f\u6240\u9700\u7684\u6784\u9020\uff1a\u63a5\u53e3\u7c7b\u578b\u3002\u63a5\u53e3\u7c7b\u578b\u662f\u4e00\u7ec4\u65b9\u6cd5\u3002\u552f\u4e00\u53ef\u4ee5\u5206\u914d\u7ed9\u63a5\u53e3\u7c7b\u578b\u53d8\u91cf\u7684\u503c\u662f\u90a3\u4e9b\u5b9e\u73b0\u76f8\u540c\u65b9\u6cd5\u7684\u7c7b\u578b\u3002\u63a5\u53e3\u7c7b\u578b\u7684\u503c\u80fd\u591f\u6267\u884c\u7684\u64cd\u4f5c\u662f\u8c03\u7528\u65b9\u6cd5\u3002\\n\u4f7f\u7528\u7c7b\u578b\u5b9e\u53c2\u8c03\u7528\u6cdb\u578b\u51fd\u6570\u7c7b\u4f3c\u4e8e\u4e3a\u63a5\u53e3\u7c7b\u578b\u7684\u53d8\u91cf\u8d4b\u503c\uff1a\u7c7b\u578b\u5b9e\u53c2\u5fc5\u987b\u5b9e\u73b0\u7c7b\u578b\u53c2\u6570\u7684\u7ea6\u675f\u3002\u7f16\u5199\u6cdb\u578b\u51fd\u6570\u5c31\u50cf\u4f7f\u7528\u63a5\u53e3\u7c7b\u578b\u7684\u503c\uff1a\u6cdb\u578b\u4ee3\u7801\u53ea\u80fd\u4f7f\u7528\u7ea6\u675f\u5141\u8bb8\u7684\u64cd\u4f5c\uff08\u6216\u4efb\u4f55\u7c7b\u578b\u5141\u8bb8\u7684\u64cd\u4f5c\uff09\u3002\u56e0\u6b64\uff0c\u5728\u8fd9\u79cd\u8bbe\u8ba1\u4e2d\uff0c\u7ea6\u675f\u53ea\u662f\u63a5\u53e3\u7c7b\u578b\u3002\u6ee1\u8db3\u7ea6\u675f\u610f\u5473\u7740\u5b9e\u73b0\u63a5\u53e3\u7c7b\u578b\u3002\\n## `any`\u7ea6\u675f\\n\u7b80\u5316\u6bcf\u6b21\u90fd\u5b9a\u4e49\u4e3a`interface{}`\\n## \u4f7f\u7528\u7ea6\u675f\\n\u5bf9\u4e8e\u6cdb\u578b\u51fd\u6570\uff0c\u53ef\u4ee5\u5c06\u7ea6\u675f\u89c6\u4e3a\u7c7b\u578b\u53c2\u6570\u7684\u7c7b\u578b\uff1a\u5143\u7c7b\u578b\\n``` go\\n\\t  func Stringify[T Stringer](s []T) (ret []string) {\\n\\t    for _, v := range s {\\n\\t      ret = append(ret, v.String())\\n\\t    }\\n\\t    return ret\\n\\t  }\\n```\\n## \u591a\u7c7b\u578b\u53c2\u6570\\n``` go\\n\\t  // s1 s2 \u53ef\u4ee5\u4e0d\u540c\u7c7b\u578b\\n\\t  func Print2[T1, T2 any](s1 []T1, s2 []T2) { ... }\\n\\t  \\n\\t  // s1 s2 \u5fc5\u987b\u662f\u5143\u7d20\u76f8\u540c\u7684\u7c7b\u578b\\n\\t  func Print2Same[T any](s1 []T, s2 []T) { ... }\\n\\t  \\n\\t  // s p \u4e0d\u540c\u7c7b\u578b\\n\\t  func ConcatTo[S Stringer, P Plusser](s []S, p []P) []string {}\\n\\t  \\n\\t  // s1 s2 \u90fd\u7b26\u5408 Stringer\uff0c\u4f46\u5b9e\u73b0\u7c7b\u578b\u4e0d\u540c\\n\\t  func Stringify2[T1, T2 Stringer](s1 []T1, s2 []T2) string {}\\n```\\n## \u6cdb\u578b\u7c7b\u578b\\n\u8981\u4f7f\u7528\u6cdb\u578b\u7c7b\u578b\uff0c\u5fc5\u987b\u63d0\u4f9b\u7c7b\u578b\u5b9e\u53c2\uff0c\u8fd9\u53eb\u505a\u5b9e\u4f8b\u5316\u3002\u7c7b\u578b\u53c2\u6570\u7528\u65b9\u62ec\u53f7\u62ec\u8d77\u6765\u3002\u901a\u8fc7\u4e3a\u7c7b\u578b\u53c2\u6570\u63d0\u4f9b\u7c7b\u578b\u5b9e\u53c2\u6765\u5b9e\u4f8b\u5316\u4e00\u4e2a\u7c7b\u578b\u65f6\uff0c\u4f1a\u751f\u6210\u4e00\u4e2a\u7c7b\u578b\uff0c\u5728\u7c7b\u578b\u53c2\u6570\u7684\u6bcf\u6b21\u4f7f\u7528\u90fd\u4f1a\u88ab\u76f8\u5e94\u7684\u7c7b\u578b\u5b9e\u53c2\u53d6\u4ee3\u3002\\n\u6cdb\u578b\u7c7b\u578b\u53ef\u4ee5\u6709\u65b9\u6cd5\u3002\u65b9\u6cd5\u7684\u63a5\u6536\u65b9\u7c7b\u578b\u5fc5\u987b\u58f0\u660e\u4e0e\u63a5\u6536\u65b9\u7c7b\u578b\u65b9\u6cd5\u4e2d\u58f0\u660e\u7684\u7c7b\u578b\u53c2\u6570\u6570\u91cf\u76f8\u540c\u7684\u7c7b\u578b\u53c2\u6570\u3002\u5b83\u4eec\u7684\u58f0\u660e\u6ca1\u6709\u4efb\u4f55\u7ea6\u675f\u3002\\n``` go\\n\\t  type Vector[T any] []T\\n\\t  \\n\\t  func (v *Vector[T]) Push(x T) { *v = append(*v, x) }\\n```\\n\u65b9\u6cd5\u58f0\u660e\u4e2d\u5217\u51fa\u7684\u7c7b\u578b\u53c2\u6570\u4e0d\u5fc5\u4e0e\u7c7b\u578b\u58f0\u660e\u4e2d\u7684\u7c7b\u578b\u53c2\u6570\u540c\u540d\u3002\u7279\u522b\u662f\uff0c\u5982\u679c\u8be5\u65b9\u6cd5\u672a\u4f7f\u7528\u5b83\u4eec\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528`_`\u3002\\n\u6cdb\u578b\u7c7b\u578b\u901a\u5e38\u53ef\u4ee5\u5f15\u7528\u81ea\u8eab\uff0c\u4f46\u5f53\u6cdb\u578b\u7c7b\u578b\u5f15\u7528\u81ea\u8eab\u65f6\uff0c\u7c7b\u578b\u5b9e\u53c2\u5fc5\u987b\u4e0e\u7c7b\u578b\u53c2\u6570\u7684\u987a\u5e8f\u4e00\u81f4\u3002\u8fd9\u4e2a\u9650\u5236\u963b\u6b62\u4e86\u7c7b\u578b\u5b9e\u4f8b\u5316\u7684\u65e0\u9650\u9012\u5f52\u3002\\n``` go\\n\\t  type List[T any] struct {\\n\\t    next *List[T] // this reference to List[T] is OK\\n\\t    val  T\\n\\t  }\\n\\t  \\n\\t  // This type is INVALID.t\\n\\t  type P[T1, T2 any] struct {\\n\\t    F *P[T2, T1] // INVALID; must be [T1, T2]}\\n\\t  }\\n\\t  \\n\\t  type ListHead[T any] struct {\\n\\t    head *ListElement[T]\\n\\t  }\\n\\t  \\n\\t  type ListElement[T any] struct {\\n\\t    next *ListElement[T]\\n\\t    val  T\\n\\t    // Using ListHead[T] here is OK.\\n\\t    // ListHead[T] refers to ListElement[T] refers to ListHead[T].\\n\\t    // Using ListHead[int] would not be OK, as ListHead[T]\\n\\t    // would have an indirect reference to ListHead[int].\\n\\t    head *ListHead[T]\\n\\t  }\\n```\\n## \u65b9\u6cd5\u4e0d\u80fd\u63a5\u53d7\u5176\u4ed6\u7c7b\u578b\u53c2\u6570\\n\u867d\u7136\u6cdb\u578b\u7c7b\u578b\u7684\u65b9\u6cd5\u53ef\u4ee5\u4f7f\u7528\u8be5\u7c7b\u578b\u7684\u53c2\u6570\uff0c\u4f46\u65b9\u6cd5\u672c\u8eab\u53ef\u80fd\u6ca1\u6709\u5176\u4ed6\u7c7b\u578b\u53c2\u6570\u3002\u5982\u679c\u5411\u65b9\u6cd5\u4e2d\u6dfb\u52a0\u7c7b\u578b\u5b9e\u53c2\u662f\u6709\u7528\u7684\uff0c\u90a3\u4e48\u5fc5\u987b\u7f16\u5199\u4e00\u4e2a\u9002\u5f53\u7684\u53c2\u6570\u5316\u9876\u7ea7\u51fd\u6570\u3002\\n## \u8fd0\u7b97\u7b26\\n### \u7c7b\u578b\u96c6\\n\u6bcf\u4e2a\u7c7b\u578b\u90fd\u6709\u7c7b\u578b\u96c6\uff0c\u975e\u63a5\u53e3\u7c7b\u578b`T`\u7684\u7c7b\u578b\u96c6\u5c31\u662f`{T}`\uff0c\u4ec5\u5305\u542b\u81ea\u8eab\u7684\u96c6\u5408\u3002\u666e\u901a\u63a5\u53e3\u7c7b\u578b\u7684\u7c7b\u578b\u96c6\u5c31\u662f\u6240\u6709\u5b9e\u73b0\u63a5\u53e3\u65b9\u6cd5\u7684\u7c7b\u578b\u3002\\n\u666e\u901a\u7c7b\u578b\u7684\u7c7b\u578b\u96c6\u662f\u65e0\u7a77\u7684\uff0c\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u7c7b\u578b`T`\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u63a8\u65ad\u662f\u5426\u5c5e\u4e8e\u63a5\u53e3\u7c7b\u578b`IT`\u3002\u4f46\u65e0\u6cd5\u7a77\u4e3e`IT`\u7684\u6240\u6709\u7c7b\u578b\uff0c`IT`\u662f\u5176\u672c\u8eab\u7c7b\u578b\u96c6\u7684\u4e00\u5458\uff0c`interface{}`\u7684\u7c7b\u578b\u96c6\u662f\u6240\u6709\u53ef\u80fd\u7c7b\u578b\u7684\u96c6\u3002\\n\u901a\u8fc7\u67e5\u770b\u63a5\u53e3\u7684\u5143\u7d20\u6765\u6784\u9020\u63a5\u53e3\u7c7b\u578b\u7684\u7c7b\u578b\u96c6\u662f\u5f88\u6709\u7528\u7684\u3002\u8fd9\u5c06\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u4ea7\u751f\u76f8\u540c\u7684\u7ed3\u679c\u3002\u63a5\u53e3\u7684\u5143\u7d20\u53ef\u4ee5\u662f\u65b9\u6cd5\u7b7e\u540d\u6216\u5d4c\u5165\u5f0f\u63a5\u53e3\u7c7b\u578b\u3002\u867d\u7136\u65b9\u6cd5\u7b7e\u540d\u4e0d\u662f\u4e00\u4e2a\u7c7b\u578b\uff0c\u4f46\u662f\u4e3a\u5b83\u5b9a\u4e49\u4e00\u4e2a\u7c7b\u578b\u96c6\u662f\u5f88\u65b9\u4fbf\u7684\uff1a\u58f0\u660e\u8be5\u65b9\u6cd5\u7684\u6240\u6709\u7c7b\u578b\u7684\u96c6\u5408\u3002\u5d4c\u5165\u5f0f\u63a5\u53e3\u7c7b\u578b`E`\u7684\u7c7b\u578b\u96c6\u5c31\u662f`E`\u7684\u7c7b\u578b\u96c6\uff1a\u58f0\u660e`E`\u7684\u6240\u6709\u65b9\u6cd5\u7684\u6240\u6709\u7c7b\u578b\u7684\u96c6\u5408\u3002\\n\u5bf9\u4e8e\u4efb\u4f55\u65b9\u6cd5\u7b7e\u540d`M`\uff0c`interface{ M }`\u7684\u7c7b\u578b\u96c6\u5c31\u662f\u7c7b\u578b`M`\uff1a\u5b9a\u4e49`M`\u7684\u6240\u6709\u7c7b\u578b\u96c6\u5408\u3002\u5bf9\u4efb\u4f55\u65b9\u6cd5\u7b7e\u540d`M1`\u548c`M2`\uff0c`interface{ M1; M2 }`\u7684\u7c7b\u578b\u96c6\u5c31\u662f\u540c\u65f6\u5b9a\u4e49`M1`\u548c`M2`\u7684\u6240\u6709\u7c7b\u578b\u96c6\u5408\uff0c\u5373`M1`\u7c7b\u578b\u96c6\u4e0e`M2`\u7c7b\u578b\u96c6\u7684\u4ea4\u96c6\u3002\\n### \u7ea6\u675f\u7c7b\u578b\u96c6\\n\u6ee1\u8db3\u7ea6\u675f\u7684\u7c7b\u578b\u5b9e\u53c2\u5c31\u662f\u7ea6\u675f\u7c7b\u578b\u96c6\u7684\u4e00\u5458\u3002\\n\u5bf9\u4e8e\u666e\u901a\u63a5\u53e3\u7c7b\u578b\uff0c\u5176\u552f\u4e00\u5143\u7d20\u662f\u65b9\u6cd5\u7b7e\u540d\u548c\u5d4c\u5165\u7684\u666e\u901a\u63a5\u53e3\u7c7b\u578b\uff0c\u5176\u542b\u4e49\u5b8c\u5168\u76f8\u540c\uff1a\u5b9e\u73b0\u63a5\u53e3\u7c7b\u578b\u7684\u7c7b\u578b\u96c6\u5c31\u662f\u5176\u7c7b\u578b\u96c6\u4e2d\u7684\u7c7b\u578b\u96c6\u3002\\n### \u7ea6\u675f\u5143\u7d20\\n\u666e\u901a\u63a5\u53e3\u7c7b\u578b\u7684\u5143\u7d20\u662f\u65b9\u6cd5\u7b7e\u540d\u548c\u5d4c\u5165\u5f0f\u63a5\u53e3\u7c7b\u578b\u3002\u5efa\u8bae\u5141\u8bb8\u5728\u7528\u4f5c\u7ea6\u675f\u7684\u63a5\u53e3\u7c7b\u578b\u4e2d\u4f7f\u7528\u53e6\u5916\u4e09\u4e2a\u5143\u7d20\u3002\u5982\u679c\u4f7f\u7528\u4e86\u8fd9\u4e9b\u9644\u52a0\u5143\u7d20\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\uff0c\u5219\u63a5\u53e3\u7c7b\u578b\u4e0d\u80fd\u7528\u4f5c\u666e\u901a\u7c7b\u578b\uff0c\u800c\u53ea\u80fd\u7528\u4f5c\u7ea6\u675f\u3002\\n#### \u4efb\u610f\u7c7b\u578b\u7ea6\u675f\u5143\u7d20\\n\u65b0\u5143\u7d20\u53ea\u5141\u8bb8\u5217\u51fa\u4efb\u4f55\u7c7b\u578b\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u63a5\u53e3\u7c7b\u578b\u3002\u4f8b\u5982\uff1a`type Integer interface{int}`\u3002\u5f53\u975e\u63a5\u53e3\u7c7b\u578b`T`\u5217\u4e3a\u7ea6\u675f\u7684\u5143\u7d20\u65f6\uff0c\u5176\u7c7b\u578b\u96c6\u4ec5\u4e3a`{T}`\u3002`int`\u7684\u7c7b\u578b\u96c6\u662f`{int}`\u3002\u7531\u4e8e\u7ea6\u675f\u7c7b\u578b\u96c6\u662f\u6240\u6709\u5143\u7d20\u7684\u7c7b\u578b\u96c6\u7684\u4ea4\u53c9\u90e8\u5206\uff0c\u56e0\u6b64`Integer`\u7684\u7c7b\u578b\u96c6\u4e5f\u662f`{int}`\u3002\u8fd9\u4e2a`Integer`\u7ea6\u675f\u53ef\u4ee5\u88ab\u96c6\u5408`{int}`\u4e2d\u7684\u4efb\u4f55\u7c7b\u578b\u6ee1\u8db3\u3002\\n\u8be5\u7c7b\u578b\u53ef\u80fd\u662f\u5f15\u7528\u7c7b\u578b\u53c2\u6570\uff08\u6216\u591a\u4e2a\uff09\u7684\u7c7b\u578b\u6587\u5b57\uff0c\u4f46\u53ef\u80fd\u4e0d\u662f\u4e00\u4e2a\u4e3b\u7c7b\u578b\u53c2\u6570\u3002\\n``` go\\n\\t\\t\\t  // EmbeddedParameter is INVALID.\\n\\t\\t\\t  type EmbeddedParameter[T any] interface {\\n\\t\\t\\t    T // INVALID: may not list a plain type parameter\\n\\t\\t\\t  }\\n```\\n#### \u8fd1\u4f3c\u7ea6\u675f\u5143\u7d20\\n`~T`\uff1a\u5e95\u5c42\u7c7b\u578b\u4e3a`T`\u7684\u6240\u6709\u7c7b\u578b\u7684\u96c6\u5408\\n\u5e95\u5c42\u7c7b\u578b\u6ee1\u8db3\uff1a\\n1. \u7c7b\u578b\u5b57\u9762\u91cf\uff0c\u4f8b\u5982`[]byte`\u3001`struct{ f int }`\\n2. \u5927\u90e8\u5206\u9884\u58f0\u660e\u7c7b\u578b\uff0c\u4f8b\u5982`int`\u3001`string`\uff08\u4e0d\u5305\u62ec`error`\uff09\\n\u5982\u679c`T`\u662f\u7c7b\u578b\u53c2\u6570\u6216`T`\u662f\u63a5\u53e3\u7c7b\u578b\uff0c\u5219\u4e0d\u5141\u8bb8\u4f7f\u7528`~T`\u3002\\n``` go\\n\\t\\t\\t  type MyString string\\n\\t\\t\\t  // AnyString matches any type whose underlying type is string.\\n\\t\\t\\t  // This includes, among others, the type string itself, and\\n\\t\\t\\t  // the type MyString.\\n\\t\\t\\t  type AnyString interface {\\n\\t\\t\\t    ~string\\n\\t\\t\\t  }\\n\\t\\t\\t  \\n\\t\\t\\t  // ApproximateMyString is INVALID.\\n\\t\\t\\t  type ApproximateMyString interface {\\n\\t\\t\\t    ~MyString // INVALID: underlying type of MyString is not MyString\\n\\t\\t\\t  }\\n\\t\\t\\t  \\n\\t\\t\\t  // ApproximateParameter is INVALID.\\n\\t\\t\\t  type ApproximateParameter[T any] interface {\\n\\t\\t\\t    ~T // INVALID: T is a type parameter\\n\\t\\t\\t  }\\n```\\n#### \u8054\u5408\u5143\u7d20\\n\u7ea6\u675f\u5143\u7d20\u7cfb\u5217\uff0c\u901a\u8fc7`|`\u5206\u5272\uff0c\u662f\u6bcf\u4e2a\u5143\u7d20\u8054\u5408\u7684\u7c7b\u578b\u96c6\uff0c\u6bcf\u4e2a\u5143\u7d20\u5fc5\u987b\u662f\u4e0d\u540c\u7c7b\u578b\\n### \u57fa\u4e8e\u7c7b\u578b\u96c6\u7684\u8fd0\u7b97\u7b26\\n\u7c7b\u578b\u96c6\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u5728\u6cdb\u578b\u65b9\u6cd5\u4e2d\u4f7f\u7528\u8fd0\u7b97\u7b26\uff0c\u4f8b\u5982`<`\u3002\u5728\u6cdb\u578b\u65b9\u6cd5\u4e2d\u5c31\u53ef\u4ee5\u4f7f\u7528\u7ea6\u675f\u7c7b\u578b\u6240\u652f\u6301\u7684\u8fd0\u7b97\u7b26\u3002\\n### \u7ea6\u675f\u7684\u6bd4\u8f83\u7c7b\u578b\\n\u8fd0\u7b97\u7b26\u53ea\u80fd\u4e0e\u8bed\u8a00\u9884\u5148\u58f0\u660e\u7684\u7c7b\u578b\u4e00\u8d77\u4f7f\u7528\u7684\u89c4\u5219\u6709\u4e24\u4e2a\u4f8b\u5916\u60c5\u51b5`==`\u3001`!=`\uff0c\u8fd9\u4e24\u4e2a\u8fd0\u7b97\u7b26\u4ec5\u5bf9\u7ed3\u6784\u4f53\u3001\u6570\u7ec4\u548c\u63a5\u53e3\u7c7b\u578b\u5141\u8bb8\u4f7f\u7528\u3002\\n\u4e3a\u4e86\u5b9a\u4e49\u63a5\u53d7\u6bd4\u8f83\u7c7b\u578b\u7684\u7ea6\u675f\uff0c\u5f15\u5165`comparable`\u3002`comparable`\u7ea6\u675f\u7684\u7c7b\u578b\u96c6\u662f\u6240\u6709\u6bd4\u8f83\u7c7b\u578b\u7684\u96c6\u5408\u3002\\n``` go\\n\\t\\t  // Index returns the index of x in s, or -1 if not found.\\n\\t\\t  func Index[T comparable](s []T, x T) int {\\n\\t\\t    for i, v := range s {\\n\\t\\t      // v and x are type T, which has the comparable\\n\\t\\t      // constraint, so we can use == here.\\n\\t\\t      if v == x {\\n\\t\\t        return i\\n\\t\\t      }\\n\\t\\t    }\\n\\t\\t    return -1\\n\\t\\t  }\\n\\t\\t  \\n\\t\\t  // ComparableHasher is a type constraint that matches all\\n\\t\\t  // comparable types with a Hash method.\\n\\t\\t  type ComparableHasher interface {\\n\\t\\t    comparable\\n\\t\\t    Hash() uintptr\\n\\t\\t  }\\n\\t\\t  \\n\\t\\t  // ImpossibleConstraint is a type constraint that no type can satisfy,\\n\\t\\t  // because slice types are not comparable.\\n\\t\\t  type ImpossibleConstraint interface {\\n\\t\\t    comparable\\n\\t\\t    []int\\n\\t\\t  }\\n```\\n## \u76f8\u4e92\u5f15\u7528\u7684\u7c7b\u578b\u53c2\u6570\\n\u5728\u5355\u4e2a\u7c7b\u578b\u53c2\u6570\u5217\u8868\u4e2d\uff0c\u7ea6\u675f\u53ef\u4ee5\u5f15\u7528\u4efb\u4f55\u5176\u4ed6\u7c7b\u578b\u53c2\u6570\uff0c\u751a\u81f3\u662f\u7a0d\u540e\u5728\u540c\u4e00\u5217\u8868\u4e2d\u58f0\u660e\u7684\u7c7b\u578b\u53c2\u6570\u3002\\n``` go\\n\\t  package graph\\n\\t  // NodeConstraint is the type constraint for graph nodes:\\n\\t  // they must have an Edges method that returns the Edge\'s\\n\\t  // that connect to this Node.\\n\\t  type NodeConstraint[Edge any] interface {\\n\\t    Edges() []Edge\\n\\t  }\\n\\t  \\n\\t  // EdgeConstraint is the type constraint for graph edges:\\n\\t  // they must have a Nodes method that returns the two Nodes\\n\\t  // that this edge connects.\\n\\t  type EdgeConstraint[Node any] interface {\\n\\t    Nodes() (from, to Node)\\n\\t  }\\n\\t  \\n\\t  // Graph is a graph composed of nodes and edges.\\n\\t  type Graph[Node NodeConstraint[Edge], Edge EdgeConstraint[Node]] struct { ... }\\n\\t  \\n\\t  // New returns a new graph given a list of nodes.\\n\\t  func New[Node NodeConstraint[Edge], Edge EdgeConstraint[Node]] (nodes []Node) *Graph {\\n\\t    ...\\n\\t  }\\n\\t  \\n\\t  // ShortestPath returns the shortest path between two nodes,\\n\\t  // as a list of edges.\\n\\t  func (g *Graph[Node, Edge]) ShortestPath(from, to Node) []Edge {\\n\\t    ... \\n\\t  }\\n\\t  \\n\\t  \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\\n\\t  package demo\\n\\t  \\n\\t  // Vertex is a node in a graph.\\n\\t  type Vertex struct { ... }\\n\\t  \\n\\t  // Edges returns the edges connected to v.\\n\\t  func (v *Vertex) Edges() []*FromTo { ... }\\n\\t  \\n\\t  // FromTo is an edge in a graph.\\n\\t  type FromTo struct { ... }\\n\\t  \\n\\t  // Nodes returns the nodes that ft connects.\\n\\t  func (ft *FromTo) Nodes() (*Vertex, *Vertex) { ... }\\n\\t  \\n\\t  \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\\n\\t  var g = graph.New[*Vertex, *FromTo]([]*Vertex{...})\\n\\t  \\n\\t  type NodeInterface interface { Edges() []EdgeInterface }\\n\\t  type EdgeInterface interface { Nodes() (NodeInterface, NodeInterface) }\\n\\t  \\n\\t  // \u5141\u8bb8\u8fd9\u4e48\u5b9a\u4e49\uff0c\u4f46\u4e0d\u5efa\u8bae\\n\\t  var g = graph.New[*NodeInterface, *EdgeInterface]([]*NodeInterface{...})\\n```\\n## \u7c7b\u578b\u63a8\u65ad\\n\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u4f7f\u7528\u7c7b\u578b\u63a8\u65ad\u6765\u907f\u514d\u663e\u5f0f\u5199\u51fa\u90e8\u5206\u6216\u5168\u90e8\u7c7b\u578b\u53c2\u6570\u3002\u53ef\u4ee5\u5bf9\u51fd\u6570\u8c03\u7528\u4f7f\u7528\u51fd\u6570\u5b9e\u53c2\u7c7b\u578b\u63a8\u65ad\uff0c\u4ece\u975e\u7c7b\u578b\u5165\u53c2\u7684\u7c7b\u578b\u63a8\u65ad\u7c7b\u578b\u5b9e\u53c2\u3002\u53ef\u4ee5\u4f7f\u7528\u7ea6\u675f\u7c7b\u578b\u63a8\u65ad\u4ece\u5df2\u77e5\u7c7b\u578b\u5165\u53c2\u63a8\u65ad\u672a\u77e5\u7c7b\u578b\u5b9e\u53c2\u3002\\n``` go\\n\\t  func Map[F, T any](s []F, f func(F) T) []T { ... }\\n\\t  \\n\\t  var s []int\\n\\t  f := func(i int) int64 { return int64(i) }\\n\\t  var r []int64\\n\\t  // Specify both type arguments explicitly.\\n\\t  r = Map[int, int64](s, f)\\n\\t  // Specify just the first type argument, for F,\\n\\t  // and let T be inferred.\\n\\t  r = Map[int](s, f)\\n\\t  // Don\'t specify any type arguments, and let both be inferred.\\n\\t  r = Map(s, f)\\n```\\n### \u7c7b\u578b\u7edf\u4e00\\n\u7c7b\u578b\u7edf\u4e00\u57fa\u4e8e\u7c7b\u578b\u63a8\u65ad\uff0c\u5e94\u7528\u4e8e\u4e24\u79cd\u7c7b\u578b\uff0c\u6ee1\u8db3\u4ee5\u4e0b\u4e00\u79cd\u6216\u90fd\u6ee1\u8db3\uff1a\\n1. \u662f\u7c7b\u578b\u53c2\u6570\\n\\t2. \u5305\u542b\u7c7b\u578b\u53c2\u6570\\n\\n\u7c7b\u578b\u7edf\u4e00\u901a\u8fc7\u6bd4\u8f83\u7c7b\u578b\u7ed3\u6784\u5b9e\u73b0\uff0c\u5ffd\u7565\u7c7b\u578b\u53c2\u6570\u7684\u7ed3\u6784\u5fc5\u987b\u76f8\u540c\uff0c\u5176\u4ed6\u7c7b\u578b\u5fc5\u987b\u7b49\u6548\u3002\\n\u4f8b\u5982\uff1a`T1`\u3001`T2`\u662f\u7c7b\u578b\u53c2\u6570\uff0c`[]map[int]bool`\u53ef\u4ee5\u4e0e\u4ee5\u4e0b\u7c7b\u578b\u7edf\u4e00\uff1a\\n- `[]map[int]bool`\\n- `T1(T1 matches []map[int]bool)`\\n- `[]T1(T1 matches map[int]bool)`\\n- `[]map[T1]T2(T1 matches int, T2 matches bool)`\\n### \u51fd\u6570\u5b9e\u53c2\u7c7b\u578b\u63a8\u65ad\\n\u552f\u4e00\u53ef\u4ee5\u63a8\u65ad\u7684\u7c7b\u578b\u5b9e\u53c2\u662f\u90a3\u4e9b\u7528\u4e8e\u51fd\u6570\uff08\u975e\u7c7b\u578b\uff09\u8f93\u5165\u53c2\u6570\u7c7b\u578b\u7684\u53c2\u6570\u3002\u5982\u679c\u67d0\u4e9b\u7c7b\u578b\u5b9e\u53c2\u4ec5\u7528\u4e8e\u51fd\u6570\u7684\u7ed3\u679c\u53c2\u6570\u7c7b\u578b\uff0c\u6216\u4ec5\u7528\u4e8e\u51fd\u6570\u4f53\uff0c\u5219\u65e0\u6cd5\u4f7f\u7528\u51fd\u6570\u5b9e\u53c2\u7c7b\u578b\u63a8\u65ad\u6765\u63a8\u65ad\u8fd9\u4e9b\u7c7b\u578b\u5b9e\u53c2\u3002\\n\u51fd\u6570\u5b9e\u53c2\u7c7b\u578b\u63a8\u65ad\u662f\u4e00\u79cd\u53cc\u8fc7\u7a0b\u7b97\u6cd5\uff0c\u4f7f\u7528\u53cc\u8fc7\u7a0b\u7b97\u6cd5\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u540e\u9762\u7684\u7b97\u6cd5\u53ef\u4ee5\u786e\u5b9a\u975e\u7c7b\u578b\u7ea6\u675f\u7684\u7c7b\u578b\uff1a\\n1. \u5ffd\u7565\u8c03\u7528\u8005\u4fa7\u7684\u975e\u7c7b\u578b\u7ea6\u675f\u4ee5\u53ca\u65b9\u6cd5\u5b9a\u4e49\u4e2d\u7684\u7ec4\u5408\u7c7b\u578b\u3002\u7edf\u4e00\u5217\u8868\u4e2d\u7684\u76f8\u5e94\u7c7b\u578b\u3002\u8fd9\u5c06\u63d0\u4f9b\u51fd\u6570\u7aef\u7684\u7c7b\u578b\u53c2\u6570\u4e0e\u8c03\u7528\u65b9\u7aef\u7684\u7c7b\u578b\u4e4b\u95f4\u7684\u5173\u8054\u3002\u5982\u679c\u540c\u4e00\u7c7b\u578b\u53c2\u6570\u5728\u51fd\u6570\u7aef\u51fa\u73b0\u591a\u6b21\uff0c\u5219\u5b83\u5c06\u5339\u914d\u8c03\u7528\u65b9\u7aef\u7684\u591a\u4e2a\u5b9e\u53c2\u7c7b\u578b\u3002\u5982\u679c\u8fd9\u4e9b\u8c03\u7528\u65b9\u7c7b\u578b\u4e0d\u7b49\u4ef7\uff0c\u5c31\u4f1a\u62a5\u544a\u4e00\u4e2a\u9519\u8bef\u3002\\n\\t2. \u68c0\u67e5\u8c03\u7528\u7aef\u975e\u7c7b\u578b\u7ea6\u675f\u3002\u5982\u679c\u4e0d\u5b58\u5728\u975e\u7c7b\u578b\u7ea6\u675f\u6216\u5728\u76f8\u5e94\u65b9\u6cd5\u7c7b\u578b\u7684\u7c7b\u578b\u53c2\u6570\u5df2\u7ecf\u5339\u914d\u5176\u4ed6\u8f93\u5165\u7c7b\u578b\uff0c\u5219\u7c7b\u578b\u63a8\u65ad\u7ed3\u675f\u3002\\n\\n\u4f8b\u5b50\uff1a\\n``` go\\n\\t\\t\\t  s1 := []int{1, 2, 3}\\n\\t\\t\\t  Print(s1)\\n```\\n\u5c06`[]int`\u4e0e`[]T`\u6bd4\u8f83\uff0c`int`\u5339\u914d`T`\uff0c\u63a8\u65ad\u7ed3\u675f\u3002`T`\u5c31\u662f`int`\uff0c\u56e0\u6b64`Print`\u5c31\u662f\u8c03\u7528`Print[int]`\\n``` go\\n\\t\\t\\t  // Map calls the function f on every element of the slice s,\\n\\t\\t\\t  // returning a new slice of the results.\\n\\t\\t\\t  func Map[F, T any](s []F, f func(F) T) []T {\\n\\t\\t\\t    r := make([]T, len(s))\\n\\t\\t\\t    for i, v := range s {\\n\\t\\t\\t      r[i] = f(v)\\n\\t\\t\\t    }\\n\\t\\t\\t    return r\\n\\t\\t\\t  }\\n```\\n`F`\u3001`T`\u90fd\u4f5c\u4e3a\u5165\u53c2\uff0c\u6240\u4ee5\u65b9\u6cd5\u5b9e\u53c2\u7c7b\u578b\u63a5\u53e3\u662f\u53ef\u884c\u7684\u3002`strs := Mqp([]int{1, 2, 3}, strconv.Itoa)`\u3002\u53ef\u4ee5\u5c06`[]int`\u5339\u914d`[]F`\uff0c`F`\u5339\u914d`int`\u3002`strconv.Itoa`\u662f`func(int) string`\uff0c\u56e0\u6b64`F`\u5bf9\u5e94`int`\uff0c`T`\u5bf9\u5e94`string`\u3002`F`\u5339\u914d\u4e862\u6b21`int`\u3002\u63a8\u65ad\u6210\u529f\uff0c\u56e0\u6b64\u5339\u914d\u4e3a`Map[int, string]`\u3002\\n\u51fd\u6570\u5b9e\u53c2\u7c7b\u578b\u63a8\u65ad\u662f\u5728\u4e0d\u8003\u8651\u7ea6\u675f\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u7684\u3002\u9996\u5148\uff0c\u4f7f\u7528\u51fd\u6570\u5b9e\u53c2\u7c7b\u578b\u63a8\u65ad\u6765\u786e\u5b9a\u8981\u7528\u4e8e\u51fd\u6570\u7684\u7c7b\u578b\u5b9e\u53c2\uff0c\u7136\u540e\uff0c\u5982\u679c\u6210\u529f\uff0c\u5c06\u68c0\u67e5\u8fd9\u4e9b\u7c7b\u578b\u5b9e\u53c2\u662f\u5426\u5b9e\u73b0\u4e86\u7ea6\u675f\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09\u3002\u6ce8\u610f\uff0c\u5728\u7684\u51fd\u6570\u5b9e\u53c2\u7c7b\u578b\u63a8\u65ad\u6210\u529f\u4e4b\u540e\uff0c\u7f16\u8bd1\u5668\u4ecd\u5fc5\u987b\u68c0\u67e5\u5b9e\u53c2\u662f\u5426\u53ef\u4ee5\u5206\u914d\u7ed9\u53c2\u6570\uff0c\u5c31\u50cf\u4efb\u4f55\u51fd\u6570\u8c03\u7528\u4e00\u6837\u3002\\n### \u7ea6\u675f\u7c7b\u578b\u63a8\u65ad\\n\u7ea6\u675f\u7c7b\u578b\u63a8\u65ad\u5141\u8bb8\u57fa\u4e8e\u7c7b\u578b\u53c2\u6570\u7ea6\u675f\u4ece\u53e6\u4e00\u4e2a\u7c7b\u578b\u5b9e\u53c2\u63a8\u65ad\u4e00\u4e2a\u7c7b\u578b\u5b9e\u53c2\u3002\\n\u5b9e\u7528\u6027\uff1a\u5f53\u51fd\u6570\u60f3\u8981\u4e3a\u67d0\u4e2a\u5176\u4ed6\u7c7b\u578b\u53c2\u6570\u7684\u5143\u7d20\u5b9a\u4e49\u7c7b\u578b\u540d\u65f6\uff0c\u6216\u8005\u5f53\u51fd\u6570\u60f3\u8981\u5bf9\u57fa\u4e8e\u67d0\u4e2a\u5176\u4ed6\u7c7b\u578b\u53c2\u6570\u7684\u7c7b\u578b\u5e94\u7528\u7ea6\u675f\u65f6\\n\u53ea\u6709\u5f53\u67d0\u4e2a\u7c7b\u578b\u53c2\u6570\u7684\u7ea6\u675f\u4e2d\u7684\u67d0\u4e2a\u7c7b\u578b\u96c6\u4e2d\u53ea\u6709\u4e00\u4e2a\u7c7b\u578b\uff0c\u6216\u8005\u67d0\u4e2a\u7c7b\u578b\u96c6\u4e2d\u6bcf\u4e2a\u7c7b\u578b\u7684\u57fa\u7840\u7c7b\u578b\u90fd\u662f\u540c\u4e00\u7c7b\u578b\u65f6\uff0c\u7ea6\u675f\u7c7b\u578b\u63a8\u65ad\u624d\u80fd\u63a8\u65ad\u7c7b\u578b\u3002\u8fd9\u4e24\u79cd\u60c5\u51b5\u7565\u6709\u4e0d\u540c\uff0c\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u7c7b\u578b\u96c6\u5177\u6709\u660e\u786e\u7684\u4e00\u79cd\u7c7b\u578b\uff0c\u5355\u4e2a\u7c7b\u578b\u4e0d\u5fc5\u662f\u5176\u81ea\u8eab\u7684\u57fa\u7840\u7c7b\u578b\u3002\u65e0\u8bba\u54ea\u79cd\u65b9\u5f0f\uff0c\u5355\u4e2a\u7c7b\u578b\u90fd\u79f0\u4e3a\u7ed3\u6784\u7c7b\u578b\uff0c\u7ea6\u675f\u79f0\u4e3a\u7ed3\u6784\u7ea6\u675f\u3002\u7ed3\u6784\u7c7b\u578b\u63cf\u8ff0\u4e86\u7c7b\u578b\u53c2\u6570\u6240\u9700\u7684\u7ed3\u6784\u3002\u7ed3\u6784\u7ea6\u675f\u4e5f\u53ef\u4ee5\u5b9a\u4e49\u65b9\u6cd5\uff0c\u4f46\u8fd9\u4e9b\u65b9\u6cd5\u88ab\u7ea6\u675f\u7c7b\u578b\u63a8\u7406\u5ffd\u7565\u3002\u4e3a\u4e86\u4f7f\u7ea6\u675f\u7c7b\u578b\u63a8\u65ad\u6709\u7528\uff0c\u901a\u5e38\u5c06\u4f7f\u7528\u4e00\u4e2a\u6216\u591a\u4e2a\u7c7b\u578b\u53c2\u6570\u6765\u5b9a\u4e49\u7ed3\u6784\u7c7b\u578b\u3002\\n\u4ec5\u5f53\u81f3\u5c11\u6709\u4e00\u4e2a\u7c7b\u578b\u53c2\u6570\u7684\u7c7b\u578b\u53c2\u6570\u672a\u77e5\u65f6\uff0c\u624d\u4f1a\u5c1d\u8bd5\u7ea6\u675f\u7c7b\u578b\u63a8\u65ad\u3002\\n\u63a8\u65ad\u7b97\u6cd5\uff1a\\n1. \u521b\u5efa\u4ece\u7c7b\u578b\u53c2\u6570\u5230\u7c7b\u578b\u5b9e\u53c2\u7684\u6620\u5c04\u3002\u6839\u636e\u5df2\u77e5\u7c7b\u578b\u5b9e\u53c2\u7684\u7c7b\u578b\u53c2\u6570\u521d\u59cb\u5316\u6620\u5c04\u3002\\n\\t2. \u5bf9\u4e8e\u6bcf\u4e2a\u7ed3\u6784\u7ea6\u675f\u7684\u7c7b\u578b\u53c2\u6570\uff0c\u7edf\u4e00\u7c7b\u578b\u53c2\u6570\u4e0e\u7ed3\u6784\u7c7b\u578b\u3002\u8fd9\u5c06\u7c7b\u578b\u53c2\u6570\u4e0e\u5176\u7ea6\u675f\u76f8\u5173\u8054\u3002\u5c06\u7ed3\u679c\u6dfb\u52a0\u5230\u7ef4\u62a4\u7684\u6620\u5c04\u4e2d\u3002\\n\\t3. \u7edf\u4e00\u7684\u8fc7\u7a0b\u4e2d\uff0c\u627e\u5230\u7c7b\u578b\u53c2\u6570\u7684\u5173\u8054\uff0c\u4e5f\u52a0\u5165\u6620\u5c04\u4e2d\u3002\\n\\t4. \u5f53\u627e\u5230\u4efb\u4f55\u4e00\u4e2a\u7c7b\u578b\u53c2\u6570\u7684\u591a\u4e2a\u5173\u8054\u65f6\uff0c\u7edf\u4e00\u8fd9\u4e9b\u5173\u8054\u4ee5\u751f\u6210\u5355\u4e2a\u6620\u5c04\u6761\u76ee\u3002\\n\\t5. \u5982\u679c\u4e00\u4e2a\u7c7b\u578b\u53c2\u6570\u4e0e\u53e6\u4e00\u4e2a\u7c7b\u578b\u53c2\u6570\u76f4\u63a5\u5173\u8054\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u4eec\u5fc5\u987b\u90fd\u4e0e\u540c\u4e00\u7c7b\u578b\u5339\u914d\uff0c\u90a3\u4e48\u5c06\u6bcf\u4e2a\u53c2\u6570\u7684\u5173\u8054\u7edf\u4e00\u5728\u4e00\u8d77\u3002\\n\\t6. \u4ee5\u4e0a\u4efb\u610f\u6b65\u9aa4\u5931\u8d25\uff0c\u7c7b\u578b\u63a8\u65ad\u5c31\u5931\u8d25\\n\\n\u5728\u5c06\u6240\u6709\u7c7b\u578b\u53c2\u6570\u4e0e\u7ed3\u6784\u7ea6\u675f\u5408\u5e76\u4e4b\u540e\uff0c\u5c31\u6709\u4e86\u5404\u79cd\u7c7b\u578b\u53c2\u6570\u5230\u7c7b\u578b\uff08\u53ef\u80fd\u662f\u6216\u5305\u542b\u5176\u4ed6\u7c7b\u578b\u53c2\u6570\uff09\u7684\u6620\u5c04\u3002\u7ee7\u7eed\u67e5\u627e\u7c7b\u578b\u53c2\u6570`T`\u5230\u5b8c\u5168\u5df2\u77e5\u7684\u7c7b\u578b\u5b9e\u53c2`A`\u7684\u6620\u5c04\uff0c\u8be5\u7c7b\u578b\u5b9e\u53c2\u4e0d\u5305\u542b\u4efb\u4f55\u7c7b\u578b\u53c2\u6570\u3002\\n\u5728\u6620\u5c04\u7684\u7c7b\u578b\u53c2\u6570\u4e2d\u51fa\u73b0`T`\u7684\u4efb\u4f55\u5730\u65b9\uff0c\u90fd\u5c06`T`\u66ff\u6362\u4e3a`A`\u3002\\n\u91cd\u590d\u6b64\u8fc7\u7a0b\uff0c\u76f4\u5230\u66ff\u6362\u5b8c\u6bcf\u4e2a\u7c7b\u578b\u53c2\u6570\u3002\\n\u5f53\u7ea6\u675f\u7c7b\u578b\u63a8\u65ad\u53ef\u884c\u65f6\uff0c\u5904\u7406\u6d41\u7a0b\uff1a\\n- \u6839\u636e\u5df2\u77e5\u7c7b\u578b\u5b9e\u53c2\u6784\u5efa\u6620\u5c04\\n- \u5e94\u7528\u7ea6\u675f\u7c7b\u578b\u63a8\u65ad\\n- \u6839\u636e\u7c7b\u578b\u5b9e\u53c2\u5e94\u7528\u51fd\u6570\u7c7b\u578b\u63a8\u65ad\\n- \u518d\u6b21\u5e94\u7528\u7ea6\u675f\u7c7b\u578b\u63a8\u65ad\\n- \u4f7f\u7528\u4efb\u4f55\u5269\u4f59\u975e\u7c7b\u578b\u5b9e\u53c2\u7684\u9ed8\u8ba4\u7c7b\u578b\u51fd\u6570\u65b9\u6cd5\u7c7b\u578b\u63a8\u65ad\\n- \u518d\u6b21\u5e94\u7528\u7ea6\u675f\u7c7b\u578b\u63a8\u65ad\\n### \u5143\u7d20\u7ea6\u675f\u793a\u4f8b\\n``` go\\n\\t\\t  // Double returns a new slice that contains all the elements of s, doubled.\\n\\t\\t  func Double[E constraints.Integer](s []E) []E {\\n\\t\\t    r := make([]E, len(s))\\n\\t\\t    for i, v := range s {\\n\\t\\t      r[i] = v + v\\n\\t\\t    }\\n\\t\\t    return r\\n\\t\\t  }\\n\\t\\t  \\n\\t\\t  // MySlice is a slice of ints.type \\n\\t\\t  MySlice []int\\n\\t\\t  \\n\\t\\t  // The type of V1 will be []int, not MySlice.\\n\\t\\t  // Here we are using function argument type inference,\\n\\t\\t  // but not constraint type inference.\\n\\t\\t  var V1 = Double(MySlice{1})\\n\\t\\t  \\n\\t\\t  // DoubleDefined returns a new slice that contains the elements of s,\\n\\t\\t  // doubled, and also has the same type as s.\\n\\t\\t  func DoubleDefined[S ~[]E, E constraints.Integer](s S) S {\\n\\t\\t    // Note that here we pass S to make, where above we passed []E.\\n\\t\\t    r := make(S, len(s))\\n\\t\\t    for i, v := range s {\\n\\t\\t      r[i] = v + v\\n\\t\\t    }\\n\\t\\t    return r\\n\\t\\t  }\\n\\t\\t  \\n\\t\\t  // The type of V2 will be MySlice.\\n\\t\\t  var V2 = DoubleDefined[MySlice, int](MySlice{1})\\n\\t\\t  // \u65b9\u6cd5\u5b9e\u53c2\u7c7b\u578b\u63a8\u65ad\u672c\u8eab\u4e0d\u8db3\u4ee5\u63a8\u65ad\u6b64\u5904\u7684\u7c7b\u578b\u5b9e\u53c2\\n\\t\\t  // \u56e0\u4e3a\u7c7b\u578b\u53c2\u6570E\u672a\u7528\u4e8e\u4efb\u4f55\u8f93\u5165\u53c2\u6570\u3002\u4f46\u65b9\u6cd5\u5b9e\u53c2\u7c7b\u578b\u63a8\u65ad\u548c\u7ea6\u675f\u7c7b\u578b\u63a8\u65ad\u7684\u7ec4\u5408\u662f\u6709\u6548\u7684\u3002\\n\\t\\t  \\n\\t\\t  // The type of V3 will be MySlice.\\n\\t\\t  var V3 = DoubleDefined(MySlice{1})\\n\\t\\t  // \u9996\u5148\u5e94\u7528\u65b9\u6cd5\u5b9e\u53c2\u7c7b\u578b\u63a8\u65ad\uff0c\u53ef\u4ee5\u770b\u51fa\u5b9e\u53c2\u7c7b\u578b\u662fMySlice\\n\\t\\t  // \u65b9\u6cd5\u5b9e\u53c2\u7c7b\u578b\u63a8\u65ad\u5339\u914d\u7c7b\u578b\u53c2\u6570S\u4e3aMySlice.\\n\\t\\t  // \u63a5\u7740\u8fdb\u884c\u7ea6\u675f\u7c7b\u578b\u63a8\u65ad\uff0c\u5df2\u77e5\u4e00\u4e2a\u7c7b\u578b\u5b9e\u53c2S\uff0c\u770b\u51fa\u7c7b\u578b\u5b9e\u53c2S\u662f\u7ed3\u6784\u4f53\u7c7b\u578b\u7ea6\u675f\\n\\t\\t  // \u521b\u5efa\u5df2\u77e5\u7c7b\u578b\u5b9e\u53c2\u6620\u5c04 {S -> MySlice}\\n\\t\\t  // \u7edf\u4e00\u7ea6\u675f\u7c7b\u578b\u96c6\u4e2d\u53ea\u6709\u5355\u4e00\u7c7b\u578b\u7684\u7ed3\u6784\u4f53\u7ea6\u675f\u7684\u6bcf\u4e2a\u7c7b\u578b\u53c2\u6570\u3002\u6b64\u60c5\u51b5\u4e0b\uff0c\u7ed3\u6784\u4f53\u7ea6\u675f\u662f ~[]E\uff0c\u7ed3\u6784\u4f53\u7c7b\u578b\u662f[]E\\n\\t\\t  // \u56e0\u6b64\u5c06S\u7edf\u4e00\u6210[]E\uff0c\u56e0\u4e3a\u5df2\u7ecf\u6709S\u7684\u6620\u5c04\uff0c\u53ef\u4ee5\u5c06[]E\u7edf\u4e00\u6210MySlice\uff0c\u56e0MySlice\u5b9a\u4e49\u662f[]int\uff0c\u6240\u4ee5E\u5c31\u662fint\\n\\t\\t  // \u5f97\u51fa {S -> MySlice, E -> int}\\n\\t\\t  // \u6700\u7ec8\u8c03\u7528DoucleDefined\u7684\u7c7b\u578b\u5b9e\u53c2\u5c31\u662f [MySlice, int]\\n```\\n### \u6307\u9488\u65b9\u6cd5\u793a\u4f8b\\n``` go\\n\\t\\t  // Setter is a type constraint that requires that the type\\n\\t\\t  // implement a Set method that sets the value from a string.\\n\\t\\t  type Setter interface {\\n\\t\\t    Set(string)\\n\\t\\t  }\\n\\t\\t  \\n\\t\\t  // FromStrings takes a slice of strings and returns a slice of T,\\n\\t\\t  // calling the Set method to set each returned value.\\n\\t\\t  //\\n\\t\\t  // Note that because T is only used for a result parameter,\\n\\t\\t  // function argument type inference does not work when calling\\n\\t\\t  // this function.\\n\\t\\t  func FromStrings[T Setter](s []string) []T {\\n\\t\\t    result := make([]T, len(s))\\n\\t\\t    for i, v := range s {\\n\\t\\t      result[i].Set(v)\\n\\t\\t    }\\n\\t\\t    return result\\n\\t\\t  }\\n\\t\\t  \\n\\t\\t  --------------------------------------------------------------------\\n\\t\\t  // Settable is an integer type that can be set from a string.\\n\\t\\t  type Settable int\\n\\t\\t  \\n\\t\\t  // Set sets the value of *p from a string.\\n\\t\\t  func (p *Settable) Set(s string) {\\n\\t\\t    i, _ := strconv.Atoi(s) // real code should not ignore the error\\n\\t\\t    *p = Settable(i)\\n\\t\\t  }\\n\\t\\t  \\n\\t\\t  func F() {\\n\\t\\t    // INVALID not compile\\n\\t\\t    nums := FromStrings[Settable]([]string{\\"1\\", \\"2\\"})\\n\\t\\t    \\n\\t\\t    // INVALID compile but panic at run time, nil error\\n\\t\\t    nums := FromStrings[*Settable]([]string{\\"1\\", \\"2\\"})\\n\\t\\t    // Here we want nums to be []Settable{1, 2}\\n\\t\\t    ....\\n\\t\\t  }\\n\\t\\t  \\n\\t\\t  ------------------------------------------------------------------------\\n\\t\\t  // Setter2 is a type constraint that requires that the type\\n\\t\\t  // implement a Set method that sets the value from a string,\\n\\t\\t  // and also requires that the type be a pointer to its type parameter.\\n\\t\\t  type Setter2[B any] interface {\\n\\t\\t    Set(string)\\n\\t\\t    *B // non-interface type constraint element\\n\\t\\t  }\\n\\t\\t  \\n\\t\\t  // FromStrings2 takes a slice of strings and returns a slice of T,\\n\\t\\t  // calling the Set method to set each returned value.\\n\\t\\t  //\\n\\t\\t  // We use two different type parameters so that we can return\\n\\t\\t  // a slice of type T but call methods on *T aka PT.\\n\\t\\t  // The Setter2 constraint ensures that PT is a pointer to T.\\n\\t\\t  func FromStrings2[T any, PT Setter2[T]](s []string) []T {\\n\\t\\t    result := make([]T, len(s))\\n\\t\\t    for i, v := range s {\\n\\t\\t      // The type of &result[i] is *T which is in the type set\\n\\t\\t      // of Setter2, so we can convert it to PT.\\n\\t\\t      p := PT(&result[i])\\n\\t\\t      // PT has a Set method.\\n\\t\\t      p.Set(v)\\n\\t\\t    }\\n\\t\\t    return result\\n\\t\\t  }\\n\\t\\t  \\n\\t\\t  func F2() {\\n\\t\\t    // FromStrings2 takes two type parameters.\\n\\t\\t    // The second parameter must be a pointer to the first.\\n\\t\\t    // Settable is as above.\\n\\t\\t    nums := FromStrings2[Settable, *Settable]([]string{\\"1\\", \\"2\\"})\\n\\t\\t    // Now nums is []Settable{1, 2}\\n\\t\\t    ....\\n\\t\\t  }\\n\\t\\t  \\n\\t\\t  // \u7ea6\u675f\u7c7b\u578b\u63a8\u65ad\u53ef\u4ee5\u7b80\u5316\u4e0a\u8ff0\u5b9a\u4e49\\n\\t\\t  nums := FromStrings2[Settable]([]string{\\"1\\", \\"2\\"})\\n\\t\\t  // {T -> Settable}\uff0c{T -> Settable, PT -> *T}\uff0c{T -> Settable, PT -> *Settable}\\n```\\n### \u7ea6\u675f\u7c7b\u578b\u63a8\u65ad\u540e\u4ecd\u5e94\u7528\u7ea6\u675f\\n\u5373\u4f7f\u57fa\u4e8e\u7ea6\u675f\u4f7f\u7528\u7ea6\u675f\u7c7b\u578b\u63a8\u65ad\u63a8\u65ad\u7c7b\u578b\u5b9e\u53c2\uff0c\u4e5f\u5fc5\u987b\u5728\u786e\u5b9a\u7c7b\u578b\u5b9e\u53c2\u540e\u68c0\u67e5\u7ea6\u675f\u3002\\n``` go\\n\\t\\t  // Unsettable is a type that does not have a Set method.\\n\\t\\t  type Unsettable int\\n\\t\\t  func F4() {\\n\\t\\t    // This call is INVALID.\\n\\t\\t    nums := FromStrings2[Unsettable]([]string{\\"1\\", \\"2\\"})\\n\\t\\t    ...\\n\\t\\t  }\\n```\\n## \u4f7f\u7528\u5728\u7ea6\u675f\u4e2d\u5f15\u7528\u81ea\u8eab\u7684\u7c7b\u578b\\n``` go\\n\\t  // Index returns the index of e in s, or -1 if not found.\\n\\t  func Index[T Equaler](s []T, e T) int {\\n\\t    for i, v := range s {\\n\\t      if e.Equal(v) {\\n\\t        return i\\n\\t      }\\n\\t    }\\n\\t    return -1\\n\\t  }\\n\\t  \\n\\t  // Index returns the index of e in s, or -1 if not found.\\n\\t  func Index[T interface { Equal(T) bool }](s []T, e T) int {\\n\\t    // same as above\\n\\t  }\\n\\t  \\n\\t  // equalInt is a version of int that implements Equaler.\\n\\t  type equalInt int\\n\\t  \\n\\t  // The Equal method lets equalInt implement the Equaler constraint.\\n\\t  func (a equalInt) Equal(b equalInt) bool { return a == b }\\n\\t  \\n\\t  // indexEqualInts returns the index of e in s, or -1 if not found.\\n\\t  func indexEqualInt(s []equalInt, e equalInt) int {\\n\\t    // The type argument equalInt is shown here for clarity.\\n\\t    // Function argument type inference would permit omitting it.\\n\\t    return Index[equalInt](s, e)\\n\\t  }\\n```\\n## \u7c7b\u578b\u53c2\u6570\u7684\u503c\u672a\u88c5\u7bb1\\n\u5728\u5f53\u524d\u7684Go\u5b9e\u73b0\u4e2d\uff0c\u63a5\u53e3\u503c\u603b\u662f\u5305\u542b\u6307\u9488\u3002\u5c06\u975e\u6307\u9488\u503c\u653e\u5165\u63a5\u53e3\u53d8\u91cf\u4f1a\u5bfc\u81f4\u8be5\u503c\u88ab\u88c5\u7bb1\u3002\u8fd9\u610f\u5473\u7740\u5b9e\u9645\u503c\u5b58\u50a8\u5728\u5806\u6216\u5806\u6808\u4e0a\u7684\u5176\u4ed6\u4f4d\u7f6e\uff0c\u63a5\u53e3\u503c\u4fdd\u5b58\u6307\u5411\u8be5\u4f4d\u7f6e\u7684\u6307\u9488\u3002\\n\u5728\u6b64\u8bbe\u8ba1\u4e0b\uff0c\u6cdb\u578b\u7684\u503c\u662f\u672a\u88c5\u7bb1\u7684\u3002\\n``` go\\n\\t  // Settable is an integer type that can be set from a string.\\n\\t  type Settable int\\n\\t  \\n\\t  // Set sets the value of *p from a string.\\n\\t  func (p *Settable) Set(s string) {\\n\\t    // same as above\\n\\t  }\\n\\t  \\n\\t  func F() {\\n\\t    // The type of nums is []Settable.\\n\\t    nums := FromStrings2[Settable]([]string{\\"1\\", \\"2\\"})\\n\\t    // Settable can be converted directly to int.\\n\\t    // This will set first to 1.\\n\\t    first := int(nums[0])\\n\\t    ...\\n\\t  }\\n```\\n\u5f53\u7528`Settable`\u7c7b\u578b\u8c03\u7528`FromStrings2`\u5b9e\u4f8b\u5316\u65f6\uff0c\u5f97\u5230\u4e00\u4e2a`[]Settable`\u3002\u8be5\u5207\u7247\u7684\u5143\u7d20\u662f`Settable`\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u4eec\u5c06\u662f\u6574\u6570\u3002\u5373\u4f7f\u5b83\u4eec\u662f\u7531\u6cdb\u578b\u51fd\u6570\u521b\u5efa\u548c\u8bbe\u7f6e\u7684\uff0c\u4e5f\u4e0d\u4f1a\u88ab\u88c5\u7bb1\u3002\\n``` go\\n\\t  type Pair[F1, F2 any] struct {\\n\\t    first  F1\\n\\t    second F2\\n\\t  }\\n\\t  \\n\\t  // \u5f53\u4e0a\u8ff0\u7c7b\u578b\u88ab\u521d\u59cb\u5316\uff0c\u5c5e\u6027\u4e0d\u4f1a\u88c5\u7bb1\uff0c\u5c06\u4f1a\u5206\u914d\u5185\u5b58\u3002\\n\\t  // \u7c7b\u578b Pari[int, string] \u5c06\u4f1a\u8f6c\u5316\u4e3a struct { first int; second string}\\n```\\n## \u7c7b\u578b\u96c6\u8be6\u7ec6\u4fe1\u606f\\n### \u7ea6\u675f\u4e2d\u7684\u5143\u7d20\u548c\u65b9\u6cd5\\n``` go\\n\\t\\t  // StringableSignedInteger is a type constraint that matches any\\n\\t\\t  // type that is both 1) defined as a signed integer type;\\n\\t\\t  // 2) has a String method.\\n\\t\\t  type StringableSignedInteger interface {\\n\\t\\t    ~int | ~int8 | ~int16 | ~int32 | ~int64\\n\\t\\t    String() string\\n\\t\\t  }\\n```\\n\u7c7b\u578b\u89c4\u5219\u51b3\u5b9a\u4e86\u8fd9\u610f\u5473\u7740\u4ec0\u4e48\u3002union\u5143\u7d20\u7684\u7c7b\u578b\u96c6\u662f\u6240\u6709\u7c7b\u578b\u7684\u96c6\uff0c\u8fd9\u4e9b\u7c7b\u578b\u7684\u57fa\u7840\u7c7b\u578b\u662f\u9884\u5148\u58f0\u660e\u7684\u6709\u7b26\u53f7\u6574\u6570\u7c7b\u578b\u4e4b\u4e00\u3002`String() string`\u7684\u7c7b\u578b\u96c6\u662f\u5b9a\u4e49\u8be5\u65b9\u6cd5\u7684\u6240\u6709\u7c7b\u578b\u7684\u96c6\u3002`StringableSignedInteger`\u7684\u7c7b\u578b\u96c6\u662f\u8fd9\u4e24\u4e2a\u7c7b\u578b\u96c6\u7684\u4ea4\u96c6\u3002\u7ed3\u679c\u662f\u6240\u6709\u7c7b\u578b\u7684\u96c6\u5408\uff0c\u8fd9\u4e9b\u7c7b\u578b\u7684\u57fa\u7840\u7c7b\u578b\u662f\u9884\u5148\u58f0\u660e\u7684\u6709\u7b26\u53f7\u6574\u6570\u7c7b\u578b\u4e4b\u4e00\uff0c\u5e76\u4e14\u8be5\u7c7b\u578b\u5b9a\u4e49\u4e86\u65b9\u6cd5`String() string`\u3002\u4f7f\u7528\u53c2\u6570\u5316\u7c7b\u578bP\uff08\u4f7f\u7528`StringableSignedInteger`\u4f5c\u4e3a\u7ea6\u675f\uff09\u7684\u65b9\u6cd5\u53ef\u4ee5\u5bf9\u7c7b\u578b`P`\u7684\u503c\u4f7f\u7528\u4efb\u4f55\u6574\u6570\u7c7b\u578b\uff08+\u3001*\u7b49\uff09\u5141\u8bb8\u7684\u64cd\u4f5c\u3002\u5b83\u8fd8\u53ef\u4ee5\u5bf9\u7c7b\u578b`P`\u7684\u503c\u8c03\u7528`String`\u65b9\u6cd5\u4ee5\u83b7\u53d6\u5b57\u7b26\u4e32\u3002\\n\u503c\u5f97\u6ce8\u610f\u7684\u662f`~``\u5728\u8fd9\u91cc\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\u3002`StringableSignedIntegrater`\u7ea6\u675f\u4f7f\u7528`~int`\uff0c\u800c\u4e0d\u662f`int`\u3002\u7c7b\u578b`int`\u672c\u8eab\u4e0d\u5141\u8bb8\u4f5c\u4e3a\u7c7b\u578b\u53c2\u6570\uff0c\u56e0\u4e3a`int`\u6ca1\u6709\u5b57\u7b26\u4e32\u65b9\u6cd5\u3002\\n### \u7ea6\u675f\u4e2d\u7684\u590d\u5408\u7c7b\u578b\\n\u7ea6\u675f\u5143\u7d20\u53ef\u4ee5\u662f\u7c7b\u578b\u6587\u5b57\\n``` go\\n\\t\\t  type byteseq interface {string | []byte}\\n```\\n\u901a\u5e38\u7684\u89c4\u5219\u9002\u7528\uff1a\u6b64\u7ea6\u675f\u7684\u7c7b\u578b\u53c2\u6570\u53ef\u4ee5\u662f`string`\u6216`[]byte`\uff1b\u5177\u6709\u6b64\u7ea6\u675f\u7684\u6cdb\u578b\u51fd\u6570\u53ef\u4ee5\u4f7f\u7528`string`\u6216`[]byte`\u5141\u8bb8\u7684\u4efb\u4f55\u64cd\u4f5c\u3002\\n`byteseq`\u7ea6\u675f\u5141\u8bb8\u7f16\u5199\u9002\u7528\u4e8e`string`\u6216`[]byte`\u7684\u6cdb\u578b\u51fd\u6570\u3002\\n\u5bf9\u4e8e\u590d\u5408\u7c7b\u578b\uff08\u5b57\u7b26\u4e32\u3001\u6307\u9488\u3001\u6570\u7ec4\u3001\u5207\u7247\u3001\u7ed3\u6784\u4f53\u3001\u65b9\u6cd5\u3001\u6620\u5c04\u3001\u901a\u9053\uff09\uff0c\u65bd\u52a0\u4e86\u989d\u5916\u7684\u9650\u5236\uff1a\u53ea\u6709\u5f53\u64cd\u4f5c\u7b26\u63a5\u53d7\u76f8\u540c\u7684\u8f93\u5165\u7c7b\u578b\u5e76\u4e3a\u7c7b\u578b\u96c6\u4e2d\u7684\u6240\u6709\u7c7b\u578b\u751f\u6210\u76f8\u540c\u7684\u7ed3\u679c\u7c7b\u578b\u65f6\uff0c\u624d\u53ef\u4ee5\u4f7f\u7528\u64cd\u4f5c\u3002\\n\u8981\u660e\u786e\u7684\u662f\uff0c\u6709\u4e2a\u4f8b\u5916\uff1a\u4ec5\u5f53\u590d\u5408\u7c7b\u578b\u51fa\u73b0\u5728\u7c7b\u578b\u96c6\u4e2d\u65f6\uff0c\u624d\u65bd\u52a0\u9650\u5236\u3002\u5f53\u590d\u5408\u7c7b\u578b\u662f\u4ece\u7c7b\u578b\u96c6\u4e4b\u5916\u7684\u7c7b\u578b\u53c2\u6570\u5f62\u6210\u65f6\uff0c\u5b83\u4e0d\u9002\u7528\uff0c\u4f8b\u5982\u5728`var v[] T`\u4e2d\uff0c\u5bf9\u4e8e\u67d0\u4e9b\u7c7b\u578b\u53c2\u6570`T`\u3002\\n``` go\\n\\t\\t  // structField is a type constraint whose type set consists of some\\n\\t\\t  // struct types that all have a field named x.\\n\\t\\t  type structField interface {\\n\\t\\t    struct { a int; x int } |\\n\\t\\t    struct { b int; x float64 } |\\n\\t\\t    struct { c int; x uint64 }\\n\\t\\t  }\\n\\t\\t  \\n\\t\\t  // This function is INVALID.\\n\\t\\t  func IncrementX[T structField](p *T) {\\n\\t\\t    v := p.x // INVALID: type of p.x is not the same for all types in set\\n\\t\\t    v++\\n\\t\\t    p.x = v\\n\\t\\t  }\\n\\t\\t  \\n\\t\\t  // sliceOrMap is a type constraint for a slice or a map.\\n\\t\\t  type sliceOrMap interface {\\n\\t\\t    []int | map[int]int\\n\\t\\t  }\\n\\t\\t  \\n\\t\\t  // Entry returns the i\'th entry in a slice or the value of a map\\n\\t\\t  // at key i. This is valid as the result of the operator is always int.\\n\\t\\t  func Entry[T sliceOrMap](c T, i int) int {\\n\\t\\t    // This is either a slice index operation or a map key lookup.\\n\\t\\t    // Either way, the index and result types are type int.\\n\\t\\t    return c[i]\\n\\t\\t  }\\n\\t\\t  \\n\\t\\t  // sliceOrFloatMap is a type constraint for a slice or a map.\\n\\t\\t  type sliceOrFloatMap interface {\\n\\t\\t    []int | map[float64]int\\n\\t\\t  }\\n\\t\\t  \\n\\t\\t  // This function is INVALID.\\n\\t\\t  // In this example the input type of the index operation is either\\n\\t\\t  // int (for a slice) or float64 (for a map), so the operation is\\n\\t\\t  // not permitted.\\n\\t\\t  func FloatEntry[T sliceOrFloatMap](c T) int {\\n\\t\\t    return c[1.0] // INVALID: input type is either int or float64.\\n\\t\\t  }\\n```\\n### \u7c7b\u578b\u96c6\u4e2d\u7684\u7c7b\u578b\u53c2\u6570\\n\u7ea6\u675f\u5143\u7d20\u4e2d\u7684\u7c7b\u578b\u6587\u5b57\u53ef\u4ee5\u5f15\u7528\u7ea6\u675f\u7684\u7c7b\u578b\u53c2\u6570\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u6cdb\u578b\u65b9\u6cd5`Map`\u91c7\u7528\u4e24\u4e2a\u7c7b\u578b\u53c2\u6570\u3002\u7b2c\u4e00\u4e2a\u7c7b\u578b\u53c2\u6570\u9700\u8981\u6709\u4e00\u4e2a\u4f5c\u4e3a\u7b2c\u4e8c\u4e2a\u7c7b\u578b\u53c2\u6570\u5207\u7247\u7684\u5e95\u5c42\u7c7b\u578b\u3002\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e0a\u6ca1\u6709\u7ea6\u675f\u3002\\n``` go\\n\\t\\t  // SliceConstraint is a type constraint that matches a slice of\\n\\t\\t  // the type parameter.\\n\\t\\t  type SliceConstraint[T any] interface {\\n\\t\\t    ~[]T\\n\\t\\t  }\\n\\t\\t  \\n\\t\\t  // Map takes a slice of some element type and a transformation function,\\n\\t\\t  // and returns a slice of the function applied to each element.\\n\\t\\t  // Map returns a slice that is the same type as its slice argument,\\n\\t\\t  // even if that is a defined type.\\n\\t\\t  func Map[S SliceConstraint[E], E any](s S, f func(E) E) S {\\n\\t\\t    r := make(S, len(s))\\n\\t\\t    for i, v := range s {\\n\\t\\t      r[i] = f(v)\\n\\t\\t    }\\n\\t\\t    return r\\n\\t\\t  }\\n\\t\\t  \\n\\t\\t  // MySlice is a simple defined type.\\n\\t\\t  type MySlice []int\\n\\t\\t  \\n\\t\\t  // DoubleMySlice takes a value of type MySlice and returns a new\\n\\t\\t  // MySlice value with each element doubled in value.\\n\\t\\t  func DoubleMySlice(s MySlice) MySlice {\\n\\t\\t    // The type arguments listed explicitly here could be inferred.\\n\\t\\t    v := Map[MySlice, int](s, func(e int) int { return 2 * e })\\n\\t\\t    // Here v has type MySlice, not type []int.\\n\\t\\t    return v\\n\\t\\t  }\\n```\\n### \u7c7b\u578b\u8f6c\u6362\\n\u5728\u5177\u6709\u4e24\u4e2a\u7c7b\u578b\u53c2\u6570From\u548cTo\u7684\u51fd\u6570\u4e2d\uff0c\u5982\u679cFrom\u7ea6\u675f\u7c7b\u578b\u96c6\u4e2d\u7684\u6240\u6709\u7c7b\u578b\u90fd\u53ef\u4ee5\u8f6c\u6362\u4e3aTo\u7ea6\u675f\u7c7b\u578b\u96c6\u4e2d\u7684\u6240\u6709\u7c7b\u578b\uff0c\u5219From\u7c7b\u578b\u7684\u503c\u53ef\u4ee5\u8f6c\u6362\u4e3aTo\u7c7b\u578b\u7684\u503c\u3002\u8fd9\u662f\u4e00\u822c\u89c4\u5219\u7684\u7ed3\u679c\uff0c\u5373\u6cdb\u578b\u51fd\u6570\u53ef\u4ee5\u4f7f\u7528\u7c7b\u578b\u96c6\u4e2d\u5217\u51fa\u7684\u6240\u6709\u7c7b\u578b\u90fd\u5141\u8bb8\u7684\u4efb\u4f55\u64cd\u4f5c\u3002\\n``` go\\n\\t\\t  type integer interface {\\n\\t\\t    ~int | ~int8 | ~int16 | ~int32 | ~int64 |\\n\\t\\t    ~uint | ~uint8 | ~uint16 | ~uint32 | ~uint64 | ~uintptr\\n\\t\\t  }\\n\\t\\t  \\n\\t\\t  func Convert[To, From integer](from From) To {\\n\\t\\t    to := To(from)\\n\\t\\t    if From(to) != from {\\n\\t\\t      panic(\\"conversion out of range\\")\\n\\t\\t    }\\n\\t\\t    return to\\n\\t\\t  }\\n```\\n### \u975e\u7c7b\u578b\u5316\u5e38\u91cf\\n\u67d0\u4e9b\u65b9\u6cd5\u4f7f\u7528\u975e\u7c7b\u578b\u5316\u5e38\u91cf\u3002\u5982\u679c\u7c7b\u578b\u53c2\u6570\u7ea6\u675f\u7684\u7c7b\u578b\u96c6\u4e2d\u7684\u6bcf\u79cd\u7c7b\u578b\u90fd\u5141\u8bb8\u4f7f\u7528\u975e\u7c7b\u578b\u5e38\u91cf\uff0c\u5219\u5141\u8bb8\u4f7f\u7528typeparameter\u7684\u503c\u3002\u4e0e\u7c7b\u578b\u8f6c\u6362\u4e00\u6837\uff0c\u8fd9\u662f\u4e00\u822c\u89c4\u5219\u7684\u7ed3\u679c\uff0c\u5373\u6cdb\u578b\u51fd\u6570\u53ef\u4ee5\u4f7f\u7528\u7c7b\u578b\u96c6\u4e2d\u6240\u6709\u7c7b\u578b\u90fd\u5141\u8bb8\u7684\u4efb\u4f55\u64cd\u4f5c\u3002\\n``` go\\n\\t\\t  type integer interface {\\n\\t\\t    ~int | ~int8 | ~int16 | ~int32 | ~int64 |\\n\\t\\t    ~uint | ~uint8 | ~uint16 | ~uint32 | ~uint64 | ~uintptr\\n\\t\\t  }\\n\\t\\t  \\n\\t\\t  func Add10[T integer](s []T) {\\n\\t\\t    for i, v := range s {\\n\\t\\t      s[i] = v + 10 // OK: 10 can convert to any integer type\\n\\t\\t    }\\n\\t\\t  }\\n\\t\\t  \\n\\t\\t  // This function is INVALID.\\n\\t\\t  func Add1024[T integer](s []T) {\\n\\t\\t    for i, v := range s {\\n\\t\\t      s[i] = v + 1024 // INVALID: 1024 not permitted by int8/uint8\\n\\t\\t    }\\n\\t\\t  }\\n```\\n### \u5d4c\u5165\u7ea6\u675f\u7684\u7c7b\u578b\u96c6\\n\u5f53\u4e00\u4e2a\u7ea6\u675f\u5d4c\u5165\u53e6\u4e00\u4e2a\u7ea6\u675f\u65f6\uff0c\u5916\u90e8\u7ea6\u675f\u7684\u7c7b\u578b\u96c6\u662f\u6240\u6709\u76f8\u5173\u7c7b\u578b\u96c6\u7684\u4ea4\u70b9\u3002\u5982\u679c\u6709\u591a\u4e2a\u5d4c\u5165\u7c7b\u578b\uff0c\u5219\u4ea4\u96c6\u5c06\u4fdd\u7559\u4efb\u4f55\u7c7b\u578b\u53c2\u6570\u5fc5\u987b\u6ee1\u8db3\u6240\u6709\u7ea6\u675f\u5143\u7d20\u8981\u6c42\u7684\u5c5e\u6027\u3002\\n``` go\\n\\t\\t  // Addable is types that support the + operator.\\n\\t\\t  type Addable interface {\\n\\t\\t    ~int | ~int8 | ~int16 | ~int32 | ~int64 |\\n\\t\\t    ~uint | ~uint8 | ~uint16 | ~uint32 | ~uint64 | ~uintptr |\\n\\t\\t    ~float32 | ~float64 | ~complex64 | ~complex128 |~string\\n\\t\\t  }\\n\\t\\t  \\n\\t\\t  // Byteseq is a byte sequence: either string or []byte.\\n\\t\\t  type Byteseq interface {\\n\\t\\t    ~string | ~[]byte\\n\\t\\t  }\\n\\t\\t  \\n\\t\\t  // AddableByteseq is a byte sequence that supports +.\\n\\t\\t  // This is every type that is both Addable and Byteseq.\\n\\t\\t  // In other words, just the type set ~string.\\n\\t\\t  type AddableByteseq interface {\\n\\t\\t    Addable\\n\\t\\t    Byteseq\\n\\t\\t  }\\n```\\n### \u8054\u5408\u5143\u7d20\u4e2d\u7684\u63a5\u53e3\u7c7b\u578b\\n\u8054\u5408\u5143\u7d20\u7684\u7c7b\u578b\u96c6\u662funion\u4e2d\u6240\u6709\u7c7b\u578b\u7684\u7c7b\u578b\u96c6\u7684\u5e76\u96c6\u3002\u5bf9\u4e8e\u5927\u591a\u6570\u7c7b\u578b`T`\uff0c`T`\u7684\u7c7b\u578b\u96c6\u5c31\u662f`T`\u672c\u8eab\u3002\u4f46\u662f\uff0c\u5bf9\u4e8e\u63a5\u53e3\u7c7b\u578b\uff08\u548c\u8fd1\u4f3c\u5143\u7d20\uff09\uff0c\u60c5\u51b5\u5e76\u975e\u5982\u6b64\u3002\u5982\u524d\u6240\u8ff0\uff0c\u4e0d\u5d4c\u5165\u975e\u63a5\u53e3\u5143\u7d20\u7684\u63a5\u53e3\u7c7b\u578b\u7684\u7c7b\u578b\u96c6\u662f\u58f0\u660e\u63a5\u53e3\u7684\u6240\u6709\u65b9\u6cd5\u7684\u6240\u6709\u7c7b\u578b\u7684\u96c6\u5408\uff0c\u5305\u62ec\u63a5\u53e3\u7c7b\u578b\u672c\u8eab\u3002\u4f7f\u7528union\u5143\u7d20\u4e2d\u7684\u6b64\u7c7b\u63a5\u53e3\u7c7b\u578b\u5c06\u5411union\u6dfb\u52a0\u8be5\u7c7b\u578b\u96c6\u3002\\n### \u7a7a\u7c7b\u578b\u96c6\\n\u53ef\u4ee5\u4f7f\u7528\u7a7a\u7c7b\u578b\u96c6\u7f16\u5199\u7ea6\u675f\u3002\u6ca1\u6709\u4efb\u4f55\u7c7b\u578b\u53c2\u6570\u53ef\u4ee5\u6ee1\u8db3\u6b64\u7c7b\u7ea6\u675f\uff0c\u56e0\u6b64\u4efb\u4f55\u5c1d\u8bd5\u5b9e\u4f8b\u5316\u4f7f\u7528\u7a7a\u7c7b\u578b\u96c6\u7684\u7ea6\u675f\u7684\u51fd\u6570\u90fd\u5c06\u5931\u8d25\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u7f16\u8bd1\u5668\u4e0d\u53ef\u80fd\u68c0\u6d4b\u5230\u6240\u6709\u6b64\u7c7b\u60c5\u51b5\u3002\u5bf9\u4e8e\u80fd\u591f\u68c0\u6d4b\u5230\u7684\u60c5\u51b5\uff0cvet\u5de5\u5177\u53ef\u80fd\u5e94\u8be5\u7ed9\u51fa\u4e00\u4e2a\u9519\u8bef\u3002\\n### \u7c7b\u578b\u96c6\u7684\u4e00\u822c\u8bf4\u660e\\n\u5728\u7ea6\u675f\u4e2d\u663e\u5f0f\u5217\u51fa\u7c7b\u578b\u4f3c\u4e4e\u6709\u4e9b\u5c34\u5c2c\uff0c\u4f46\u8c03\u7528\u4fa7\u9700\u8981\u5f88\u6e05\u695a\u77e5\u9053\u5141\u8bb8\u54ea\u4e9b\u7c7b\u578b\u5b9e\u53c2\uff0c\u4ee5\u53ca\u6cdb\u578b\u65b9\u6cd5\u5141\u8bb8\u54ea\u4e9b\u64cd\u4f5c\u3002\\n\u5982\u679c\u8bed\u8a00\u540e\u6765\u66f4\u6539\u4e3a\u652f\u6301\u64cd\u4f5c\u7b26\u65b9\u6cd5\uff08\u76ee\u524d\u6ca1\u6709\u6b64\u7c7b\u8ba1\u5212\uff09\uff0c\u90a3\u4e48\u7ea6\u675f\u5c06\u50cf\u5904\u7406\u4efb\u4f55\u5176\u4ed6\u7c7b\u578b\u7684\u65b9\u6cd5\u4e00\u6837\u5904\u7406\u5b83\u4eec\u3002\\n\u9884\u58f0\u660e\u7c7b\u578b\u7684\u6570\u91cf\u603b\u662f\u6709\u9650\u7684\uff0c\u8fd9\u4e9b\u7c7b\u578b\u652f\u6301\u7684\u64cd\u4f5c\u7b26\u7684\u6570\u91cf\u4e5f\u6709\u9650\u3002\u672a\u6765\u7684\u8bed\u8a00\u53d8\u5316\u4e0d\u4f1a\u4ece\u6839\u672c\u4e0a\u6539\u53d8\u8fd9\u4e9b\u4e8b\u5b9e\uff0c\u56e0\u6b64\u8fd9\u79cd\u65b9\u6cd5\u5c06\u7ee7\u7eed\u6709\u7528\u3002\u8fd9\u79cd\u65b9\u6cd5\u4e0d\u4f1a\u8bd5\u56fe\u5904\u7406\u6240\u6709\u53ef\u80fd\u7684\u64cd\u4f5c\u3002\u6211\u4eec\u7684\u671f\u671b\u662f\uff0c\u901a\u5e38\u5728\u6cdb\u578b\u65b9\u6cd5\u548c\u7c7b\u578b\u58f0\u660e\u4e2d\u4f7f\u7528\u590d\u5408\u7c7b\u578b\u6765\u5904\u7406\u590d\u5408\u7c7b\u578b\uff0c\u800c\u4e0d\u662f\u5c06\u590d\u5408\u7c7b\u578b\u653e\u5165\u7c7b\u578b\u96c6\u4e2d\u3002\\n## \u53cd\u5c04\\n\u4e0d\u6253\u7b97\u4ee5\u4efb\u4f55\u65b9\u5f0f\u66f4\u6539reflect\u8f6f\u4ef6\u5305\u3002\u5f53\u4e00\u4e2a\u7c7b\u578b\u6216\u65b9\u6cd5\u88ab\u5b9e\u4f8b\u5316\u65f6\uff0c\u6240\u6709\u7c7b\u578b\u53c2\u6570\u90fd\u5c06\u6210\u4e3a\u666e\u901a\u7684\u975e\u6cdb\u578b\u7c7b\u578b\u3002\u5b9e\u4f8b\u5316\u7c7b\u578bString\u65b9\u6cd5\u7684`reflect.Type`\u503c\u5c06\u8fd4\u56de\u540d\u79f0\uff0c\u5e76\u5728\u65b9\u62ec\u53f7\u4e2d\u5305\u542b\u7c7b\u578b\u5b9e\u53c2\u3002\u4f8b\u5982\uff0c`List[int]`\u3002\\n\u975e\u6cdb\u578b\u4ee3\u7801\u5728\u6ca1\u6709\u5b9e\u4f8b\u5316\u7684\u60c5\u51b5\u4e0b\u4e0d\u53ef\u80fd\u5f15\u7528\u6cdb\u578b\u4ee3\u7801\uff0c\u56e0\u6b64\u5bf9\u4e8e\u672a\u5b9e\u4f8b\u5316\u7684\u6cdb\u578b\u7c7b\u578b\u6216\u65b9\u6cd5\uff0c\u6ca1\u6709\u4efb\u4f55\u64cd\u4f5c\u4fe1\u606f\u3002\\n## \u603b\u7ed3\\n\u8981\u70b9\uff1a\\n- \u51fd\u6570\u548c\u7c7b\u578b\u53ef\u4ee5\u6709\u7c7b\u578b\u53c2\u6570\uff0c\u7c7b\u578b\u53c2\u6570\u4f7f\u7528\u7ea6\u675f\uff0c\u800c\u7ea6\u675f\u53c8\u662f\u63a5\u53e3\u7c7b\u578b\\n- \u7ea6\u675f\u63cf\u8ff0\u7c7b\u578b\u53c2\u6570\u6240\u9700\u7684\u65b9\u6cd5\u548c\u5141\u8bb8\u7684\u7c7b\u578b\\n- \u7ea6\u675f\u63cf\u8ff0\u7c7b\u578b\u53c2\u6570\u5141\u8bb8\u7684\u65b9\u6cd5\u548c\u64cd\u4f5c\\n- \u5728\u4f7f\u7528\u7c7b\u578b\u53c2\u6570\u8c03\u7528\u51fd\u6570\u65f6\uff0c\u7c7b\u578b\u63a8\u65ad\u901a\u5e38\u5141\u8bb8\u7701\u7565\u7c7b\u578b\u53c2\u6570\u3002"},{"id":"/\u73a9\u8f6cJava\u7ebf\u7a0b\u53ca\u7ebf\u7a0b\u6c60","metadata":{"permalink":"/blog/tech/\u73a9\u8f6cJava\u7ebf\u7a0b\u53ca\u7ebf\u7a0b\u6c60","source":"@site/tech/\u73a9\u8f6cJava\u7ebf\u7a0b\u53ca\u7ebf\u7a0b\u6c60.md","title":"\u73a9\u8f6c Java \u7ebf\u7a0b\u53ca\u7ebf\u7a0b\u6c60","description":"\u7ebf\u7a0b\u662f\u64cd\u4f5c\u7cfb\u7edf\u80fd\u591f\u8fdb\u884c\u8fd0\u7b97\u8c03\u5ea6\u7684\u6700\u5c0f\u5355\u4f4d\u3002\u5b83\u88ab\u5305\u542b\u5728\u8fdb\u7a0b\u4e4b\u4e2d\uff0c\u662f\u8fdb\u7a0b\u4e2d\u7684\u5b9e\u9645\u8fd0\u4f5c\u5355\u4f4d\u3002","date":"2020-07-19T08:28:11.000Z","formattedDate":"2020\u5e747\u670819\u65e5","tags":[{"label":"java","permalink":"/blog/tech/tags/java"},{"label":"\u7ebf\u7a0b\u6c60","permalink":"/blog/tech/tags/\u7ebf\u7a0b\u6c60"}],"readingTime":15.805,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["java","\u7ebf\u7a0b\u6c60"]},"prevItem":{"title":"Golang \u6cdb\u578b","permalink":"/blog/tech/Golang\u6cdb\u578b"},"nextItem":{"title":"JVM \u5fc5\u4f1a\u7684\u77e5\u8bc6","permalink":"/blog/tech/JVM\u5fc5\u4f1a\u7684\u77e5\u8bc6"}},"content":"\u7ebf\u7a0b\u662f\u64cd\u4f5c\u7cfb\u7edf\u80fd\u591f\u8fdb\u884c\u8fd0\u7b97\u8c03\u5ea6\u7684\u6700\u5c0f\u5355\u4f4d\u3002\u5b83\u88ab\u5305\u542b\u5728\u8fdb\u7a0b\u4e4b\u4e2d\uff0c\u662f\u8fdb\u7a0b\u4e2d\u7684\u5b9e\u9645\u8fd0\u4f5c\u5355\u4f4d\u3002\\n\\nJava \u4e2d\u7ebf\u7a0b\u53ef\u5206\u4e3a 2 \u79cd\uff1a\\n\\n- \u5b88\u62a4\u7ebf\u7a0b\\n\\n  \u4f8b\u5982\uff1a GC \u7ebf\u7a0b\\n\\n- \u7528\u6237\u7ebf\u7a0b\\n\\n  \u5e94\u7528\u7a0b\u5e8f\u91cc\u81ea\u5b9a\u4e49\u7684\uff08\u5f53\u7136\u4e5f\u53ef\u5728\u5e94\u7528\u7a0b\u5e8f\u4e2d\u521b\u5efa\u5b88\u62a4\u7ebf\u7a0b\uff0c\u53ea\u9700`setDaemon(true)`\uff09\\n\\n**\u4e8c\u8005\u6700\u5927\u7684\u533a\u522b\uff1a\u5b88\u62a4\u7ebf\u7a0b\u5728\u4e3b\u7ebf\u7a0b\u6267\u884c\u5b8c\u540e\uff0c\u4f1a\u76f4\u63a5\u9000\u51fa\uff0c\u800c\u7528\u6237\u7ebf\u7a0b\u5728\u4e3b\u7ebf\u7a0b\u6267\u884c\u5b8c\u540e\uff0c\u4ecd\u5728\u8fd0\u884c\u3002**\\n\\n## \u7ebf\u7a0b\u7684\u521b\u5efa\\n\\nJava \u63d0\u4f9b\u4e86\u591a\u79cd\u521b\u5efa\u65b9\u5f0f\uff0c\u53ef\u80fd\u6700\u4e3a\u719f\u6089\u7684\u662f \u5b9e\u73b0`Runnable`\u548c\u7ee7\u627f`Thread`\uff0c\u5176\u5b9e\u9664\u4e86\u8fd9 2 \u79cd\u8fd8\u662f\u6709\u5176\u4ed6\u7684\u5f62\u5f0f\u3002\\n\\n### \u5b9e\u73b0`Runnable`\\n\\n\u53ef\u4ee5\u907f\u514d\u591a\u7ee7\u627f\u95ee\u9898\u3002\\n\\n```java\\npublic class Thread1 implements Runnable {\\n    @Override\\n    public void run() {\\n        System.out.println(\\"Hello, I\'m a thread!\\");\\n    }\\n\\n    public static void main(String[] args) {\\n        Thread t = new Thread(new Thread1(), \\"thread-1\\");\\n        t.start();\\n    }\\n}\\n```\\n\\n### \u7ee7\u627f`Thread`\\n\\n```java\\npublic class Thread2 extends Thread {\\n    @Override\\n    public void run() {\\n        System.out.println(\\"Hello, I\'m a thread!\\");\\n    }\\n\\n    public static void main(String[] args) {\\n        Thread t = new Thread2();\\n        t.start();\\n    }\\n}\\n```\\n\\n### \u533f\u540d\u5185\u90e8\u7c7b\\n\\n\u4f7f\u7528\u573a\u666f\uff1a\u4e00\u6b21\u6027\u8c03\u7528\\n\\n```java\\npublic class Thread3 {\\n    public static void main(String[] args) {\\n        new Thread() {\\n            public void run() {\\n                System.out.println(\\"Hello, I\'m thread1!\\");\\n            }\\n        }.start();\\n\\n        new Thread(new Runnable() {\\n            public void run() {\\n                System.out.println(\\"Hello, I\'m thread2!\\");\\n            }\\n        }).start();\\n    }\\n}\\n```\\n\\n### \u5b9e\u73b0`Callable`\\n\\n\u53ef\u4ee5\u5e26\u8fd4\u56de\u503c\uff0c\u5e76\u4e14\u53ef\u4ee5\u6392\u9664\u5f02\u5e38\u3002\u8fd0\u884c Callable \u4efb\u52a1\u53ef\u62ff\u5230\u4e00\u4e2a Future \u5bf9\u8c61\u3002\u6240\u4ee5\u4e00\u822c\u914d\u5408`Future`\u548c`FutureTask`\u4f7f\u7528\u3002\\n\\n\u4f7f\u7528\u573a\u666f\uff1a\u9700\u8981\u83b7\u53d6\u7ebf\u7a0b\u8fd4\u56de\u503c\\n\\n#### `Future`\u65b9\u5f0f\\n\\n```java\\npublic class Thread5 implements Callable<String> {\\n    @Override\\n    public String call() throws Exception {\\n        System.out.println(\\"In\\");\\n        Thread.sleep(1000);\\n        System.out.println(\\"Out\\");\\n        return \\"I implements Callable \\";\\n    }\\n\\n    public static void main(String[] args) throws Exception {\\n        ExecutorService service = Executors.newSingleThreadExecutor();\\n        Thread5 t = new Thread5();\\n        Future<String> future = service.submit(t);\\n        service.shutdown();\\n        System.out.println(future.get());\\n        System.out.println(System.currentTimeMillis());\\n    }\\n}\\n```\\n\\n#### `FutureTask`\u65b9\u5f0f\\n\\n```java\\npublic class Thread5 implements Callable<String> {\\n    @Override\\n    public String call() throws Exception {\\n        System.out.println(\\"In\\");\\n        Thread.sleep(1000);\\n        System.out.println(\\"Out\\");\\n        return \\"I implements Callable \\";\\n    }\\n\\n    public static void main(String[] args) throws Exception {\\n        Thread5 t2 = new Thread5();\\n        FutureTask<String> task = new FutureTask<>(t2);\\n        Thread thread = new Thread(task);\\n        thread.start();\\n        System.out.println(System.currentTimeMillis());\\n        System.out.println(task.get());\\n        System.out.println(System.currentTimeMillis());\\n\\n        ExecutorService service2 = Executors.newSingleThreadExecutor();\\n        FutureTask<String> task2 = new FutureTask<>(t2);\\n        service.shutdown();\\n        System.out.println(System.currentTimeMillis());\\n        System.out.println(task2.get());\\n        System.out.println(System.currentTimeMillis());\\n    }\\n}\\n```\\n\\n> `Future`\u548c `FutureTask`\u4e5f\u53ef\u4ee5\u7528\u6765\u6267\u884c`Runnable`\u63a5\u53e3\u7684\u5b9e\u73b0\u7c7b\uff0c\u800c\u4e14\u901a\u8fc7\u8fd9 2 \u79cd\u65b9\u5f0f\u53ef\u4ee5\u83b7\u53d6\u7ebf\u7a0b\u7684\u72b6\u6001\uff0c\u5e76\u53ef\u4ee5\u53d6\u6d88\u7ebf\u7a0b\u6267\u884c\u3002\\n\\n### Lambda\\n\\nJDK8 \u4e4b\u540e\u53ef\u4ee5\u76f4\u63a5\u7528 Lambda \u8868\u8fbe\u5f0f\u6765\u521b\u5efa\u3002\\n\\n\u4f7f\u7528\u573a\u666f\uff1a\u4e00\u6b21\u6027\u8c03\u7528\u7684\u5730\u65b9\\n\\n```java\\npublic class Thread4 {\\n    public static void main(String[] args) throws ExecutionException, InterruptedException {\\n        new Thread(() -> System.out.println(\\"Hello, I\'m a thread!\\")).start();\\n\\n        ExecutorService service = Executors.newSingleThreadExecutor();\\n        Future<String> future = service.submit(() -> \\"Hello, I\'m a thread!\\");\\n        service.shutdown();\\n        System.out.println(future.get());\\n    }\\n}\\n```\\n\\n### \u7ebf\u7a0b\u6c60\u65b9\u5f0f\\n\\n```java\\npublic class Thread6 implements Runnable {\\n    @Override\\n    public void run() {\\n        System.out.println(\\"Hello, I\'m a thread!\\");\\n    }\\n\\n    public static void main(String[] args) {\\n        ExecutorService service = Executors.newSingleThreadExecutor();\\n        service.execute(new Thread6());\\n        service.shutdown();\\n    }\\n}\\n\\n```\\n\\n\u4f7f\u7528\u573a\u666f\uff1a\u6b63\u5f0f\u5e94\u7528\u4e2d\\n\\n## \u7ebf\u7a0b\u6c60\\n\\n\u7ebf\u7a0b\u7684\u521b\u5efa\u548c\u9500\u6bc1\u4f1a\u6d88\u8017\u7cfb\u7edf\u8d44\u6e90\uff0c\u800c\u4e14\u5982\u679c\u521b\u5efa\u5927\u91cf\u7684\u7ebf\u7a0b\uff0c\u4f1a\u5bfc\u81f4\u5185\u5b58\u8d44\u6e90\u88ab\u5360\u7528\uff0c\u62d6\u57ae\u6574\u4e2a\u7cfb\u7edf\uff0c\u6240\u4ee5\u9700\u8981\u7528\u7ebf\u7a0b\u6c60\u6765\u7ba1\u7406\u7ebf\u7a0b\u3002\\n\\n\u53ef\u8fbe\u5230\u4ee5\u4e0b\u6548\u679c\uff1a\\n\\n- \u51cf\u5c11\u8d44\u6e90\u5f00\u9500\\n- \u63d0\u4f9b\u54cd\u5e94\u901f\u5ea6\\n- \u53ef\u7ba1\u7406\u6027\\n\\n### \u4efb\u52a1\u961f\u5217\\n\\n\u7ebf\u7a0b\u6c60\u4e2d\u90fd\u91c7\u7528\u4efb\u52a1\u961f\u5217\u5b58\u653e\u9700\u8981\u6267\u884c\u7684\u7ebf\u7a0b\uff0c\u6765\u770b\u4e0b\u6709\u54ea\u4e9b\u4efb\u52a1\u961f\u5217\u3002\\n\\n#### ArrayBlockingQueue\\n\\n\u7528\u6570\u7ec4\u5b9e\u73b0\u7684\u6709\u754c\u963b\u585e\u961f\u5217\uff0cFIFO\\n\\n#### LinkedBlockingQueue\\n\\n\u57fa\u4e8e\u94fe\u8868\u7ed3\u6784\u7684\u963b\u585e\u961f\u5217\uff0cFIFO\\n\\n\u5bb9\u91cf\u53ef\u4ee5\u9009\u62e9\u8fdb\u884c\u8bbe\u7f6e\uff0c\u4e0d\u8bbe\u7f6e\u7684\u8bdd\uff0c\u5c06\u662f\u4e00\u4e2a\u65e0\u8fb9\u754c\u7684\u963b\u585e\u961f\u5217\uff0c\u6700\u5927\u957f\u5ea6\u4e3a`Integer.MAX_VALUE`\\n\\n\u541e\u5410\u91cf\u901a\u5e38\u8981\u9ad8\u4e8e`ArrayBlockingQuene`\\n\\n#### DelayQueue\\n\\n\u4efb\u52a1\u5b9a\u65f6\u5468\u671f\u7684\u5ef6\u8fdf\u6267\u884c\u7684\u961f\u5217\u3002\\n\\n\u6839\u636e\u6307\u5b9a\u7684\u6267\u884c\u65f6\u95f4\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u5426\u5219\u6839\u636e\u63d2\u5165\u5230\u961f\u5217\u7684\u5148\u540e\u6392\u5e8f\u3002\\n\\n#### PriorityBlockingQueue\\n\\n\u5177\u6709\u4f18\u5148\u7ea7\u7684\u65e0\u754c\u963b\u585e\u961f\u5217\\n\\n#### SynchronousQueue\\n\\n\u4e0d\u5b58\u50a8\u5143\u7d20\u7684\u963b\u585e\u961f\u5217\uff0c\u6bcf\u4e2a\u63d2\u5165\u64cd\u4f5c\u5fc5\u987b\u7b49\u5230\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u8c03\u7528\u79fb\u9664\u64cd\u4f5c\uff0c\u5426\u5219\u63d2\u5165\u64cd\u4f5c\u4e00\u76f4\u5904\u4e8e\u963b\u585e\u72b6\u6001\uff0c\u541e\u5410\u91cf\u901a\u5e38\u8981\u9ad8\u4e8e`LinkedBlockingQuene`\\n\\n### \u62d2\u7edd\u7b56\u7565\\n\\n- `AbortPolicy`\uff1a\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\uff0c\u9ed8\u8ba4\u7684\\n\\n```java\\n  public void rejectedExecution(Runnable r, ThreadPoolExecutor e) {\\n              throw new RejectedExecutionException(\\"Task \\" + r.toString() +\\n                                                   \\" rejected from \\" +\\n                                                   e.toString());\\n          }\\n```\\n\\n- `DiscardPolicy`\uff1a\u76f4\u63a5\u4e22\u5f03\u4efb\u52a1\\n\\n```java\\n  public void rejectedExecution(Runnable r, ThreadPoolExecutor e) {\\n          }\\n```\\n\\n- `DiscardOldestPolicy`\uff1a\u4e22\u5f03\u961f\u5217\u91cc\u6700\u8001\u7684\u4efb\u52a1\uff0c\u5c06\u65b0\u4efb\u52a1\u63d0\u4ea4\u7ed9\u7ebf\u7a0b\u6c60\\n\\n```java\\n  public void rejectedExecution(Runnable r, ThreadPoolExecutor e) {\\n              if (!e.isShutdown()) {\\n                  e.getQueue().poll();\\n                  e.execute(r);\\n              }\\n          }\\n```\\n\\n- `CallerRunsPolicy`\uff1a\u4ea4\u7ed9\u7ebf\u7a0b\u6c60\u8c03\u7528\u6240\u5728\u7684\u7ebf\u7a0b\u8fdb\u884c\u5904\u7406\\n\\n```java\\n  public void rejectedExecution(Runnable r, ThreadPoolExecutor e) {\\n              if (!e.isShutdown()) {\\n                  r.run();\\n              }\\n          }\\n```\\n\\n### \u7ebf\u7a0b\u6c60\u521b\u5efa\uff08ThreadPoolExecutor\uff09\\n\\n`Executors`\u63d0\u4f9b\u7684\u9ed8\u8ba4\u7ebf\u7a0b\u6c60\u7c7b\u578b\u90fd\u662f\u8c03\u7528`ThreadPoolExecutor`\u6765\u521b\u5efa\u7684\uff0c\u6765\u770b\u4e0b\u8fd9\u4e2a\u7c7b\u7684\u6784\u9020\u51fd\u6570\u3002\\n\\n```java\\npublic ThreadPoolExecutor(int corePoolSize,\\n                          int maximumPoolSize,\\n                          long keepAliveTime,\\n                          TimeUnit unit,\\n                          BlockingQueue<Runnable> workQueue,\\n                          ThreadFactory threadFactory,\\n                          RejectedExecutionHandler handler)\\n```\\n\\n> \u963f\u91cc Java \u89c4\u7ea6\u7981\u6b62\u4f7f\u7528 Java \u5185\u7f6e`Executors`\u521b\u5efa\u7ebf\u7a0b\u6c60\uff0c\u63a8\u8350\u4f7f\u7528`ThreadPoolExecutor`\\n\\n**\u53c2\u6570\u542b\u4e49\uff1a**\\n\\n- corePoolSize\\n\\n  \u7ebf\u7a0b\u6c60\u6838\u5fc3\u7ebf\u7a0b\u6570\uff08\u9ed8\u8ba4\u7a7a\u95f2\u7ebf\u7a0b\u6570\uff09\\n\\n  \u5f53`allowCoreThreadTimeOut`\u88ab\u8bbe\u5b9a\u65f6\uff0c\u5982\u679c\u4fdd\u6301\u6d3b\u52a8\u65f6\u95f4\u5185\u6ca1\u6709\u4efb\u52a1\u5230\u8fbe\uff0c\u5219\u4f1a\u88ab\u7ec8\u6b62\\n\\n- maximumPoolSize\\n\\n  \u7ebf\u7a0b\u6c60\u6700\u5927\u7ebf\u7a0b\u6570\\n\\n- keepAliveTime\\n\\n  \u8d85\u8fc7\u6838\u5fc3\u7ebf\u7a0b\u6570\u65f6\uff0c\u7a7a\u95f2\u7ebf\u7a0b\u80fd\u5b58\u6d3b\u65f6\u95f4\\n\\n- unit\\n\\n  `keepAliveTime`\u7684\u65f6\u95f4\u5355\u4f4d\\n\\n- workQueue\\n\\n  \u5b58\u653e\u4efb\u52a1\u7684\u963b\u585e\u961f\u5217\u3002\u6b64\u961f\u5217\u5c06\u53ea\u4fdd\u5b58\u7531`execute`\u65b9\u6cd5\u63d0\u4ea4\u7684`Runnable`\u4efb\u52a1\\n\\n- threadFactory\\n\\n  \u521b\u5efa\u7ebf\u7a0b\u7684\u5de5\u5382\\n\\n- handler\\n\\n  \u7ebf\u7a0b\u6c60\u9971\u548c\u7b56\u7565\uff08\u8fbe\u5230\u7ebf\u7a0b\u8fb9\u754c\u548c\u961f\u5217\u5bb9\u91cf\uff09\\n\\n### \u72b6\u6001\\n\\n```java\\n   private static final int RUNNING    = -1 << COUNT_BITS;\\n   private static final int SHUTDOWN   =  0 << COUNT_BITS;\\n   private static final int STOP       =  1 << COUNT_BITS;\\n   private static final int TIDYING    =  2 << COUNT_BITS;\\n   private static final int TERMINATED =  3 << COUNT_BITS;\\n```\\n\\n- RUNNING\\n\\n  \u9ad8 4 \u4f4d\uff1a1110\\n\\n  \u8be5\u72b6\u6001\u7684\u7ebf\u7a0b\u6c60\u4f1a\u63a5\u6536\u65b0\u4efb\u52a1\uff0c\u5e76\u5904\u7406\u963b\u585e\u961f\u5217\u4e2d\u7684\u4efb\u52a1\\n\\n  `shutdown()` => SHUTDOWN \u72b6\u6001\\n\\n  `shutdownNow()` => STOP \u72b6\u6001\\n\\n- SHUTDOWN\\n\\n  \u9ad8 4 \u4f4d\uff1a0000\\n\\n  \u8be5\u72b6\u6001\u7684\u7ebf\u7a0b\u6c60\u4e0d\u4f1a\u63a5\u6536\u65b0\u4efb\u52a1\uff0c\u4f46\u4f1a\u5904\u7406\u963b\u585e\u961f\u5217\u4e2d\u7684\u4efb\u52a1\\n\\n  \u961f\u5217\u4e3a\u7a7a\uff0c\u5e76\u4e14\u7ebf\u7a0b\u6c60\u4e2d\u6267\u884c\u7684\u4efb\u52a1\u4e5f\u4e3a\u7a7a,\u8fdb\u5165 TIDYING \u72b6\u6001\\n\\n- STOP\\n\\n  \u9ad8 4 \u4f4d\uff1a0010\\n\\n  \u8be5\u72b6\u6001\u7684\u7ebf\u7a0b\u4e0d\u4f1a\u63a5\u6536\u65b0\u4efb\u52a1\uff0c\u4e5f\u4e0d\u4f1a\u5904\u7406\u963b\u585e\u961f\u5217\u4e2d\u7684\u4efb\u52a1\uff0c\u800c\u4e14\u4f1a\u4e2d\u65ad\u6b63\u5728\u8fd0\u884c\u7684\u4efb\u52a1\\n\\n  \u7ebf\u7a0b\u6c60\u4e2d\u6267\u884c\u7684\u4efb\u52a1\u4e3a\u7a7a\uff0c\u8fdb\u5165 TIDYING \u72b6\u6001\\n\\n- TIDYING\\n\\n  \u9ad8 4 \u4f4d\uff1a0100\\n\\n  \u8be5\u72b6\u6001\u8868\u660e\u6240\u6709\u7684\u4efb\u52a1\u5df2\u7ecf\u8fd0\u884c\u7ec8\u6b62\uff0c\u8bb0\u5f55\u7684\u4efb\u52a1\u6570\u91cf\u4e3a 0\\n\\n  `terminated()`\u6267\u884c\u5b8c\u6bd5\uff0c\u8fdb\u5165 TERMINATED \u72b6\u6001\\n\\n- TERMINATED\\n\\n  \u9ad8 4 \u4f4d\uff1a0110\\n\\n  \u8be5\u72b6\u6001\u8868\u793a\u7ebf\u7a0b\u6c60\u5f7b\u5e95\u7ec8\u6b62\\n\\n### \u6267\u884c\u8fc7\u7a0b\\n\\nexecute:\\n\\n1. \u8fd0\u884c\u7ebf\u7a0b\u6570\u5c0f\u4e8e\u6838\u5fc3\u7ebf\u7a0b\u6570\uff0c\u521b\u5efa\u6838\u5fc3\u7ebf\u7a0b\u5e76\u542f\u52a8\\n2. \u5c1d\u8bd5\u52a0\u5165\u961f\u5217\uff0c\u6210\u529f\u540e\uff0c\u4e8c\u6b21\u68c0\u67e5\u72b6\u6001\uff0c\u5982\u679c\u5931\u8d25\uff0c\u6267\u884c\u62d2\u7edd\u7b56\u7565\uff0c\u5982\u679c\u53ef\u4ee5\u8fd0\u884c\uff0c\u7acb\u523b\u542f\u52a8\u4e00\u4e2a worker\\n3. \u5c1d\u8bd5\u52a0\u5165\u961f\u5217\u5931\u8d25\uff0c\u5c1d\u8bd5\u521b\u5efa\u975e\u6838\u5fc3\u7ebf\u7a0b\u5e76\u542f\u52a8\uff0c\u5982\u679c\u5931\u8d25\uff0c\u6267\u884c\u62d2\u7edd\u7b56\u7565\\n\\n![execute](https://cdn.nlark.com/yuque/0/2020/png/402881/1595063676332-b996dcea-bc74-4c7b-9839-75f667189314.png)\\n\\n```java\\npublic void execute(Runnable command) {\\n        if (command == null)\\n            throw new NullPointerException();\\n\\n        int c = ctl.get();\\n        if (workerCountOf(c) < corePoolSize) {\\n            if (addWorker(command, true))\\n                return;\\n            c = ctl.get();\\n        }\\n        if (isRunning(c) && workQueue.offer(command)) {\\n            int recheck = ctl.get();\\n            if (! isRunning(recheck) && remove(command))\\n                reject(command);\\n            else if (workerCountOf(recheck) == 0)\\n                addWorker(null, false);\\n        }\\n        else if (!addWorker(command, false))\\n            reject(command);\\n    }\\n```\\n\\n`addWorker`\u4e2d\uff0c\u5982\u679c\u52a0\u5165 worker \u6210\u529f\uff0c\u4f1a\u76f4\u63a5\u8c03\u7528\u7ebf\u7a0b\u7684`start`\u8fd0\u884c\uff0c\u6700\u7ec8\u4f1a\u6267\u884c`runWorker`\\n\\n```java\\nfinal void runWorker(Worker w) {\\n        Thread wt = Thread.currentThread();\\n        // \u83b7\u53d6worker\u4e2d\u8981\u6267\u884c\u7684\u4efb\u52a1\\n        Runnable task = w.firstTask;\\n        w.firstTask = null;\\n        w.unlock(); // allow interrupts\\n        boolean completedAbruptly = true;\\n        try {\\n            /**\\n             * getTask \u4e3b\u8981\u505a\u4ee5\u4e0b\u529f\u80fd\uff1a\\n             * 1.\u6821\u9a8c\u6c60\u72b6\u6001\u3001\u8d85\u65f6\u65f6\u95f4\u3001\u6700\u5927\u5de5\u4f5c\u6570\u91cf\uff0c\u5982\u679c\u4e0d\u901a\u8fc7\u8fd4\u56denull\\n             * 2.\u5982\u679c\u5de5\u4f5c\u7ebf\u7a0b\u5927\u4e8e\u6838\u5fc3\u7ebf\u7a0b\uff0c\u7528poll\u65b9\u6cd5\u4ece\u961f\u5217\u4e2d\u53d6\u51fa\u4e00\u4e2a\u4efb\u52a1\uff0c\u5426\u5219\uff0c\u7528take\u4ece\u961f\u5217\u4e2d\u53d6\u51fa\u4efb\u52a1\\n             **/\\n            while (task != null || (task = getTask()) != null) {\\n                w.lock();\\n                // \u68c0\u67e5\u7ebf\u7a0b\u6c60\u53ca\u7ebf\u7a0b\u72b6\u6001\\n                if ((runStateAtLeast(ctl.get(), STOP) ||\\n                     (Thread.interrupted() &&\\n                      runStateAtLeast(ctl.get(), STOP))) &&\\n                    !wt.isInterrupted())\\n                    wt.interrupt();\\n                try {\\n                    beforeExecute(wt, task);\\n                    Throwable thrown = null;\\n                    try {\\n                        task.run();\\n                    } catch (RuntimeException x) {\\n                        thrown = x; throw x;\\n                    } catch (Error x) {\\n                        thrown = x; throw x;\\n                    } catch (Throwable x) {\\n                        thrown = x; throw new Error(x);\\n                    } finally {\\n                        afterExecute(task, thrown);\\n                    }\\n                } finally {\\n                    task = null;\\n                    w.completedTasks++;\\n                    w.unlock();\\n                }\\n            }\\n            completedAbruptly = false;\\n        } finally {\\n            // 1.\u7edf\u8ba1\u5b8c\u6210\u7684\u4efb\u52a1\u6570\\n            // 2.\u5c1d\u8bd5\u8bbe\u7f6e\u7ebf\u7a0b\u6c60\u72b6\u6001\u4f4dTERMINATED\\n            // 3.\u5982\u679c\u7ebf\u7a0b\u6c60\u7ebf\u7a0b\u6570\u91cf\u5c0f\u4e8e\u6838\u5fc3\u7ebf\u7a0b\u6570\uff0c\u5219\u589e\u52a0\u4e00\u4e2a\u7ebf\u7a0b\\n            processWorkerExit(w, completedAbruptly);\\n        }\\n    }\\n```\\n\\n### \u5f02\u5e38\u5904\u7406\\n\\n#### try-catch\\n\\n\u7ebf\u7a0b\u5185\u90e8\u901a\u8fc7 try-catch \u6355\u83b7\\n\\n```java\\nExecutorService service = Executors.newCachedThreadPool();\\n        for (long i = 0; i < 100; i++) {\\n            service.submit(() -> {\\n                try {\\n                    Thread.sleep(1000);\\n                    System.out.println(\\"Hello, I\'m a thread! \\" + System.currentTimeMillis());\\n                } catch (InterruptedException e) {\\n                    e.printStackTrace();\\n                }\\n            });\\n        }\\n```\\n\\n#### \u5e26\u5f02\u5e38\u5904\u7406\u7684 ThreadFactory\\n\\n```java\\n        ExecutorService service = Executors.newSingleThreadExecutor(factory -> {\\n            Thread thread = new Thread(factory);\\n            thread.setUncaughtExceptionHandler((t, e) -> {\\n                System.out.println(t.getName() + e);\\n            });\\n            return thread;\\n        });\\n        service.execute(() -> {\\n            throw new RuntimeException(\\"error\\");\\n        });\\n    }\\n```\\n\\n#### \u91cd\u5199`afterExecute`\\n\\n```java\\nclass ExtendedExecutor extends ThreadPoolExecutor {\\n    protected void afterExecute(Runnable r, Throwable t) {\\n        super.afterExecute(r, t);\\n        if (t == null && r instanceof Future<?>) {\\n            try {\\n                Object result = ((Future<?>) r).get();\\n            } catch (CancellationException ce) {\\n                t = ce;\\n            } catch (ExecutionException ee) {\\n                t = ee.getCause();\\n            } catch (InterruptedException ie) {\\n                Thread.currentThread().interrupt(); // ignore/reset\\n            }\\n        }\\n        if (t != null)\\n            System.out.println(t);\\n    }\\n}}\\n```\\n\\n#### Future \u7684\u5f02\u5e38\u6355\u83b7\\n\\nsubmit \u63d0\u4ea4\u7684\u7ebf\u7a0b\u53ef\u4ee5\u6355\u83b7`Future.get`\u7684\u5f02\u5e38\u6765\u5904\u7406\\n\\n```java\\n        ExecutorService service = Executors.newSingleThreadExecutor();\\n        FutureTask<String> task = new FutureTask<>(() -> {\\n            throw new RuntimeException(\\"error\\");\\n        });\\n        service.submit(task);\\n        service.shutdown();\\n        try {\\n            String result = task.get();\\n            System.out.println(result);\\n        } catch (Exception e) {\\n            System.out.println(e);\\n        }\\n    }\\n```\\n\\n### \u9ed8\u8ba4\u7ebf\u7a0b\u6c60\uff08Executors\uff09\\n\\n#### FixedThreadPool\\n\\n```java\\n public static ExecutorService newFixedThreadPool(int nThreads) {\\n        return new ThreadPoolExecutor(nThreads, nThreads,\\n                                      0L, TimeUnit.MILLISECONDS,\\n                                      new LinkedBlockingQueue<Runnable>());\\n    }\\n\\npublic static ExecutorService newFixedThreadPool(int nThreads, ThreadFactory threadFactory) {\\n        return new ThreadPoolExecutor(nThreads, nThreads,\\n                                      0L, TimeUnit.MILLISECONDS,\\n                                      new LinkedBlockingQueue<Runnable>(),\\n                                      threadFactory);\\n    }\\n```\\n\\n**\u7279\u5f81\uff1a**\\n\\n- \u56fa\u5b9a\u5927\u5c0f\u7684\u7ebf\u7a0b\u6c60\\n- \u91c7\u7528`AbortPolicy`\uff0c\u76f4\u63a5\u629b\u51fa\u5f02\u5e38`RejectedExecutionException`\\n- \u65e0\u8fb9\u754c\u7684`LinkedBlockingQueue`\uff0c\u6700\u591a\u53ef\u63a5\u53d7`Integer.MAX_VALUE`\\n\\n**\u5e94\u7528\u573a\u666f\uff1a**\\n\\n- \u5904\u7406 CPU \u5bc6\u96c6\u578b\u7684\u4efb\u52a1\uff0c\u786e\u4fdd CPU \u5728\u957f\u671f\u88ab\u5de5\u4f5c\u7ebf\u7a0b\u4f7f\u7528\u7684\u60c5\u51b5\u4e0b\uff0c\u5c3d\u53ef\u80fd\u7684\u5c11\u7684\u5206\u914d\u7ebf\u7a0b\uff0c\u5373\u9002\u7528\u6267\u884c\u957f\u671f\u7684\u4efb\u52a1\\n\\n**\u95ee\u9898\uff1a**\\n\\n- \u53ef\u80fd\u4f1a\u5806\u79ef\u5927\u91cf\u7684\u8bf7\u6c42\uff0c\u4ece\u800c\u5bfc\u81f4 OOM\\n\\n#### SingleThreadExecutor\\n\\n```java\\npublic static ExecutorService newSingleThreadExecutor() {\\n        return new FinalizableDelegatedExecutorService\\n            (new ThreadPoolExecutor(1, 1,\\n                                    0L, TimeUnit.MILLISECONDS,\\n                                    new LinkedBlockingQueue<Runnable>()));\\n    }\\n\\npublic static ExecutorService newSingleThreadExecutor(ThreadFactory threadFactory) {\\n        return new FinalizableDelegatedExecutorService\\n            (new ThreadPoolExecutor(1, 1,\\n                                    0L, TimeUnit.MILLISECONDS,\\n                                    new LinkedBlockingQueue<Runnable>(),\\n                                    threadFactory));\\n    }\\n```\\n\\n**\u7279\u5f81\uff1a**\\n\\n- \u53ea\u7ef4\u6301 1 \u4e2a\u7ebf\u7a0b\u7684\u7ebf\u7a0b\u6c60\\n- \u91c7\u7528`AbortPolicy`\uff0c\u76f4\u63a5\u629b\u51fa\u5f02\u5e38`RejectedExecutionException`\\n- \u91c7\u7528`LinkedBlockingQueue`\uff0c\u6700\u591a\u53ef\u63a5\u53d7`Integer.MAX_VALUE`\\n\\n**\u5e94\u7528\u573a\u666f\uff1a**\\n\\n- \u4e32\u884c\u6267\u884c\\n\\n**\u95ee\u9898\uff1a**\\n\\n- \u53ef\u80fd\u4f1a\u5806\u79ef\u5927\u91cf\u7684\u8bf7\u6c42\uff0c\u4ece\u800c\u5bfc\u81f4 OOM\\n\\n#### CachedThreadPool\\n\\n```java\\npublic static ExecutorService newCachedThreadPool() {\\n        return new ThreadPoolExecutor(0, Integer.MAX_VALUE,\\n                                      60L, TimeUnit.SECONDS,\\n                                      new SynchronousQueue<Runnable>());\\n    }\\n\\npublic static ExecutorService newCachedThreadPool(ThreadFactory threadFactory) {\\n        return new ThreadPoolExecutor(0, Integer.MAX_VALUE,\\n                                      60L, TimeUnit.SECONDS,\\n                                      new SynchronousQueue<Runnable>(),\\n                                      threadFactory);\\n    }\\n```\\n\\n**\u7279\u5f81\uff1a**\\n\\n- \u6700\u5927\u5927\u5c0f\u4e3a`Integer.MAX_VALUE`\u7684\u7ebf\u7a0b\u6c60\\n- `keepAliveTime` 60S\\n- \u91c7\u7528`AbortPolicy`\uff0c\u76f4\u63a5\u629b\u51fa\u5f02\u5e38`RejectedExecutionException`\\n- \u91c7\u7528`SynchronousQueue`\\n\\n**\u5e94\u7528\u573a\u666f\uff1a**\\n\\n- \u5e76\u53d1\u91cf\u5927\uff0c\u6267\u884c\u65f6\u95f4\u6bd4\u8f83\u5c0f\u7684\u4efb\u52a1\\n\\n**\u95ee\u9898\uff1a**\\n\\n- \u53ef\u80fd\u4f1a\u521b\u5efa\u5927\u91cf\u7684\u7ebf\u7a0b\uff0c\u4ece\u800c\u5bfc\u81f4 OOM\\n\\n#### SingleThreadScheduledExecutor\\n\\n```java\\npublic static ScheduledExecutorService newSingleThreadScheduledExecutor() {\\n        return new DelegatedScheduledExecutorService\\n            (new ScheduledThreadPoolExecutor(1));\\n    }\\n\\npublic static ScheduledExecutorService newSingleThreadScheduledExecutor(ThreadFactory threadFactory) {\\n        return new DelegatedScheduledExecutorService\\n            (new ScheduledThreadPoolExecutor(1, threadFactory));\\n    }\\n```\\n\\n**\u7279\u5f81\uff1a**\\n\\n- \u53ea\u7ef4\u6301 1 \u4e2a\u7ebf\u7a0b\u7684\u7ebf\u7a0b\u6c60\\n- `keepAliveTime` 0 \u7eb3\u79d2\\n- \u91c7\u7528`AbortPolicy`\uff0c\u76f4\u63a5\u629b\u51fa\u5f02\u5e38`RejectedExecutionException`\\n- \u91c7\u7528`DelayedWorkQueue`\\n- `schedule`\uff1a\u5e26\u5ef6\u8fdf\u65f6\u95f4\u7684\u8c03\u5ea6\uff0c\u53ea\u6267\u884c\u4e00\u6b21\\n- `scheduleAtFixedRate`\uff1a\u5e26\u5ef6\u8fdf\u65f6\u95f4\u7684\u8c03\u5ea6\uff0c\u5faa\u73af\u6267\u884c\uff0c\u56fa\u5b9a\u9891\u7387\\n- `scheduleWithFixedDelay`\uff1a\u5e26\u5ef6\u8fdf\u65f6\u95f4\u7684\u8c03\u5ea6\uff0c\u5faa\u73af\u6267\u884c\uff0c\u56fa\u5b9a\u5ef6\u8fdf\\n\\n**\u5e94\u7528\u573a\u666f\uff1a**\\n\\n- \u5468\u671f\u6027\u6267\u884c\u4efb\u52a1\\n\\n**\u95ee\u9898\uff1a**\\n\\n- \u53ef\u80fd\u4f1a\u5806\u79ef\u5927\u91cf\u7684\u4efb\u52a1\uff0c\u4ece\u800c\u5bfc\u81f4 OOM\\n\\n#### ScheduledThreadPool\\n\\n```java\\npublic static ScheduledExecutorService newScheduledThreadPool(\\n            int corePoolSize, ThreadFactory threadFactory) {\\n        return new ScheduledThreadPoolExecutor(corePoolSize, threadFactory);\\n    }\\n\\npublic ScheduledThreadPoolExecutor(int corePoolSize) {\\n        super(corePoolSize, Integer.MAX_VALUE, 0, NANOSECONDS,\\n              new DelayedWorkQueue());\\n    }\\n```\\n\\n**\u7279\u5f81\uff1a**\\n\\n- \u6700\u5927\u5927\u5c0f\u4e3a`Integer.MAX_VALUE`\u7684\u7ebf\u7a0b\u6c60\\n- `keepAliveTime`\u4e3a 0\uff0c\u4e0d\u4f1a\u5b58\u5728\u7a7a\u95f2\u7ebf\u7a0b\\n- \u91c7\u7528`AbortPolicy`\uff0c\u76f4\u63a5\u629b\u51fa\u5f02\u5e38`RejectedExecutionException`\\n- \u91c7\u7528`DelayedWorkQueue`\\n- `schedule`\uff1a\u5e26\u5ef6\u8fdf\u65f6\u95f4\u7684\u8c03\u5ea6\uff0c\u53ea\u6267\u884c\u4e00\u6b21\\n- `scheduleAtFixedRate`\uff1a\u5e26\u5ef6\u8fdf\u65f6\u95f4\u7684\u8c03\u5ea6\uff0c\u5faa\u73af\u6267\u884c\uff0c\u56fa\u5b9a\u9891\u7387\\n- `scheduleWithFixedDelay`\uff1a\u5e26\u5ef6\u8fdf\u65f6\u95f4\u7684\u8c03\u5ea6\uff0c\u5faa\u73af\u6267\u884c\uff0c\u56fa\u5b9a\u5ef6\u8fdf\\n\\n**\u5e94\u7528\u573a\u666f\uff1a**\\n\\n- \u5468\u671f\u6027\u6267\u884c\u4efb\u52a1\\n\\n**\u95ee\u9898\uff1a**\\n\\n- \u53ef\u80fd\u4f1a\u5806\u79ef\u5927\u91cf\u7684\u4efb\u52a1\uff0c\u4ece\u800c\u5bfc\u81f4 OOM\\n\\n\u6b64\u65f6\uff0c\u53ef\u80fd\u4f1a\u6709\u4e2a\u7591\u95ee\uff0c`ScheduledThreadPoolExecutor(1)`\u4e0e`newSingleThreadScheduledExecutor()`\u662f\u5426\u7b49\u4ef7\u5462\uff1fJava Doc \u4e2d\u6709\u63cf\u8ff0\uff1a\\n\\n```java\\n    /**\\n     * Creates a single-threaded executor that can schedule commands\\n     * to run after a given delay, or to execute periodically.  (Note\\n     * however that if this single thread terminates due to a failure\\n     * during execution prior to shutdown, a new one will take its\\n     * place if needed to execute subsequent tasks.)  Tasks are\\n     * guaranteed to execute sequentially, and no more than one task\\n     * will be active at any given time. Unlike the otherwise\\n     * equivalent {@code newScheduledThreadPool(1, threadFactory)}\\n     * the returned executor is guaranteed not to be reconfigurable to\\n     * use additional threads.\\n     * @param threadFactory the factory to use when creating new\\n     * threads\\n     * @return a newly created scheduled executor\\n     * @throws NullPointerException if threadFactory is null\\n     */\\n```\\n\\n\u5728\u60f3\u8981\u5355\u6d3b\u8dc3\u7ebf\u7a0b\u65f6\uff0c\u4e8c\u8005\u7b49\u4ef7\uff0c\u5728\u7ebf\u7a0b\u7531\u4e8e\u6267\u884c\u5668\u88ab\u4e2d\u65ad\u65f6\uff0c\u90fd\u4f1a\u542f\u52a8\u4e00\u4e2a\u65b0\u7ebf\u7a0b\u6267\u884c\u540e\u7eed\u4efb\u52a1\uff0c\u4f46`newSingleThreadScheduledExecutor()`\u4fdd\u8bc1\u6267\u884c\u5668\u4e0d\u4f1a\u88ab\u91cd\u65b0\u914d\u7f6e\u4ee5\u4f7f\u7528\u989d\u5916\u7684\u7ebf\u7a0b\uff0c\u8fd9\u4e2a\u624d\u662f\u6700\u5927\u533a\u522b\u7684\u5730\u65b9\u3002\\n\\n#### WorkStealingPool\uff081.8\uff09\\n\\n```java\\npublic static ExecutorService newWorkStealingPool(int parallelism) {\\n        return new ForkJoinPool\\n            (parallelism,\\n             ForkJoinPool.defaultForkJoinWorkerThreadFactory,\\n             null, true);\\n    }\\n\\npublic static ExecutorService newWorkStealingPool() {\\n        return new ForkJoinPool\\n            (Runtime.getRuntime().availableProcessors(),\\n             ForkJoinPool.defaultForkJoinWorkerThreadFactory,\\n             null, true);\\n    }\\n```\\n\\n**\u7279\u5f81\uff1a**\\n\\n- \u4f7f\u7528`ForkJoinPool`\\n- \u5e76\u53d1\u3001\u62a2\u5360\u5f0f\u6267\u884c\\n- FIFO \u8c03\u5ea6\u6a21\u5f0f\\n\\n**\u5e94\u7528\u573a\u666f\uff1a**\\n\\n- \u5904\u7406 CPU \u5bc6\u96c6\u578b\u7684\u4efb\u52a1\uff0c\u786e\u4fdd CPU \u5728\u957f\u671f\u88ab\u5de5\u4f5c\u7ebf\u7a0b\u4f7f\u7528\u7684\u60c5\u51b5\u4e0b\uff0c\u5c3d\u53ef\u80fd\u7684\u5c11\u7684\u5206\u914d\u7ebf\u7a0b\uff0c\u5373\u9002\u7528\u6267\u884c\u957f\u671f\u7684\u4efb\u52a1"},{"id":"/JVM\u5fc5\u4f1a\u7684\u77e5\u8bc6","metadata":{"permalink":"/blog/tech/JVM\u5fc5\u4f1a\u7684\u77e5\u8bc6","source":"@site/tech/JVM\u5fc5\u4f1a\u7684\u77e5\u8bc6.md","title":"JVM \u5fc5\u4f1a\u7684\u77e5\u8bc6","description":"1.\u5185\u5b58\u6a21\u578b","date":"2020-07-08T13:28:05.000Z","formattedDate":"2020\u5e747\u67088\u65e5","tags":[{"label":"java","permalink":"/blog/tech/tags/java"},{"label":"jvm","permalink":"/blog/tech/tags/jvm"}],"readingTime":6.125,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["java","jvm"]},"prevItem":{"title":"\u73a9\u8f6c Java \u7ebf\u7a0b\u53ca\u7ebf\u7a0b\u6c60","permalink":"/blog/tech/\u73a9\u8f6cJava\u7ebf\u7a0b\u53ca\u7ebf\u7a0b\u6c60"},"nextItem":{"title":"Redis \u53d1\u5e03\u8ba2\u9605\u6a21\u5f0f","permalink":"/blog/tech/Redis\u53d1\u5e03\u8ba2\u9605\u6a21\u5f0f"}},"content":"## 1.\u5185\u5b58\u6a21\u578b\\n\\n\u53ef\u5206\u4e3a\u4ee5\u4e0b\u51e0\u90e8\u5206\uff1a\\n\\n### \u6808\\n\\n\u65b9\u6cd5\u7684\u5185\u5b58\u6a21\u578b\uff0c\u4e00\u4e2a\u65b9\u6cd5\u5bf9\u5e94\u4e00\u4e2a\u6808\u5e27\uff0c\u65b9\u6cd5\u7684\u6267\u884c\u5c31\u662f\u5165\u6808\u5230\u51fa\u6808\u7684\u8fc7\u7a0b\u3002\\n\\n\u5305\u62ec\uff1a\u865a\u62df\u673a\u6808\uff08Java\u65b9\u6cd5\uff09\u548c\u672c\u5730\u65b9\u6cd5\u6808\\n\\n\u6808\u5e27\u5305\u62ec\uff1a\\n\\n- \u5c40\u90e8\u53d8\u91cf\u8868\\n\\n  \u7531\u5c40\u90e8\u53d8\u91cf\u69fd\uff08Slot\uff09\u7ec4\u6210\uff0c\u5728\u7f16\u8bd1\u671f\u95f4\u5b8c\u6210\u5206\u914d\uff0c\u65b9\u6cd5\u5728\u8fd0\u884c\u671f\u95f4\u4e0d\u4f1a\u6539\u53d8\u5c40\u90e8\u53d8\u91cf\u8868\u7684\u5927\u5c0f\uff08\u53d8\u91cf\u69fd\u7684\u6570\u91cf\uff09\\n\\n  \u53d8\u91cf\u69fd\u5b58\u50a8\uff1a\\n\\n  - \u57fa\u672c\u6570\u636e\u7c7b\u578b\\n\\n    64\u4f4d\u7684\u7c7b\u578b\u4f1a\u53602\u4e2a\u69fd\uff0c\u5176\u4ed6\u53ea\u5360\u4e00\u4e2a\u69fd\\n\\n  - \u5bf9\u8c61\u5f15\u7528\uff08reference\u7c7b\u578b\uff09\\n\\n  - returnAddress\u7c7b\u578b\uff08\u6307\u5411\u4e00\u6761\u5b57\u8282\u7801\u6307\u4ee4\u7684\u5730\u5740\uff09\\n\\n- \u64cd\u4f5c\u6570\u6808\\n\\n  \u6267\u884c\u65b9\u6cd5\u65f6\uff0c\u5b58\u653e\u64cd\u4f5c\u6570\u7684\u6808\\n\\n- \u52a8\u6001\u8fde\u63a5\\n\\n  \u4e3a\u4e86\u652f\u6301\u5728\u8fd0\u884c\u671f\u95f4\u5c06\u7b26\u53f7\u5f15\u7528\u8f6c\u5316\u4e3a\u76f4\u63a5\u5f15\u7528\u7684\u64cd\u4f5c\\n\\n- \u65b9\u6cd5\u51fa\u53e3\\n\\n  \u8fd4\u56de\u5730\u5740\u4e3a\u5230\u8c03\u7528\u8be5\u65b9\u6cd5\u7684\u6307\u4ee4\u7684\u4e0b\u4e00\u6761\u6307\u4ee4\u7684\u5730\u5740\\n\\n### \u5806\\n\\n\u5b58\u653e\uff1a\u5bf9\u8c61\u5b9e\u4f8b\u3001\u6570\u7ec4\u3001\u7ebf\u7a0b\u672c\u5730\u7f13\u51b2\u533a\uff08TLAB\uff09\\n\\n### \u65b9\u6cd5\u533a\\n\\n\u4f1a\u5b58\u50a8\uff1a\u7c7b\u578b\u4fe1\u606f\u3001\u5e38\u91cf\u3001\u9759\u6001\u53d8\u91cf\u3001\u5373\u65f6\u7f16\u8bd1\u5668\u7f16\u8bd1\u540e\u7684\u4ee3\u7801\u7f13\u5b58\\n\\n\u6709\u4e2a\u8fd0\u884c\u65f6\u5e38\u91cf\u6c60\uff1aclass\u7684\u5e38\u91cf\u6c60\u8868\u3001\u8fd0\u884c\u65f6\u65b0\u7684\u5e38\u91cf\\n\\n\u56de\u6536\u76ee\u6807\uff1a\u9488\u5bf9\u5e38\u91cf\u6c60\u7684\u56de\u6536\u548c\u5bf9\u7c7b\u578b\u7684\u5378\u8f7d\\n\\n### \u7a0b\u5e8f\u8ba1\u6570\u5668\\n\\n\u5b57\u8282\u7801\u7684\u884c\u53f7\u63d0\u793a\u5668\uff0c\u4f1a\u8bb0\u5f55\u6b63\u5728\u6267\u884c\u7684\u865a\u62df\u673a\u5b57\u8282\u7801\u6307\u4ee4\u5730\u5740\uff0c\u5982\u679c\u6b63\u5728\u6267\u884c\u7684\u662f\u672c\u5730\u65b9\u6cd5\u5219\u4e3a\u7a7a\u3002\\n\\n## 2. \u5bf9\u8c61\u521b\u5efa\u8fc7\u7a0b\\n\\n1. \u68c0\u6d4bnew\u6307\u4ee4\u7684\u53c2\u6570\u662f\u5426\u80fd\u5728\u5e38\u91cf\u6c60\u5b9a\u4f4d\u5230\u4e00\u4e2a\u7c7b\u7684\u7b26\u53f7\u5f15\u7528\\n\\n2. \u68c0\u67e5\u7b26\u53f7\u5f15\u7528\u4ee3\u8868\u7684\u7c7b\u662f\u5426\u5df2\u7ecf\u88ab\u52a0\u8f7d\u3001\u89e3\u6790\u3001\u521d\u59cb\u5316\\n\\n   \u6ca1\u6709\uff0c\u5c31\u6267\u884c\u76f8\u5e94\u7684\u7c7b\u52a0\u8f7d\u8fc7\u7a0b\\n\\n3. \u5206\u914d\u5185\u5b58\u7a7a\u95f4\uff08\u5927\u5c0f\u5728\u7c7b\u52a0\u8f7d\u5b8c\u540e\u53ef\u4ee5\u5b8c\u5168\u786e\u5b9a\uff09\\n\\n   \u5206\u914d\u65b9\u6cd5\uff1a\\n\\n   - \u6307\u9488\u78b0\u649e\\n\\n     \u7edd\u5bf9\u89c4\u6574\u7684\u5806\u4e0a\u4f7f\u7528\uff0c\u4e00\u4e2a\u6307\u9488\u4f5c\u4e3a\u5206\u754c\u70b9\u6307\u793a\u5668\uff0c\u5206\u914d\u5185\u5b58\u5c31\u662f\u79fb\u52a8\u8be5\u6307\u9488\\n\\n     \u5b9e\u73b0\u65b9\u6848\uff1aCAS\\n\\n   - \u7a7a\u95f2\u5217\u8868\\n\\n     \u8bb0\u5f55\u54ea\u4e9b\u5185\u5b58\u5757\u53ef\u7528\uff0c\u5206\u914d\u65f6\u4ece\u4e2d\u67e5\u627e\u8db3\u591f\u5927\u7684\u7a7a\u95f4\u5206\u914d\uff0c\u5e76\u66f4\u65b0\u5217\u8868\\n\\n     \u5b9e\u73b0\u65b9\u6848\uff1aTLAB\uff08\u628a\u5185\u5b58\u5206\u914d\u7684\u52a8\u4f5c\u6309\u7167\u7ebf\u7a0b\u5212\u5206\u5728\u4e0d\u540c\u7684\u7a7a\u95f4\u4e4b\u4e2d\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u5728Java\u5806\u4e2d\u9884\u5148\u5206\u914d\u4e00\u5c0f\u5757\u5185\u5b58\uff09\\n\\n4. \u521d\u59cb\u5316\u4f4d\u96f6\u503c\uff08\u4e0d\u5305\u62ec\u5bf9\u8c61\u5934\uff09\\n\\n   \u4f7f\u7528TLAB\u65f6\uff0c\u4f1a\u63d0\u524d\u81f3TLAB\u5206\u914d\u65f6\u8fdb\u884c\\n\\n5. \u8bbe\u7f6e\u5bf9\u8c61\uff08\u8bbe\u7f6e\u5bf9\u8c61\u5934\uff09\\n\\n   \u4e00\u822c\u5305\u62ec\uff1a\\n\\n   - \u54ea\u4e2a\u7c7b\u7684\u5b9e\u4f8b\\n   - \u6307\u5411\u5143\u6570\u636e\u4fe1\u606f\\n   - GC\u5206\u4ee3\u5e74\u9f84\\n   - \u662f\u5426\u542f\u7528\u504f\u5411\u9501\\n\\n6. \u6267\u884c\u6784\u9020\u51fd\u6570\\n\\n## 3. \u5bf9\u8c61\u5185\u5b58\u5e03\u5c40\\n\\n### \u5bf9\u8c61\u5934\\n\\n- Markword\\n\\n  8\u5b57\u8282\uff0c\u8bb0\u5f55\uff1a\u9501\u4fe1\u606f\u3001GC\u4fe1\u606f\u3001Hashcode\\n\\n- \u7c7b\u578b\u6307\u9488\\n\\n  \u6307\u5411\u7c7b\u578b\u5143\u6570\u636e\\n\\n### \u5b9e\u4f8b\u6570\u636e\\n\\n\u5b58\u50a8\u7c7b\u578b\u7684\u5b57\u6bb5\u5185\u5bb9\\n\\n### \u5bf9\u9f50\u586b\u5145\\n\\n\u88ab8\u6574\u9664\u8865\u9f50\u7528\\n\\n## 4. \u5bf9\u8c61\u8bbf\u95ee\u5b9a\u4f4d\\n\\n\u901a\u8fc7\u6808\u4e0a\u7684reference\u6570\u636e\u64cd\u4f5c\u5806\u4e0a\u7684\u5177\u4f53\u5bf9\u8c61\\n\\n- \u53e5\u67c4\\n\\n  \u5806\u4e0a\u5212\u5206\u7a7a\u95f4\u4f5c\u4e3a\u53e5\u67c4\u6c60\uff0c\u6c60\u4e2d\u5b58\u653e\uff1a\\n\\n  - \u5bf9\u8c61\u5b9e\u4f8b\u6570\u636e\u5730\u5740\\n  - \u7c7b\u578b\u6570\u636e\u6307\u9488\\n\\n  \u4f18\u70b9\uff1a\u6808\u4e2d\u5b58\u50a8\u7684\u662f\u53e5\u67c4\u5730\u5740\uff0c\u5728\u5bf9\u8c61\u88ab\u79fb\u52a8\u65f6\u53ea\u4f1a\u4fee\u6539\u53e5\u67c4\u4e2d\u7684\u5b9e\u4f8b\u6570\u636e\u6307\u9488\uff0creference\u5bf9\u8c61\u4e0d\u9700\u8981\u4fee\u6539\\n\\n  \u7f3a\u70b9\uff1a\u8bbf\u95ee\u5b9e\u4f8b\u6570\u636e\u591a\u4e00\u6b21\u6307\u9488\u5b9a\u4f4d\u5f00\u9500\\n\\n- \u76f4\u63a5\u6307\u9488\\n\\n  \u5b58\u50a8\uff1a\\n\\n  - \u5bf9\u8c61\u5b9e\u4f8b\u6570\u636e\\n  - \u5bf9\u8c61\u7c7b\u578b\u6570\u636e\u6307\u9488\\n\\n  \u4f18\u70b9\uff1a\u901f\u5ea6\u5feb\\n\\n  \u7f3a\u70b9\uff1a\u5bf9\u8c61\u88ab\u79fb\u52a8\u65f6\u9700\u8981\u4fee\u6539\u6808\u4e2dreference\u5b58\u50a8\u7684\u503c\\n\\n## 5. \u5bf9\u8c61\u5b58\u6d3b\u5224\u65ad\u65b9\u6cd5\\n\\n- \u5f15\u7528\u8ba1\u6570\u7b97\u6cd5\\n\\n  \u5f15\u7528\u5bf9\u8c61\u65f6\uff0c\u8ba1\u6570\u5668\u503c\u5c31\u52a0\u4e00\uff1b\u5f53\u5f15\u7528\u5931\u6548\u65f6\uff0c\u8ba1\u6570\u5668\u503c\u5c31\u51cf\u4e00\\n\\n  \u7f3a\u70b9\uff1a\u65e0\u6cd5\u89e3\u51b3\u5faa\u73af\u5f15\u7528\u95ee\u9898\\n\\n- \u53ef\u8fbe\u6027\u5206\u6790\u7b97\u6cd5\\n\\n  \u4ee5\u4e00\u7cfb\u5217GC Roots\u7684\u6839\u5bf9\u8c61\u4e3a\u8d77\u70b9\u96c6\uff0c\u6839\u636e\u5f15\u7528\u5173\u7cfb\u5411\u4e0b\u641c\u7d22\uff0c\u5982\u679c\u5bf9\u8c61\u5230GC Roots\u95f4\u4e0d\u53ef\u8fbe\uff0c\u5219\u5bf9\u8c61\u4e0d\u518d\u88ab\u5f15\u7528\\n\\n  \u5904\u7406\u6d41\u7a0b\uff1a\\n\\n  1. \u5224\u65ad\u5bf9\u8c61\u65f6\u5426\u53ef\u8fbe\\n\\n  2. \u4e0d\u53ef\u8fbe\uff0c\u8fdb\u884c\u6807\u8bb0\\n\\n  3. \u7b5b\u9009\u6807\u8bb0\u5bf9\u8c61\\n\\n     \u9700\u8981\u6267\u884cfinalized\u65b9\u6cd5\u7684\u52a0\u5165F-Queue\u961f\u5217\uff0c\u6267\u884c\u961f\u5217\u4e2d\u7684finalized\u65b9\u6cd5\uff0c\u5982\u679c\u5bf9\u8c61\u91cd\u65b0\u5173\u8fde\u4e0aGCRoots\u5c31\u8868\u793a\u5b58\u6d3b\\n\\n  4. \u5bf9F-Queue\u4e2d\u7684\u5bf9\u8c61\u8fdb\u884c\u7b2c\u4e8c\u6b21\u5c0f\u89c4\u6a21\u6807\u8bb0\\n\\n     \u79fb\u9664\u91cd\u65b0\u5173\u8054\u4e0a\u7684\u5bf9\u8c61\\n\\n## 6. \u53ef\u4f5c\u4e3a GC Root \u7684\u5bf9\u8c61\\n\\n- \u6808\u5e27\u4e2d\u672c\u5730\u53d8\u91cf\u8868\u4e2d\u5f15\u7528\u7684\u5bf9\u8c61\\n- \u65b9\u6cd5\u533a\u4e2d\u9759\u6001\u5c5e\u6027\u5f15\u7528\u7684\u5bf9\u8c61\\n- \u65b9\u6cd5\u533a\u4e2d\u5e38\u91cf\u5f15\u7528\u7684\u5bf9\u8c61\\n- \u672c\u5730\u65b9\u6cd5\u6808\u4e2dJNI\u5f15\u7528\u7684\u5bf9\u8c61\\n- \u865a\u62df\u673a\u5185\u90e8\u7684\u5f15\u7528\\n- \u6240\u6709\u88ab\u540c\u6b65\u9501\uff08synchronized\u5173\u952e\u5b57\uff09\u6301\u6709\u7684\u5bf9\u8c61\\n- \u53cd\u5e94Java\u865a\u62df\u673a\u5185\u90e8\u60c5\u51b5\u7684JM XBean\u3001JVM TI \u4e2d\u6ce8\u518c\u7684\u56de\u8c03\u3001\u672c\u5730\u4ee3\u7801\u7f13\u5b58\u7b49\\n- \u5783\u573e\u6536\u96c6\u5668\u7684\u7279\u6027\u800c\u52a0\u5165\u7684\u5bf9\u8c61\\n\\n## 7. GC \u7b97\u6cd5\\n\\n\\n\\n## 8. GC\u6536\u96c6\u5668\\n\\n\\n\\n## 9. \u7c7b\u52a0\u8f7d\u673a\u5236\\n\\n\\n\\n## 10.\u7c7b\u52a0\u8f7d\u8fc7\u7a0b\\n\\n\\n\\n## 11. \u53cc\u4eb2\u59d4\u6d3e\u673a\u5236\\n\\n\\n\\n## 12. \u7c7b\u52a0\u8f7d\u5668\u6709\u54ea\u4e9b"},{"id":"/Redis\u53d1\u5e03\u8ba2\u9605\u6a21\u5f0f","metadata":{"permalink":"/blog/tech/Redis\u53d1\u5e03\u8ba2\u9605\u6a21\u5f0f","source":"@site/tech/Redis\u53d1\u5e03\u8ba2\u9605\u6a21\u5f0f.md","title":"Redis \u53d1\u5e03\u8ba2\u9605\u6a21\u5f0f","description":"Redis \u662f\u4e00\u4e2a key-value \u7684\u5b58\u50a8\u7cfb\u7edf\uff0c\u901a\u5e38\u7528\u6765\u505a\u7f13\u5b58\uff0c\u4e5f\u6709\u4eba\u7528\u6765\u505a\u6570\u636e\u5e93\u3002\u7136\u800c\u5b83\u8fd8\u63d0\u4f9b\u4e86\u53d1\u5e03\u8ba2\u9605\u6a21\u5f0f\uff0c\u901a\u8fc7\u8fd9\u79cd\u6a21\u5f0f\u5c31\u53ef\u4ee5\u628a\u5b83\u5f53\u4f5c MQ \u6765\u7528\u3002","date":"2020-07-03T14:23:45.000Z","formattedDate":"2020\u5e747\u67083\u65e5","tags":[{"label":"redis","permalink":"/blog/tech/tags/redis"},{"label":"\u53d1\u5e03\u8ba2\u9605","permalink":"/blog/tech/tags/\u53d1\u5e03\u8ba2\u9605"}],"readingTime":5.52,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["redis","\u53d1\u5e03\u8ba2\u9605"]},"prevItem":{"title":"JVM \u5fc5\u4f1a\u7684\u77e5\u8bc6","permalink":"/blog/tech/JVM\u5fc5\u4f1a\u7684\u77e5\u8bc6"},"nextItem":{"title":"NSQ \u4ecb\u7ecd","permalink":"/blog/tech/NSQ\u57fa\u7840\u77e5\u8bc6"}},"content":"Redis \u662f\u4e00\u4e2a key-value \u7684\u5b58\u50a8\u7cfb\u7edf\uff0c\u901a\u5e38\u7528\u6765\u505a\u7f13\u5b58\uff0c\u4e5f\u6709\u4eba\u7528\u6765\u505a\u6570\u636e\u5e93\u3002\u7136\u800c\u5b83\u8fd8\u63d0\u4f9b\u4e86\u53d1\u5e03\u8ba2\u9605\u6a21\u5f0f\uff0c\u901a\u8fc7\u8fd9\u79cd\u6a21\u5f0f\u5c31\u53ef\u4ee5\u628a\u5b83\u5f53\u4f5c MQ \u6765\u7528\u3002\\n\\n## \u5de5\u4f5c\u6a21\u5f0f\\n\\n**\u53d1\u9001\u8005**\uff1a\u53ea\u8d1f\u8d23\u5411\u8ba2\u9605\u9891\u9053\u53d1\u5e03\u6d88\u606f\uff0c\u4e0d\u9700\u8981\u5173\u5fc3\u88ab\u8c01\u8ba2\u9605\u3001\u6709\u591a\u5c11\u8ba2\u9605\u8005\\n\\n**\u8ba2\u9605\u8005**\uff1a\u53ea\u8d1f\u8d23\u8ba2\u9605\u611f\u5174\u8da3\u7684\u9891\u9053\uff08\u53ef\u4ee5 1 \u4e2a\u6216\u591a\u4e2a\uff09\uff0c\u5e76\u4e0d\u9700\u8981\u77e5\u9053\u53d1\u5e03\u8005\u662f\u8c01\\n\\n\u53d1\u9001\u8005\u4e0e\u8ba2\u9605\u8005\u5b8c\u5168\u89e3\u8026\uff0c\u5177\u6709\u66f4\u5927\u7684\u53ef\u4f38\u7f29\u6027\u548c\u52a8\u6001\u6027\u3002\uff08\u4e0e NSQ \u539f\u7406\u5f88\u7c7b\u4f3c\uff09\\n\\n\u5f53\u7136\uff0cRedis \u4e0d\u662f\u4e13\u95e8\u7684 MQ\uff0c\u5177\u6709\u5c40\u9650\u6027\uff1a\\n\\n- \u9700\u8981\u8ba2\u9605\u540e\u624d\u80fd\u6d88\u8d39\uff0c\u6ca1\u8ba2\u9605\u524d\u7684\u6d88\u606f\u65e0\u6cd5\u6536\u5230\\n- \u65e0\u6cd5\u786e\u4fdd\u6d88\u606f\u7684\u9001\u8fbe\\n- \u4e0d\u80fd\u591a\u6b21\u6d88\u8d39\\n\\n> \u5bf9\u6d88\u606f\u4f20\u9012\u6709\u8981\u6c42\u7684\u573a\u666f\u8fd8\u662f\u8001\u8001\u5b9e\u5b9e\u53bb\u7528\u4f20\u7edf\u7684 MQ \u5427\u3002\\n\\n## \u547d\u4ee4\\n\\n\u53d1\u5e03\u8ba2\u9605\u6a21\u5f0f\u63d0\u4f9b\u4e86 6 \u79cd\u64cd\u4f5c\u547d\u4ee4\u3002\\n\\n### \u8ba2\u9605\\n\\n#### PSUBSCRIBE\\n\\n`PSUBSCRIBE pattern [pattern ...]`\\n\\n\u8ba2\u9605\u4e00\u4e2a\u6216\u591a\u4e2a\u7b26\u5408\u7ed9\u5b9a\u6a21\u5f0f\uff08\u6b63\u5219\u8868\u8fbe\u5f0f\uff09\u7684\u9891\u9053\u3002\\n\\n#### SUBSCRIBE\\n\\n`SUBSCRIBE channel [channel ...]`\\n\\n\u8ba2\u9605\u7ed9\u5b9a\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u9891\u9053\u7684\u4fe1\u606f\u3002\\n\\n### \u53d1\u5e03\\n\\n#### PUBLISH\\n\\n`PUBLISH channel message`\\n\\n\u5c06\u4fe1\u606f\u53d1\u9001\u5230\u6307\u5b9a\u7684\u9891\u9053\u3002\\n\\n### \u9000\u8ba2\\n\\n#### PUNSUBSCRIBE\\n\\n`PUNSUBSCRIBE [pattern [pattern ...]]`\\n\\n\u9000\u8ba2\u7ed9\u5b9a\u6a21\u5f0f\uff08\u6b63\u5219\u8868\u8fbe\u5f0f\uff09\u7684\u9891\u9053\uff0c\u65e0\u53c2\u5219\u9000\u8ba2\u5168\u90e8\u3002\\n\\n#### UNSUBSCRIBE\\n\\n`UNSUBSCRIBE [channel [channel ...]]`\\n\\n\u9000\u8ba2\u7ed9\u5b9a\u7684\u9891\u9053\u3002\\n\\n### \u72b6\u6001\\n\\n#### PUBSUB\\n\\n`PUBSUB subcommand [argument [argument ...]]`\\n\\n\u67e5\u770b\u8ba2\u9605\u4e0e\u53d1\u5e03\u7cfb\u7edf\u72b6\u6001\\n\\n`PUBSUB CHANNELS [pattern]`\\n\\n\u5217\u51fa\u5f53\u524d\u6d3b\u52a8\u7684\u901a\u9053\u3002\u6d3b\u52a8\u901a\u9053\u662f\u5e26\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u8ba2\u9605\u8005\uff08\u4e0d\u5305\u62ec\u8ba2\u9605\u6a21\u5f0f\u7684\u5ba2\u6237\u7aef\uff09\u7684\u53d1\u5e03/\u8ba2\u9605\u901a\u9053\u3002\\n\\n`PUBSUB NUMSUB [channel-1 ... channel-N]`\\n\\n\u8fd4\u56de\u6307\u5b9a\u901a\u9053\u7684\u8ba2\u9605\u65b9\u6570\u91cf\uff08\u4e0d\u5305\u62ec\u8ba2\u9605\u6a21\u5f0f\u7684\u5ba2\u6237\u7aef\uff09\u3002\\n\\n`PUBSUB NUMPAT`\\n\\n\u8fd4\u56de\u6a21\u5f0f\u7684\u8ba2\u9605\u6570\u91cf\uff08\u4f7f\u7528 PSUBSCRIBE \u547d\u4ee4\u6267\u884c\uff09\u3002\u8bf7\u6ce8\u610f\uff0c\u8fd9\u4e0d\u4ec5\u662f\u8ba2\u9605\u6a21\u5f0f\u7684\u5ba2\u6237\u7aef\u6570\u91cf\uff0c\u800c\u4e14\u662f\u6240\u6709\u5ba2\u6237\u7aef\u8ba2\u9605\u6a21\u5f0f\u7684\u603b\u6570\u3002\\n\\n## \u5f00\u542f\u4e8b\u4ef6\u901a\u77e5\\n\\n\u8981\u4f7f\u7528\u53d1\u5e03\u8ba2\u9605\u6a21\u5f0f\uff0c\u9700\u8981\u5f00\u542f\u4e8b\u4ef6\u901a\u77e5\uff0c\u5373\u9700\u8981\u8bbe\u5b9a`notify-keyspace-events`\u53c2\u6570\uff0c\u7c7b\u578b\u662f`string`\u7684\uff08\u8bb0\u5f97\u6539\u914d\u7f6e\u6587\u4ef6\u65f6\u4fdd\u6301\u5f15\u53f7\uff0c\u547d\u4ee4\u884c\u4e0d\u9700\u8981\u5f15\u53f7\uff09\uff0c\u9ed8\u8ba4\u662f\u7a7a\u5b57\u7b26\u4e32\u3002\\n\\n`notify-keyspace-events`\u6709\u4ee5\u4e0b\u53c2\u6570\uff08\u57fa\u4e8e Redis 6.0.5\uff09\uff1a\\n\\n- `K`\uff1a\u952e\u7a7a\u95f4\u4e8b\u4ef6\uff0c\u4f7f\u7528`keyspace@<db>` \u524d\u7f00\u53d1\u5e03\\n- `E`\uff1a\u952e\u7a7a\u95f4\u4e8b\u4ef6\uff0c\u4f7f\u7528`keyevent@<db>` \u524d\u7f00\u53d1\u5e03\\n- `g`\uff1a\u6cdb\u578b\u547d\u4ee4\uff08\u975e\u7c7b\u578b\u7279\u5b9a\uff09\uff0c\u5982`DEL`\u3001`EXPIRE`\u3001`RENAME`\\n- `$`\uff1aString \u547d\u4ee4\\n- `l`\uff1aList \u547d\u4ee4\\n- `s`\uff1aSet \u547d\u4ee4\\n- `h`\uff1aHash \u547d\u4ee4\\n- `z`\uff1aSortedSet \u547d\u4ee4\\n- `x`\uff1a\u8fc7\u671f\u4e8b\u4ef6\uff0c\u6bcf\u6b21\u952e\u8fc7\u671f\u65f6\u751f\u6210\u7684\u4e8b\u4ef6\\n- `e`\uff1a\u9a71\u9010\u4e8b\u4ef6\uff0c\u7531\u4e8e\u952e\u8fbe\u5230 max memory \u800c\u751f\u6210\u7684\u9a71\u9010\u4e8b\u4ef6\\n- `t`\uff1aStream \u547d\u4ee4\\n- `m`\uff1a\u952e\u9519\u8fc7\u4e8b\u4ef6\uff08key-miss event\uff09\uff0c\u6ce8\u610f\uff1a\u5b83\u4e0d\u5305\u62ec\u5728`A`\u4e2d\\n- `A`\uff1a`g$lshzxet`\u7684\u522b\u540d\uff0c\u6240\u4ee5`AKE`\u5c31\u4ee3\u8868\u4e86\u6240\u6709\u4e8b\u4ef6\uff08\u9664\u4e86\u56e0\u5176\u72ec\u7279\u7684\u6027\u8d28\u800c\u88ab\u6392\u9664\u5728`A`\u4e4b\u5916\u7684\u5173\u952e\u9057\u6f0f\u4e8b\u4ef6\uff09\\n\\n> \u521d\u89c1`key-miss event`\u6ca1\u53cd\u5e94\u8fc7\u6765\u662f\u6307\u7684\u4ec0\u4e48\uff0c\u540e\u6765\u624d\u660e\u767d\uff0c\u662f\u8bbf\u95ee\u7684 key \u4e0d\u5728 Redis \u65f6\u89e6\u53d1\u7684\u4e8b\u4ef6\u3002\\n\\n## \u5b9e\u6218\\n\\n1. \u5f00\u542f\u4e8b\u4ef6\u901a\u77e5\\n\\n   ```shell\\n   > redis-cli config set notify-keyspace-events KEAm\\n   OK\\n   ```\\n\\n   > `m`\u5728 Redis 6 \u4ee5\u4e0a\u624d\u652f\u6301\\n\\n2. \u8ba2\u9605\u9891\u9053\\n\\n   ```shell\\n   > redis-cli psubscribe *\\n   Reading messages... (press Ctrl-C to quit)\\n   1) \\"subscribe\\"\\n   2) \\"test\\"\\n   3) (integer) 1\\n   ```\\n\\n3. \u64cd\u4f5c\\n\\n   \u64cd\u4f5c\u5185\u5bb9\uff1a\\n\\n   ```shell\\n   > redis-cli publish test testp\\n   (integer) 1\\n   > redis-cli set a hello\\n   OK\\n   > redis-cli get b\\n   (nil)\\n   > redis-cli set c hello EX 2\\n   OK\\n   \\n   ```\\n\\n   \u8ba2\u9605\u7a97\u53e3\uff1a\\n\\n   ```shell\\n   > redis-cli psubscribe *\\n   Reading messages... (press Ctrl-C to quit)\\n   1) \\"psubscribe\\"\\n   2) \\"*\\"\\n   3) (integer) 1\\n   # redis-cli publish test testp\\n   1) \\"pmessage\\"\\n   2) \\"*\\"\\n   3) \\"test\\"\\n   4) \\"testp\\"\\n   # redis-cli set a hello\\n   1) \\"pmessage\\"\\n   2) \\"*\\"\\n   3) \\"__keyspace@0__:a\\"\\n   4) \\"set\\"\\n   1) \\"pmessage\\"\\n   2) \\"*\\"\\n   3) \\"__keyevent@0__:set\\"\\n   4) \\"a\\"\\n   # redis-cli get b\\n   1) \\"pmessage\\"\\n   2) \\"*\\"\\n   3) \\"__keyspace@0__:b\\"\\n   4) \\"keymiss\\"\\n   1) \\"pmessage\\"\\n   2) \\"*\\"\\n   3) \\"__keyevent@0__:keymiss\\"\\n   4) \\"b\\"\\n   # redis-cli set c hello EX 2\\n   1) \\"pmessage\\"\\n   2) \\"*\\"\\n   3) \\"__keyspace@0__:c\\"\\n   4) \\"set\\"\\n   1) \\"pmessage\\"\\n   2) \\"*\\"\\n   3) \\"__keyevent@0__:set\\"\\n   4) \\"c\\"\\n   1) \\"pmessage\\"\\n   2) \\"*\\"\\n   3) \\"__keyspace@0__:c\\"\\n   4) \\"expire\\"\\n   1) \\"pmessage\\"\\n   2) \\"*\\"\\n   3) \\"__keyevent@0__:expire\\"\\n   4) \\"c\\"\\n   1) \\"pmessage\\"\\n   2) \\"*\\"\\n   3) \\"__keyspace@0__:c\\"\\n   4) \\"expired\\"\\n   1) \\"pmessage\\"\\n   2) \\"*\\"\\n   3) \\"__keyevent@0__:expired\\"\\n   4) \\"c\\"\\n   ```\\n\\n## \u4ee3\u7801\u5b9e\u73b0\\n\\n\u7528 Go \u6765\u5b9e\u73b0\u4e00\u4e2a\u4f8b\u5b50\u3002\\n\\n\u5148\u521d\u59cb\u5316\u5de5\u7a0b\uff0c\u5e76\u4e0b\u8f7d[go-redis](https://github.com/go-redis/redis \\"go-redis\\")\\n\\n```shell\\n> go mod init redis-robot\\ngo: creating new go.mod: module redis-robot\\n> go get github.com/go-redis/redis/v8\\n```\\n\\nmain.go\\n\\n```go\\n// Package main Nekobox69 Create at 2020-07-03 21:44\\npackage main\\n\\nimport (\\n\\t\\"log\\"\\n\\t\\"strings\\"\\n    \\"time\\"\\n\\n    \\"github.com/go-redis/redis/v8\\"\\n)\\n\\nconst channel = \\"test\\"\\n\\nfunc robot(client *redis.Client) {\\n\\tctx := client.Context()\\n\\n\\tsub := client.PSubscribe(ctx, channel)\\n\\tdefer sub.Close()\\n\\tfor {\\n\\t\\tmessage, err := sub.ReceiveMessage(ctx)\\n\\t\\tif nil != err {\\n\\t\\t\\tlog.Println(err.Error())\\n\\t\\t\\tcontinue\\n\\t\\t}\\n\\t\\tlog.Printf(\\"Receive: %+v\\\\n\\", *message)\\n\\t}\\n}\\n\\nfunc main() {\\n\\tclient := redis.NewClient(&redis.Options{\\n    Addr:     \\"localhost:6379\\",\\n\\t\\tPassword: \\"\\", // no password set\\n\\t\\tDB:       0,  // use default DB\\n\\t})\\n\\tctx := client.Context()\\n\\t_, err := client.Ping(ctx).Result()\\n\\tif nil != err {\\n\\t\\tlog.Fatal(err.Error())\\n\\t}\\n\\tgo robot(client)\\n\\tclient.Publish(ctx, channel, \\"hi\\")\\n\\ttime.Sleep(10*time.Second)\\n}\\n```"},{"id":"/NSQ\u57fa\u7840\u77e5\u8bc6","metadata":{"permalink":"/blog/tech/NSQ\u57fa\u7840\u77e5\u8bc6","source":"@site/tech/NSQ\u57fa\u7840\u77e5\u8bc6.md","title":"NSQ \u4ecb\u7ecd","description":"\u7ec4\u6210","date":"2020-07-02T12:33:17.000Z","formattedDate":"2020\u5e747\u67082\u65e5","tags":[{"label":"nsq","permalink":"/blog/tech/tags/nsq"},{"label":"mq","permalink":"/blog/tech/tags/mq"}],"readingTime":39.915,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["nsq","mq"]},"prevItem":{"title":"Redis \u53d1\u5e03\u8ba2\u9605\u6a21\u5f0f","permalink":"/blog/tech/Redis\u53d1\u5e03\u8ba2\u9605\u6a21\u5f0f"},"nextItem":{"title":"Gogs \u5728 Docker \u4e0b\u7684\u90e8\u7f72","permalink":"/blog/tech/Gogs\u5728Docker\u4e0b\u7684\u90e8\u7f72"}},"content":"\u7ec4\u6210\\n\\n- nsqlookupd\\n- nsqd\\n- nsqadmin\\n\\nNSQ \u662f\u4e00\u4e2a\u5b9e\u65f6\u5206\u5e03\u5f0f\u6d88\u606f\u4f20\u9012\u5e73\u53f0\u3002\\n\\n## \u529f\u80fd\\n\\n- \u652f\u6301\u6ca1\u6709 SPOF \u7684\u5206\u5e03\u5f0f\u62d3\u6251\\n- \u53ef\u6c34\u5e73\u6269\u5c55\uff08\u65e0\u4ee3\u7406\uff0c\u65e0\u7f1d\u5730\u5411\u96c6\u7fa4\u6dfb\u52a0\u66f4\u591a\u8282\u70b9\uff09\\n- \u57fa\u4e8e\u4f4e\u5ef6\u8fdf\u63a8\u9001\u7684\u6d88\u606f\u4f20\u9012\uff08\u6027\u80fd\uff09\\n- \u7ec4\u5408\u8d1f\u8f7d\u5747\u8861\u548c\u591a\u64ad\u6837\u5f0f\u6d88\u606f\u8def\u7531\\n- \u64c5\u957f\u6d41\u5a92\u4f53\uff08\u9ad8\u541e\u5410\u91cf\uff09\u548c\u9762\u5411\u5de5\u4f5c\uff08\u4f4e\u541e\u5410\u91cf\uff09\u5de5\u4f5c\u8d1f\u8f7d\\n- \u4e3b\u8981\u5728\u5185\u5b58\u4e2d\uff08\u8d85\u51fa\u9ad8\u6c34\u4f4d\u6807\u8bb0\u7684\u6d88\u606f\u900f\u660e\u5730\u4fdd\u5b58\u5728\u78c1\u76d8\u4e0a\uff09\\n- \u6d88\u8d39\u8005\u67e5\u627e\u751f\u4ea7\u8005\u7684\u8fd0\u884c\u65f6\u53d1\u73b0\u670d\u52a1\uff08nsqlookupd\uff09\\n- \u4f20\u8f93\u5c42\u5b89\u5168\u6027\uff08TLS\uff09\\n- \u6570\u636e\u683c\u5f0f\u4e0d\u53ef\u77e5\\n- \u51e0\u4e2a\u4f9d\u8d56\u9879\uff08\u6613\u4e8e\u90e8\u7f72\uff09\u548c\u4e00\u4e2a\u7406\u667a\uff0c\u6709\u754c\uff0c\u9ed8\u8ba4\u914d\u7f6e\\n- \u7b80\u5355\u7684 TCP \u534f\u8bae\uff0c\u652f\u6301\u4efb\u4f55\u8bed\u8a00\u7684\u5ba2\u6237\u7aef\u5e93\\n- \u7edf\u8ba1\u4fe1\u606f\uff0c\u7ba1\u7406\u64cd\u4f5c\u548c\u751f\u6210\u5668\u7684 HTTP \u63a5\u53e3\uff08\u65e0\u9700\u53d1\u5e03\u5ba2\u6237\u7aef\u5e93\uff09\\n- \u4e0e statsd \u96c6\u6210\u7528\u4e8e\u5b9e\u65f6\u4eea\u5668\\n- \u5f3a\u5927\u7684\u96c6\u7fa4\u7ba1\u7406\u754c\u9762\uff08nsqadmin\uff09\\n\\n## \u4fdd\u969c\\n\\n\u4fdd\u8bc1\u4e0e\u4efb\u4f55\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e00\u6837\uff0c\u5b9e\u73b0\u76ee\u6807\u662f\u8fdb\u884c\u667a\u80fd\u6743\u8861\u3002 \u901a\u8fc7\u5bf9\u8fd9\u4e9b\u6743\u8861\u7684\u5b9e\u9645\u60c5\u51b5\u4fdd\u6301\u900f\u660e\uff0c\u6211\u4eec\u5e0c\u671b\u5bf9 NSQ \u5728\u751f\u4ea7\u4e2d\u90e8\u7f72\u65f6\u7684\u884c\u4e3a\u6709\u6240\u671f\u5f85\u3002\\n\\n- \u6d88\u606f\u4e0d\u8010\u7528\uff08\u9ed8\u8ba4\uff09\\n  \u867d\u7136\u7cfb\u7edf\u652f\u6301\u201c\u91ca\u653e\u9600\u201d\uff08--mem-queue-size\uff09\uff0c\u7136\u540e\u6d88\u606f\u5c06\u900f\u660e\u5730\u4fdd\u5b58\u5728\u78c1\u76d8\u4e0a\uff0c\u4f46\u5b83\u4e3b\u8981\u662f\u5185\u5b58\u4e2d\u7684\u6d88\u606f\u4f20\u9012\u5e73\u53f0\u3002\\n  --mem-queue-size \u53ef\u4ee5\u8bbe\u7f6e\u4e3a 0\uff0c\u4ee5\u786e\u4fdd\u6240\u6709\u4f20\u5165\u7684\u6d88\u606f\u90fd\u6301\u4e45\u4fdd\u5b58\u5230\u78c1\u76d8\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u8282\u70b9\u53d1\u751f\u6545\u969c\uff0c\u60a8\u53ef\u80fd\u4f1a\u51cf\u5c11\u6545\u969c\u8868\u9762\uff08\u5373 OS \u6216\u5e95\u5c42 IO \u5b50\u7cfb\u7edf\u53d1\u751f\u6545\u969c\uff09\u3002\\n  \u6ca1\u6709\u5185\u7f6e\u590d\u5236\u3002 \u4f46\u662f\uff0c\u7ba1\u7406\u8fd9\u79cd\u6743\u8861\u7684\u65b9\u5f0f\u6709\u591a\u79cd\uff0c\u4f8b\u5982\u90e8\u7f72\u62d3\u6251\u548c\u6280\u672f\uff0c\u5b83\u4eec\u4ee5\u5bb9\u9519\u7684\u65b9\u5f0f\u4e3b\u52a8\u5730\u5c06\u4e3b\u9898\u4ece\u4e3b\u673a\u5e76\u6301\u4e45\u5316\u5230\u78c1\u76d8\u3002\\n- \u6d88\u606f\u81f3\u5c11\u4f20\u9012\u4e00\u6b21\\n  \u7531\u4e8e\u5404\u79cd\u539f\u56e0\uff0c\u53ef\u4ee5\u591a\u6b21\u4f20\u9012\u6d88\u606f\uff08\u5ba2\u6237\u7aef\u8d85\u65f6\uff0c\u65ad\u5f00\u8fde\u63a5\uff0c\u91cd\u65b0\u6392\u961f\u7b49\uff09\u3002 \u5ba2\u6237\u6709\u8d23\u4efb\u6267\u884c\u5e42\u7b49\u64cd\u4f5c\u6216\u91cd\u590d\u6570\u636e\u5220\u9664\u3002\\n- \u6d88\u606f\u672a\u6392\u5e8f\\n  \u4e0d\u80fd\u4f9d\u8d56\u4f20\u9012\u7ed9\u6d88\u8d39\u8005\u7684\u6d88\u606f\u987a\u5e8f\u3002\\n  \u4e0e\u6d88\u606f\u4f20\u9012\u8bed\u4e49\u7c7b\u4f3c\uff0c\u8fd9\u662f\u91cd\u65b0\u961f\u5217\u7684\u7ed3\u679c\uff0c\u5185\u5b58\u548c\u78c1\u76d8\u5b58\u50a8\u7684\u7ec4\u5408\uff0c\u4ee5\u53ca\u6bcf\u4e2a nsqd \u8282\u70b9\u4e0d\u5171\u4eab\u7684\u4e8b\u5b9e\u3002\\n  \u901a\u8fc7\u5728\u6d88\u8d39\u8005\u4e2d\u5f15\u5165\u4e00\u4e2a\u5ef6\u8fdf\u7a97\u53e3\u6765\u63a5\u53d7\u6d88\u606f\u5e76\u5728\u5904\u7406\u4e4b\u524d\u5bf9\u5b83\u4eec\u8fdb\u884c\u6392\u5e8f\uff08\u4f46\u662f\uff0c\u4e3a\u4e86\u7ed9\u5b9a\u4e49\u7684\u6d88\u8d39\u8005\u5b83\u7684\u6d88\u606f\u662f\u6709\u5e8f\u7684\u800c\u4e0d\u662f\u5728\u6574\u4e2a\u96c6\u7fa4\u4e2d\u6392\u5e8f\uff09\u662f\u76f8\u5bf9\u7b80\u5355\u7684\u3002 \u4fdd\u7559\u8fd9\u4e2a\u4e0d\u53d8\u91cf\u5fc5\u987b\u4e22\u5f03\u843d\u5728\u8be5\u7a97\u53e3\u4e4b\u5916\u7684\u6d88\u606f\uff09\u3002\\n- \u6d88\u8d39\u8005\u6700\u7ec8\u627e\u5230\u6240\u6709\u4e3b\u9898\u751f\u4ea7\u8005\\n  \u53d1\u73b0\u670d\u52a1\uff08nsqlookupd\uff09\u65e8\u5728\u6700\u7ec8\u4fdd\u6301\u4e00\u81f4\u3002 nsqlookupd \u8282\u70b9\u4e0d\u534f\u8c03\u4ee5\u7ef4\u62a4\u72b6\u6001\u6216\u56de\u7b54\u67e5\u8be2\u3002\\n  \u5728\u5206\u533a\u7684\u4e24\u7aef\u4ecd\u7136\u53ef\u4ee5\u56de\u7b54\u67e5\u8be2\u7684\u610f\u4e49\u4e0a\uff0c\u7f51\u7edc\u5206\u533a\u4e0d\u4f1a\u5f71\u54cd\u53ef\u7528\u6027\u3002 \u90e8\u7f72\u62d3\u6251\u5177\u6709\u51cf\u8f7b\u8fd9\u4e9b\u7c7b\u578b\u95ee\u9898\u7684\u6700\u91cd\u8981\u5f71\u54cd\u3002\\n\\n## \u8bbe\u8ba1\\n\\nNSQ \u662f simplequeue\uff08simplehttp \u7684\u4e00\u90e8\u5206\uff09\u7684\u7ee7\u627f\u8005\uff0c\u56e0\u6b64\u8bbe\u8ba1\u4e3a\uff08\u6ca1\u6709\u7279\u5b9a\u7684\u987a\u5e8f\uff09\uff1a\\n\\n- \u652f\u6301\u62d3\u6251\uff0c\u5b9e\u73b0\u9ad8\u53ef\u7528\u6027\u5e76\u6d88\u9664 SPOF\\n- \u89e3\u51b3\u4e86\u5bf9\u66f4\u5f3a\u5927\u7684\u6d88\u606f\u4f20\u9012\u4fdd\u8bc1\u7684\u9700\u6c42\\n- \u9650\u5236\u5355\u4e2a\u8fdb\u7a0b\u7684\u5185\u5b58\u5360\u7528\uff08\u901a\u8fc7\u5c06\u67d0\u4e9b\u6d88\u606f\u4fdd\u5b58\u5230\u78c1\u76d8\uff09\\n- \u5927\u5927\u7b80\u5316\u4e86\u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u7684\u914d\u7f6e\u8981\u6c42\\n- \u63d0\u4f9b\u7b80\u5355\u7684\u5347\u7ea7\u9014\u5f84\\n- \u63d0\u9ad8\u6548\u7387\\n\\n### \u7b80\u5316\u914d\u7f6e\u548c\u7ba1\u7406\\n\\n\u5355\u4e2a nsqd \u5b9e\u4f8b\u65e8\u5728\u4e00\u6b21\u5904\u7406\u591a\u4e2a\u6570\u636e\u6d41\u3002 \u6d41\u79f0\u4e3a\u201c\u4e3b\u9898\u201d\uff0c\u4e3b\u9898\u5177\u6709 1 \u4e2a\u6216\u591a\u4e2a\u201c\u901a\u9053\u201d\u3002 \u6bcf\u4e2a\u9891\u9053\u90fd\u4f1a\u6536\u5230\u4e3b\u9898\u6240\u6709\u6d88\u606f\u7684\u526f\u672c\u3002 \u5b9e\u9645\u4e0a\uff0c\u901a\u9053\u6620\u5c04\u5230\u6d88\u8017\u4e3b\u9898\u7684\u4e0b\u6e38\u670d\u52a1\u3002\\n\\n\u4e3b\u9898\u548c\u6e20\u9053\u6ca1\u6709\u5148\u9a8c\u914d\u7f6e\u3002 \u901a\u8fc7\u53d1\u5e03\u5230\u547d\u540d\u4e3b\u9898\u6216\u901a\u8fc7\u8ba2\u9605\u547d\u540d\u4e3b\u9898\u4e0a\u7684\u901a\u9053\u6765\u9996\u6b21\u4f7f\u7528\u65f6\u521b\u5efa\u4e3b\u9898\u3002 \u9996\u6b21\u4f7f\u7528\u65f6\uff0c\u901a\u8fc7\u8ba2\u9605\u6307\u5b9a\u7684\u9891\u9053\u521b\u5efa\u9891\u9053\u3002\\n\\n\u4e3b\u9898\u548c\u901a\u9053\u90fd\u76f8\u4e92\u72ec\u7acb\u5730\u7f13\u51b2\u6570\u636e\uff0c\u9632\u6b62\u7f13\u6162\u7684\u6d88\u8d39\u8005\u5bfc\u81f4\u5176\u4ed6\u6e20\u9053\u7684\u79ef\u538b\uff08\u540c\u6837\u9002\u7528\u4e8e\u4e3b\u9898\u7ea7\u522b\uff09\u3002\\n\\n\u901a\u9053\u53ef\u4ee5\u5e76\u4e14\u901a\u5e38\u4e5f\u4f1a\u8fde\u63a5\u591a\u4e2a\u5ba2\u6237\u7aef\u3002 \u5047\u8bbe\u6240\u6709\u8fde\u63a5\u7684\u5ba2\u6237\u7aef\u90fd\u5904\u4e8e\u51c6\u5907\u63a5\u6536\u6d88\u606f\u7684\u72b6\u6001\uff0c\u5219\u6bcf\u6761\u6d88\u606f\u5c06\u88ab\u4f20\u9012\u5230\u968f\u673a\u5ba2\u6237\u7aef\u3002 \u4f8b\u5982\uff1a\\n\\n![img](https://cdn.nlark.com/yuque/0/2019/gif/402881/1563258536398-eda18d05-0db6-43aa-9658-7867ac01800a.gif)\\n\\n\u603b\u800c\u8a00\u4e4b\uff0c\u6d88\u606f\u662f\u4ece\u4e3b\u9898 - >\u901a\u9053\uff08\u6bcf\u4e2a\u901a\u9053\u63a5\u6536\u8be5\u4e3b\u9898\u7684\u6240\u6709\u6d88\u606f\u7684\u526f\u672c\uff09\u591a\u64ad\u7684\uff0c\u4f46\u662f\u4ece\u901a\u9053 - >\u6d88\u8d39\u8005\u5747\u5300\u5206\u5e03\uff08\u6bcf\u4e2a\u6d88\u8d39\u8005\u63a5\u6536\u8be5\u901a\u9053\u7684\u4e00\u90e8\u5206\u6d88\u606f\uff09\u3002\\n\\nNSQ \u8fd8\u5305\u62ec\u4e00\u4e2a\u8f85\u52a9\u5e94\u7528\u7a0b\u5e8f nsqlookupd\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u76ee\u5f55\u670d\u52a1\uff0c\u6d88\u8d39\u8005\u53ef\u4ee5\u5728\u5176\u4e2d\u67e5\u627e\u63d0\u4f9b\u4ed6\u4eec\u6709\u5174\u8da3\u8ba2\u9605\u7684\u4e3b\u9898\u7684 nsqd \u5b9e\u4f8b\u7684\u5730\u5740\u3002 \u5728\u914d\u7f6e\u65b9\u9762\uff0c\u8fd9\u5c06\u6d88\u8d39\u8005\u4e0e\u751f\u4ea7\u8005\u5206\u79bb\uff08\u4ed6\u4eec\u90fd\u53ea\u9700\u8981\u77e5\u9053\u5728\u54ea\u91cc\u8054\u7cfb nsqlookupd \u7684\u5e38\u89c1\u5b9e\u4f8b\uff0c\u4ece\u4e0d\u76f8\u4e92\u8054\u7cfb\uff09\uff0c\u4ece\u800c\u964d\u4f4e\u4e86\u590d\u6742\u6027\u548c\u7ef4\u62a4\u3002\\n\\n\u5728\u8f83\u4f4e\u7ea7\u522b\uff0c\u6bcf\u4e2a nsqd \u5177\u6709\u4e0e nsqlookupd \u7684\u957f\u671f TCP \u8fde\u63a5\uff0c\u5728\u8be5\u8fde\u63a5\u4e0a\u5b83\u5b9a\u671f\u63a8\u9001\u5176\u72b6\u6001\u3002 \u6b64\u6570\u636e\u7528\u4e8e\u901a\u77e5 nsqlookupd \u5c06\u4e3a\u6d88\u8d39\u8005\u63d0\u4f9b\u54ea\u4e9b nsqd \u5730\u5740\u3002 \u5bf9\u4e8e\u6d88\u8d39\u8005\uff0c\u5c06\u516c\u5f00 HTTP `/lookup` \u7aef\u70b9\u4ee5\u8fdb\u884c\u8f6e\u8be2\u3002\\n\\n\u8981\u5f15\u5165\u4e3b\u9898\u7684\u65b0\u7684\u4e0d\u540c\u4f7f\u7528\u8005\uff0c\u53ea\u9700\u542f\u52a8\u914d\u7f6e\u4e86 nsqlookupd \u5b9e\u4f8b\u7684\u5730\u5740\u7684 NSQ \u5ba2\u6237\u7aef\u3002 \u6dfb\u52a0\u65b0\u7684\u4f7f\u7528\u8005\u6216\u65b0\u53d1\u5e03\u8005\u4e0d\u9700\u8981\u8fdb\u884c\u4efb\u4f55\u914d\u7f6e\u66f4\u6539\uff0c\u4ece\u800c\u5927\u5927\u964d\u4f4e\u4e86\u5f00\u9500\u548c\u590d\u6742\u6027\u3002\\n\\n\u6ce8\u610f\uff1a\u5728\u5c06\u6765\u7684\u7248\u672c\u4e2d\uff0c\u542f\u53d1\u5f0f nsqlookupd \u7528\u4e8e\u8fd4\u56de\u5730\u5740\u53ef\u4ee5\u57fa\u4e8e\u6df1\u5ea6\uff0c\u8fde\u63a5\u7684\u5ba2\u6237\u7aef\u6570\u91cf\u6216\u5176\u4ed6\u201c\u667a\u80fd\u201d\u7b56\u7565\u3002 \u76ee\u524d\u7684\u5b9e\u65bd\u5c31\u662f\u5168\u90e8\u3002 \u6700\u7ec8\uff0c\u76ee\u6807\u662f\u786e\u4fdd\u6240\u6709\u751f\u4ea7\u8005\u90fd\u88ab\u9605\u8bfb\uff0c\u4f7f\u6df1\u5ea6\u4fdd\u6301\u63a5\u8fd1\u96f6\u3002\\n\\n\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0cnsqd \u548c nsqlookupd \u5b88\u62a4\u8fdb\u7a0b\u65e8\u5728\u72ec\u7acb\u8fd0\u884c\uff0c\u4e0d\u9700\u8981\u5144\u5f1f\u4e4b\u95f4\u7684\u901a\u4fe1\u6216\u534f\u8c03\u3002\\n\\n\u6211\u4eec\u8fd8\u8ba4\u4e3a\uff0c\u6709\u4e00\u79cd\u65b9\u6cd5\u53ef\u4ee5\u96c6\u4e2d\u67e5\u770b\uff0c\u5185\u7701\u548c\u7ba1\u7406\u96c6\u7fa4\u3002 \u6211\u4eec\u5efa\u7acb\u4e86 nsqadmin \u6765\u505a\u5230\u8fd9\u4e00\u70b9\u3002 \u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a Web UI \u6765\u6d4f\u89c8\u4e3b\u9898/\u6e20\u9053/\u6d88\u8d39\u8005\u7684\u5c42\u6b21\u7ed3\u6784\uff0c\u5e76\u68c0\u67e5\u6bcf\u4e2a\u5c42\u7684\u6df1\u5ea6\u548c\u5176\u4ed6\u5173\u952e\u7edf\u8ba1\u6570\u636e\u3002 \u6b64\u5916\uff0c\u5b83\u8fd8\u652f\u6301\u4e00\u4e9b\u7ba1\u7406\u547d\u4ee4\uff0c\u4f8b\u5982\u5220\u9664\u548c\u6e05\u7a7a\u901a\u9053\uff08\u5f53\u901a\u9053\u4e2d\u7684\u6d88\u606f\u53ef\u4ee5\u5b89\u5168\u5730\u4e22\u5f03\u4ee5\u4fbf\u5c06\u6df1\u5ea6\u6062\u590d\u4e3a 0 \u65f6\uff0c\u8fd9\u662f\u4e00\u4e2a\u6709\u7528\u7684\u5de5\u5177\uff09\u3002\\n\\n### \u7b80\u5355\u7684\u5347\u7ea7\u8def\u5f84\\n\\n\u8fd9\u662f\u6211\u4eec\u7684\u6700\u9ad8\u4f18\u5148\u4e8b\u9879\u4e4b\u4e00\u3002 \u6211\u4eec\u7684\u751f\u4ea7\u7cfb\u7edf\u5904\u7406\u5927\u91cf\u6d41\u91cf\uff0c\u6240\u6709\u6d41\u91cf\u90fd\u5efa\u7acb\u5728\u6211\u4eec\u73b0\u6709\u7684\u6d88\u606f\u4f20\u9012\u5de5\u5177\u4e4b\u4e0a\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4e00\u79cd\u65b9\u6cd5\u6765\u7f13\u6162\u800c\u6709\u6761\u4e0d\u7d0a\u5730\u5347\u7ea7\u57fa\u7840\u67b6\u6784\u7684\u7279\u5b9a\u90e8\u5206\uff0c\u51e0\u4e4e\u6ca1\u6709\u5f71\u54cd\u3002\\n\\n\u9996\u5148\uff0c\u5728\u6d88\u606f\u751f\u4ea7\u8005\u65b9\u9762\uff0c\u6211\u4eec\u6784\u5efa\u4e86 nsqd \u6765\u5339\u914d simplequeue\u3002 \u5177\u4f53\u6765\u8bf4\uff0cnsqd \u5c06 HTTP `/put` \u7aef\u70b9\uff08\u5c31\u50cf simplequeue \u4e00\u6837\uff09\u66b4\u9732\u7ed9 POST \u4e8c\u8fdb\u5236\u6570\u636e\uff08\u6709\u4e00\u70b9\u9700\u8981\u6ce8\u610f\uff0c\u7aef\u70b9\u9700\u8981\u53e6\u5916\u4e00\u4e2a\u6307\u5b9a\u201c\u4e3b\u9898\u201d\u7684\u67e5\u8be2\u53c2\u6570\uff09\u3002 \u60f3\u8981\u5207\u6362\u5230\u5f00\u59cb\u53d1\u5e03\u5230 nsqd \u7684\u670d\u52a1\u53ea\u9700\u8981\u8fdb\u884c\u5c11\u91cf\u7684\u4ee3\u7801\u66f4\u6539\u3002\\n\\n\u5176\u6b21\uff0c\u6211\u4eec\u5728 Python \u548c Go \u4e2d\u6784\u5efa\u4e86\u5e93\uff0c\u8fd9\u4e9b\u5e93\u4e0e\u6211\u4eec\u73b0\u6709\u5e93\u4e2d\u4e60\u60ef\u4f7f\u7528\u7684\u529f\u80fd\u548c\u4e60\u60ef\u76f8\u5339\u914d\u3002 \u901a\u8fc7\u5c06\u4ee3\u7801\u66f4\u6539\u9650\u5236\u4e3a\u5f15\u5bfc\uff0c\u8fd9\u7b80\u5316\u4e86\u6d88\u606f\u4f7f\u7528\u8005\u65b9\u9762\u7684\u8f6c\u6362\u3002 \u6240\u6709\u4e1a\u52a1\u903b\u8f91\u90fd\u4fdd\u6301\u4e0d\u53d8\u3002\\n\\n\u6700\u540e\uff0c\u6211\u4eec\u6784\u5efa\u4e86\u5b9e\u7528\u7a0b\u5e8f\u6765\u5c06\u65b0\u65e7\u7ec4\u4ef6\u7c98\u5408\u5728\u4e00\u8d77\u3002 \u8fd9\u4e9b\u90fd\u53ef\u4ee5\u5728\u5b58\u50a8\u5e93\u7684 examples \u76ee\u5f55\u4e2d\u627e\u5230\uff1a\\n\\n- nsq_pubsub - \u5c06\u7c7b\u4f3c HTTP \u63a5\u53e3\u7684 pubsub \u66b4\u9732\u7ed9 NSQ \u96c6\u7fa4\u4e2d\u7684\u4e3b\u9898\\n- nsq_to_file - \u5c06\u7ed9\u5b9a\u4e3b\u9898\u7684\u6240\u6709\u6d88\u606f\u6c38\u4e45\u5199\u5165\u6587\u4ef6\\n- nsq_to_http - \u5bf9\u4e3b\u9898\u4e2d\u7684\u6240\u6709\u6d88\u606f\u6267\u884c HTTP \u8bf7\u6c42\u5230\uff08\u591a\u4e2a\uff09\u7aef\u70b9\\n\\n### \u6d88\u9664 SPOF\\n\\nNSQ \u65e8\u5728\u4ee5\u5206\u5e03\u5f0f\u65b9\u5f0f\u4f7f\u7528\u3002 nsqd \u5ba2\u6237\u7aef\uff08\u901a\u8fc7 TCP\uff09\u8fde\u63a5\u5230\u63d0\u4f9b\u6307\u5b9a\u4e3b\u9898\u7684\u6240\u6709\u5b9e\u4f8b\u3002 \u6ca1\u6709\u4e2d\u95f4\u4eba\uff0c\u6ca1\u6709\u6d88\u606f\u7ecf\u7eaa\u4eba\uff0c\u4e5f\u6ca1\u6709 SPOF\uff1a\\n\\n![tumblr_mat85kr5td1qj3yp2.png](https://cdn.nlark.com/yuque/0/2019/png/402881/1563258635822-dcefdeda-b38f-4178-9e08-f5193deb5396.png)\\n\\n\u6b64\u62d3\u6251\u6d88\u9664\u4e86\u94fe\u63a5\u5355\u4e2a\u805a\u5408\u8ba2\u9605\u6e90\u7684\u9700\u8981\u3002 \u800c\u662f\u76f4\u63a5\u4ece\u6240\u6709\u751f\u4ea7\u8005\u6d88\u8d39\u3002 \u4ece\u6280\u672f\u4e0a\u8bb2\uff0c\u54ea\u4e2a\u5ba2\u6237\u7aef\u8fde\u63a5\u5230\u54ea\u4e2a NSQ \u5e76\u4e0d\u91cd\u8981\uff0c\u53ea\u8981\u6709\u8db3\u591f\u7684\u5ba2\u6237\u7aef\u8fde\u63a5\u5230\u6240\u6709\u751f\u4ea7\u8005\u4ee5\u6ee1\u8db3\u6d88\u606f\u91cf\uff0c\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u6240\u6709\u5ba2\u6237\u7aef\u6700\u7ec8\u90fd\u4f1a\u88ab\u5904\u7406\u3002\\n\\n\u5bf9\u4e8e nsqlookupd\uff0c\u901a\u8fc7\u8fd0\u884c\u591a\u4e2a\u5b9e\u4f8b\u6765\u5b9e\u73b0\u9ad8\u53ef\u7528\u6027\u3002 \u5b83\u4eec\u4e0d\u76f4\u63a5\u76f8\u4e92\u901a\u4fe1\uff0c\u6570\u636e\u88ab\u8ba4\u4e3a\u6700\u7ec8\u662f\u4e00\u81f4\u7684\u3002 \u6d88\u8d39\u8005\u8f6e\u8be2\u6240\u6709\u5df2\u914d\u7f6e\u7684 nsqlookupd \u5b9e\u4f8b\u5e76\u5c06\u54cd\u5e94\u8054\u5408\u8d77\u6765\u3002 \u9648\u65e7\uff0c\u4e0d\u53ef\u8bbf\u95ee\u6216\u5176\u4ed6\u6545\u969c\u8282\u70b9\u4e0d\u4f1a\u4f7f\u7cfb\u7edf\u505c\u6b62\u8fd0\u884c\u3002\\n\\n### \u6d88\u606f\u4f20\u9012\u4fdd\u8bc1\\n\\nNSQ \u4fdd\u8bc1\u6d88\u606f\u5c06\u81f3\u5c11\u4f20\u9001\u4e00\u6b21\uff0c\u5c3d\u7ba1\u53ef\u80fd\u5b58\u5728\u91cd\u590d\u6d88\u606f\u3002 \u6d88\u8d39\u8005\u5e94\u8be5\u671f\u5f85\u8fd9\u4e00\u70b9\u5e76\u91cd\u590d\u6570\u636e\u5220\u9664\u6216\u6267\u884c\u5e42\u7b49\u64cd\u4f5c\u3002\\n\\n\u6b64\u4fdd\u8bc1\u4f5c\u4e3a\u534f\u8bae\u7684\u4e00\u90e8\u5206\u5f3a\u5236\u6267\u884c\uff0c\u5176\u5de5\u4f5c\u65b9\u5f0f\u5982\u4e0b\uff08\u5047\u8bbe\u5ba2\u6237\u7aef\u5df2\u6210\u529f\u8fde\u63a5\u5e76\u8ba2\u9605\u4e86\u67d0\u4e2a\u4e3b\u9898\uff09\uff1a\\n\\n1. \u5ba2\u6237\u7aef\u8868\u793a\u4ed6\u4eec\u5df2\u51c6\u5907\u597d\u63a5\u6536\u6d88\u606f\\n2. NSQ \u53d1\u9001\u6d88\u606f\u5e76\u5728\u672c\u5730\u4e34\u65f6\u5b58\u50a8\u6570\u636e\uff08\u5728\u91cd\u65b0\u6392\u961f\u6216\u8d85\u65f6\u7684\u60c5\u51b5\u4e0b\uff09\\n3. \u5ba2\u6237\u7aef\u5206\u522b\u56de\u590d\u6307\u793a\u6210\u529f\u6216\u5931\u8d25\u7684 FIN\uff08\u5b8c\u6210\uff09\u6216 REQ\uff08\u91cd\u65b0\u6392\u961f\uff09\u3002 \u5982\u679c\u5ba2\u6237\u7aef\u6ca1\u6709\u56de\u590d NSQ \u5c06\u5728\u53ef\u914d\u7f6e\u7684\u6301\u7eed\u65f6\u95f4\u540e\u8d85\u65f6\u5e76\u81ea\u52a8\u91cd\u65b0\u6392\u961f\u6d88\u606f\uff09\\n\\n\u8fd9\u53ef\u786e\u4fdd\u5bfc\u81f4\u6d88\u606f\u4e22\u5931\u7684\u552f\u4e00\u8fb9\u7f18\u60c5\u51b5\u662f nsqd \u8fdb\u7a0b\u7684\u4e0d\u6b63\u5e38\u5173\u95ed\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5185\u5b58\u4e2d\u7684\u4efb\u4f55\u6d88\u606f\uff08\u6216\u4efb\u4f55\u672a\u5237\u65b0\u5230\u78c1\u76d8\u7684\u7f13\u51b2\u5199\u5165\uff09\u90fd\u5c06\u4e22\u5931\u3002\\n\\n\u5982\u679c\u9632\u6b62\u6d88\u606f\u4e22\u5931\u662f\u6700\u91cd\u8981\u7684\uff0c\u90a3\u4e48\u5373\u4f7f\u662f\u8fd9\u79cd\u8fb9\u7f18\u60c5\u51b5\u4e5f\u53ef\u4ee5\u51cf\u8f7b\u3002 \u4e00\u79cd\u89e3\u51b3\u65b9\u6848\u662f\u7ad9\u8d77\u6765\u63a5\u6536\u76f8\u540c\u90e8\u5206\u6d88\u606f\u526f\u672c\u7684\u5197\u4f59 nsqd \u5bf9\uff08\u5728\u4e0d\u540c\u7684\u4e3b\u673a\u4e0a\uff09\u3002 \u56e0\u4e3a\u60a8\u5df2\u7ecf\u5c06\u60a8\u7684\u6d88\u8d39\u8005\u7f16\u5199\u4e3a\u5e42\u7b49\u7684\uff0c\u6240\u4ee5\u5bf9\u8fd9\u4e9b\u6d88\u606f\u8fdb\u884c\u53cc\u500d\u65f6\u95f4\u6ca1\u6709\u4e0b\u6e38\u5f71\u54cd\uff0c\u5e76\u4e14\u5141\u8bb8\u7cfb\u7edf\u5728\u4e0d\u4e22\u5931\u6d88\u606f\u7684\u60c5\u51b5\u4e0b\u5fcd\u53d7\u4efb\u4f55\u5355\u4e2a\u8282\u70b9\u6545\u969c\u3002\\n\\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cNSQ \u63d0\u4f9b\u4e86\u6784\u5efa\u6a21\u5757\uff0c\u4ee5\u652f\u6301\u5404\u79cd\u751f\u4ea7\u7528\u4f8b\u548c\u53ef\u914d\u7f6e\u7684\u8010\u7528\u6027\u3002\\n\\n### \u6709\u9650\u7684\u5185\u5b58\u5360\u7528\\n\\nnsqd \u63d0\u4f9b\u4e86\u4e00\u4e2a\u914d\u7f6e\u9009\u9879--mem-queue-size\uff0c\u5b83\u5c06\u786e\u5b9a\u7ed9\u5b9a\u961f\u5217\u5728\u5185\u5b58\u4e2d\u4fdd\u7559\u7684\u6d88\u606f\u6570\u3002 \u5982\u679c\u961f\u5217\u7684\u6df1\u5ea6\u8d85\u8fc7\u6b64\u9608\u503c\uff0c\u5219\u6d88\u606f\u5c06\u900f\u660e\u5730\u5199\u5165\u78c1\u76d8\u3002 \u8fd9\u5c06\u7ed9\u5b9a nsqd \u8fdb\u7a0b\u7684\u5185\u5b58\u5360\u7528\u9650\u5236\u4e3a mem-queue-size \\\\* #\\\\_of_channels_and_topics\\n\\n![tumblr_mavte17V3t1qj3yp2.png](https://cdn.nlark.com/yuque/0/2019/png/402881/1563258655888-88847820-63eb-4cb3-a7c9-2acf37647542.png)\\n\\n\u6b64\u5916\uff0c\u7cbe\u660e\u7684\u89c2\u5bdf\u8005\u53ef\u80fd\u5df2\u7ecf\u786e\u5b9a\u8fd9\u662f\u901a\u8fc7\u5c06\u6b64\u503c\u8bbe\u7f6e\u4e3a\u4f4e\uff08\u4f8b\u5982 1 \u6216\u751a\u81f3 0\uff09\u6765\u83b7\u5f97\u66f4\u9ad8\u7684\u4ea4\u4ed8\u4fdd\u8bc1\u7684\u4fbf\u6377\u65b9\u5f0f\u3002 \u78c1\u76d8\u652f\u6301\u7684\u961f\u5217\u65e8\u5728\u7ecf\u53d7\u4e0d\u5e72\u51c0\u7684\u91cd\u542f\uff08\u5c3d\u7ba1\u6d88\u606f\u53ef\u80fd\u4f1a\u88ab\u4f20\u9012\u4e24\u6b21\uff09\u3002\\n\\n\u6b64\u5916\uff0c\u4e0e\u6d88\u606f\u4f20\u9012\u4fdd\u8bc1\u76f8\u5173\uff0c\u5e72\u51c0\u5173\u95ed\uff08\u901a\u8fc7\u5411 nsqd \u8fdb\u7a0b\u53d1\u9001 TERM \u4fe1\u53f7\uff09\u53ef\u4ee5\u5b89\u5168\u5730\u4fdd\u7559\u5f53\u524d\u5728\u5185\u5b58\u4e2d\uff0c\u4f20\u8f93\u4e2d\uff0c\u5ef6\u8fdf\u548c\u5404\u79cd\u5185\u90e8\u7f13\u51b2\u533a\u4e2d\u7684\u6d88\u606f\u3002\\n\\n\u6ce8\u610f\uff0c\u540d\u79f0\u4ee5\u5b57\u7b26\u4e32``#ephemeral`\u7ed3\u5c3e\u7684\u4e3b\u9898/\u9891\u9053\u4e0d\u4f1a\u7f13\u5b58\u5230\u78c1\u76d8\uff0c\u800c\u662f\u5728\u4f20\u9012 mem-queue-size \u540e\u4e22\u5f03\u6d88\u606f\u3002 \u8fd9\u4f7f\u5f97\u4e0d\u9700\u8981\u6d88\u606f\u4fdd\u8bc1\u7684\u6d88\u8d39\u8005\u80fd\u591f\u8ba2\u9605\u9891\u9053\u3002 \u5728\u6700\u540e\u4e00\u4e2a\u5ba2\u6237\u7aef\u65ad\u5f00\u8fde\u63a5\u540e\uff0c\u8fd9\u4e9b\u77ed\u6682\u7684\u901a\u9053\u4e5f\u5c06\u6d88\u5931\u3002 \u5bf9\u4e8e\u77ed\u6682\u7684\u4e3b\u9898\uff0c\u8fd9\u610f\u5473\u7740\u5df2\u7ecf\u521b\u5efa\uff0c\u4f7f\u7528\u548c\u5220\u9664\u4e86\u81f3\u5c11\u4e00\u4e2a\u9891\u9053\uff08\u901a\u5e38\u662f\u77ed\u6682\u7684\u9891\u9053\uff09\u3002\\n\\n### \u6548\u7387\\n\\nNSQ \u65e8\u5728\u901a\u8fc7\u201cmemcached-like\u201d\u547d\u4ee4\u534f\u8bae\u4e0e\u7b80\u5355\u7684\u5927\u5c0f\u524d\u7f00\u54cd\u5e94\u8fdb\u884c\u901a\u4fe1\u3002\u6240\u6709\u6d88\u606f\u6570\u636e\u90fd\u4fdd\u5b58\u5728\u6838\u5fc3\u4e2d\uff0c\u5305\u62ec\u5c1d\u8bd5\u6b21\u6570\uff0c\u65f6\u95f4\u6233\u7b49\u5143\u6570\u636e\u3002\u8fd9\u6d88\u9664\u4e86\u4ece\u670d\u52a1\u5668\u5230\u5ba2\u6237\u7aef\u6765\u56de\u590d\u5236\u6570\u636e\uff0c\u8fd9\u662f\u91cd\u65b0\u6392\u961f\u6d88\u606f\u65f6\u5148\u524d\u5de5\u5177\u94fe\u7684\u56fa\u6709\u5c5e\u6027\u3002\u8fd9\u4e5f\u7b80\u5316\u4e86\u5ba2\u6237\u7aef\uff0c\u56e0\u4e3a\u4ed6\u4eec\u4e0d\u518d\u9700\u8981\u8d1f\u8d23\u7ef4\u62a4\u6d88\u606f\u72b6\u6001\u3002\\n\\n\u6b64\u5916\uff0c\u901a\u8fc7\u964d\u4f4e\u914d\u7f6e\u590d\u6742\u6027\uff0c\u8bbe\u7f6e\u548c\u5f00\u53d1\u65f6\u95f4\u5927\u5927\u51cf\u5c11\uff08\u7279\u522b\u662f\u5728\u4e3b\u9898\u6709> 1 \u4e2a\u6d88\u8d39\u8005\u7684\u60c5\u51b5\u4e0b\uff09\u3002\\n\\n\u5bf9\u4e8e\u6570\u636e\u534f\u8bae\uff0c\u6211\u4eec\u505a\u51fa\u4e86\u4e00\u9879\u5173\u952e\u8bbe\u8ba1\u51b3\u7b56\uff0c\u901a\u8fc7\u5c06\u6570\u636e\u63a8\u9001\u5230\u5ba2\u6237\u7aef\u800c\u4e0d\u662f\u7b49\u5f85\u5b83\u6765\u63d0\u9ad8\u6027\u80fd\u548c\u541e\u5410\u91cf\u3002\u8fd9\u4e2a\u6982\u5ff5\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a RDY \u72b6\u6001\uff0c\u5b9e\u8d28\u4e0a\u662f\u5ba2\u6237\u7aef\u6d41\u63a7\u5236\u7684\u4e00\u79cd\u5f62\u5f0f\u3002\\n\\n\u5f53\u5ba2\u6237\u7aef\u8fde\u63a5\u5230 nsqd \u5e76\u8ba2\u9605\u67d0\u4e2a\u901a\u9053\u65f6\uff0c\u5b83\u5c06\u5904\u4e8e RDY \u72b6\u6001 0.\u8fd9\u610f\u5473\u7740\u4e0d\u4f1a\u5411\u5ba2\u6237\u7aef\u53d1\u9001\u4efb\u4f55\u6d88\u606f\u3002\u5f53\u5ba2\u6237\u7aef\u51c6\u5907\u597d\u63a5\u6536\u6d88\u606f\u65f6\uff0c\u5b83\u4f1a\u53d1\u9001\u4e00\u4e2a\u547d\u4ee4\uff0c\u5c06\u5176 RDY \u72b6\u6001\u66f4\u65b0\u4e3a\u51c6\u5907\u5904\u7406\u7684\u67d0\u4e9b\uff03\uff0c\u4f8b\u5982 100.\u6ca1\u6709\u4efb\u4f55\u5176\u4ed6\u547d\u4ee4\uff0c100 \u6761\u6d88\u606f\u5c06\u88ab\u63a8\u9001\u5230\u5ba2\u6237\u7aef\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ef\u7528\uff08\u6bcf\u6b21\u9012\u51cf\uff09\u8be5\u5ba2\u6237\u7aef\u7684\u670d\u52a1\u5668\u7aef RDY \u8ba1\u6570\uff09\u3002\\n\\n\u5ba2\u6237\u7aef\u5e93\u65e8\u5728\u53d1\u9001\u547d\u4ee4\u4ee5\u5728\u8fbe\u5230\u53ef\u914d\u7f6e\u7684`max-in-flight`\u8bbe\u7f6e\u7684~25\uff05\u65f6\u66f4\u65b0 RDY \u8ba1\u6570\uff08\u5e76\u6b63\u786e\u8003\u8651\u5230\u591a\u4e2a nsqd \u5b9e\u4f8b\u7684\u8fde\u63a5\uff0c\u8fdb\u884c\u9002\u5f53\u5212\u5206\uff09\\n\\n![tumblr_mataigNDn61qj3yp2.png](https://cdn.nlark.com/yuque/0/2019/png/402881/1563258977977-87f12480-5584-4f06-96d6-c036d7d78c7f.png)\\n\\n\u8fd9\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u6027\u80fd\u65cb\u94ae\uff0c\u56e0\u4e3a\u4e00\u4e9b\u4e0b\u6e38\u7cfb\u7edf\u80fd\u591f\u66f4\u5bb9\u6613\u5730\u6279\u91cf\u5904\u7406\u6d88\u606f\u5e76\u4ece\u66f4\u9ad8\u7684`max-in-flight`\u4e2d\u83b7\u76ca\u3002\\n\\n\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u56e0\u4e3a\u5b83\u5177\u6709\u7f13\u51b2\u548c\u63a8\u9001\u529f\u80fd\uff0c\u80fd\u591f\u6ee1\u8db3\u6d41\uff08\u901a\u9053\uff09\u7684\u72ec\u7acb\u526f\u672c\u7684\u9700\u8981\uff0c\u6240\u4ee5\u6211\u4eec\u5df2\u7ecf\u751f\u6210\u4e86\u4e00\u4e2a\u7c7b\u4f3c\u4e8e simplequeue \u548c pubsub \u7ec4\u5408\u7684\u5b88\u62a4\u8fdb\u7a0b\u3002 \u8fd9\u5728\u7b80\u5316\u6211\u4eec\u7cfb\u7edf\u7684\u62d3\u6251\u65b9\u9762\u975e\u5e38\u5f3a\u5927\uff0c\u6211\u4eec\u4f20\u7edf\u4e0a\u7ef4\u62a4\u4e0a\u9762\u8ba8\u8bba\u7684\u65e7\u5de5\u5177\u94fe\u3002\\n\\n### Go\\n\\n\u6211\u4eec\u65e9\u671f\u505a\u51fa\u4e86\u6218\u7565\u51b3\u7b56\uff0c\u5728 Go \u4e2d\u6784\u5efa NSQ \u6838\u5fc3\u3002 \u6211\u4eec\u6700\u8fd1\u5728\u535a\u5ba2\u4e0a\u5199\u4e86\u5173\u4e8e\u6211\u4eec\u5bf9 Go \u7684\u4f7f\u7528\uff0c\u5e76\u63d0\u5230\u4e86\u8fd9\u4e2a\u9879\u76ee - \u6d4f\u89c8\u8be5\u5e16\u5b50\u4ee5\u4e86\u89e3\u6211\u4eec\u5bf9\u8bed\u8a00\u7684\u770b\u6cd5\u53ef\u80fd\u4f1a\u6709\u6240\u5e2e\u52a9\u3002\\n\\n\u5173\u4e8e NSQ\uff0cGo \u901a\u9053\uff08\u4e0d\u8981\u4e0e NSQ \u901a\u9053\u6df7\u6dc6\uff09\u548c\u8bed\u8a00\u5185\u7f6e\u7684\u5e76\u53d1\u529f\u80fd\u975e\u5e38\u9002\u5408 nsqd \u7684\u5185\u90e8\u5de5\u4f5c\u3002 \u6211\u4eec\u5229\u7528\u7f13\u51b2\u901a\u9053\u6765\u7ba1\u7406\u5185\u5b58\u6d88\u606f\u961f\u5217\uff0c\u5e76\u65e0\u7f1d\u5730\u5c06\u6ea2\u51fa\u5199\u5165\u78c1\u76d8\u3002\\n\\n\u6807\u51c6\u5e93\u53ef\u4ee5\u8f7b\u677e\u7f16\u5199\u7f51\u7edc\u5c42\u548c\u5ba2\u6237\u7aef\u4ee3\u7801\u3002 \u5185\u7f6e\u7684\u5185\u5b58\u548c cpu \u5206\u6790\u94a9\u5b50\u7a81\u51fa\u4e86\u4f18\u5316\u7684\u673a\u4f1a\uff0c\u5e76\u4e14\u9700\u8981\u5f88\u5c11\u7684\u96c6\u6210\u5de5\u4f5c\u3002 \u6211\u4eec\u8fd8\u53d1\u73b0\uff0c\u5355\u72ec\u6d4b\u8bd5\u7ec4\u4ef6\uff0c\u4f7f\u7528\u63a5\u53e3\u6a21\u62df\u7c7b\u578b\u4ee5\u53ca\u8fed\u4ee3\u6784\u5efa\u529f\u80fd\u975e\u5e38\u5bb9\u6613\u3002\\n\\n## \u5185\u90e8\u6784\u4ef6\\n\\nNSQ \u7531 3 \u4e2a\u5b88\u62a4\u8fdb\u7a0b\u7ec4\u6210\uff1a\\n\\n- nsqd \u662f\u63a5\u6536\uff0c\u6392\u961f\u548c\u5411\u5ba2\u6237\u7aef\u4f20\u9012\u6d88\u606f\u7684\u5b88\u62a4\u7a0b\u5e8f\u3002\\n- nsqlookupd \u662f\u7ba1\u7406\u62d3\u6251\u4fe1\u606f\u5e76\u63d0\u4f9b\u6700\u7ec8\u4e00\u81f4\u7684\u53d1\u73b0\u670d\u52a1\u7684\u5b88\u62a4\u7a0b\u5e8f\u3002\\n- nsqadmin \u662f\u4e00\u4e2a Web UI\uff0c\u53ef\u4ee5\u5b9e\u65f6\u5185\u7701\u96c6\u7fa4\uff08\u5e76\u6267\u884c\u5404\u79cd\u7ba1\u7406\u4efb\u52a1\uff09\u3002\\n\\nNSQ \u4e2d\u7684\u6570\u636e\u6d41\u88ab\u5efa\u6a21\u4e3a\u6d41\u548c\u6d88\u8d39\u8005\u7684\u6811\u3002 \u4e3b\u9898\u662f\u4e0d\u540c\u7684\u6570\u636e\u6d41\u3002 \u9891\u9053\u662f\u8ba2\u9605\u7279\u5b9a\u4e3b\u9898\u7684\u6d88\u8d39\u8005\u7684\u903b\u8f91\u5206\u7ec4\u3002\\n\\n\u5355\u4e2a nsqd \u53ef\u4ee5\u6709\u5f88\u591a\u4e3b\u9898\uff0c\u6bcf\u4e2a\u4e3b\u9898\u53ef\u4ee5\u6709\u5f88\u591a\u901a\u9053\u3002 \u901a\u9053\u63a5\u6536\u4e3b\u9898\u7684\u6240\u6709\u6d88\u606f\u7684\u526f\u672c\uff0c\u5728\u901a\u9053\u4e0a\u7684\u6bcf\u4e2a\u6d88\u606f\u5728\u5176\u8ba2\u6237\u4e4b\u95f4\u5206\u53d1\u65f6\u542f\u7528\u591a\u64ad\u6837\u5f0f\u4f20\u9001\uff0c\u4ece\u800c\u5b9e\u73b0\u8d1f\u8f7d\u5e73\u8861\u3002\\n\\n\u8fd9\u4e9b\u539f\u8bed\u6784\u6210\u4e86\u8868\u8fbe\u5404\u79cd\u7b80\u5355\u548c\u590d\u6742\u62d3\u6251\u7684\u5f3a\u5927\u6846\u67b6\u3002\\n\\n### \u4e3b\u9898\u4e0e\u901a\u9053\\n\\n\u4e3b\u9898\u548c\u901a\u9053\uff0cNSQ \u7684\u6838\u5fc3\u539f\u8bed\uff0c\u6700\u80fd\u8bf4\u660e\u7cfb\u7edf\u8bbe\u8ba1\u5982\u4f55\u65e0\u7f1d\u8f6c\u6362\u4e3a Go \u7684\u529f\u80fd\u3002\\n\\nGo \u7684\u901a\u9053\uff08\u4ee5\u4e0b\u79f0\u4e3a\u201cgo-chan\u201d\u7528\u4e8e\u6d88\u9664\u6b67\u4e49\uff09\u662f\u8868\u8fbe\u961f\u5217\u7684\u81ea\u7136\u65b9\u5f0f\uff0c\u56e0\u6b64 NSQ \u4e3b\u9898/\u901a\u9053\u7684\u6838\u5fc3\u53ea\u662f\u6d88\u606f\u6307\u9488\u7684\u7f13\u51b2\u8f6c\u53d1\u3002 \u7f13\u51b2\u533a\u7684\u5927\u5c0f\u7b49\u4e8e--mem-queue-size \u914d\u7f6e\u53c2\u6570\u3002\\n\\n\u4ece\u7ebf\u4e0a\u8bfb\u53d6\u6570\u636e\u540e\uff0c\u5411\u4e3b\u9898\u53d1\u5e03\u6d88\u606f\u7684\u884c\u4e3a\u5305\u62ec\uff1a\\n\\n1. Message \u7ed3\u6784\u7684\u5b9e\u4f8b\u5316\uff08\u4ee5\u53ca\u6d88\u606f\u4f53[]\u5b57\u8282\u7684\u5206\u914d\uff09\\n2. \u8bfb\u53d6\u9501\u5b9a\u4ee5\u83b7\u53d6\u4e3b\u9898\\n3. \u8bfb\u9501\u4ee5\u68c0\u67e5\u53d1\u5e03\u7684\u80fd\u529b\\n4. \u53d1\u9001\u7f13\u51b2\u7684 go-chan\\n\\n\u4e3a\u4e86\u4ece\u4e3b\u9898\u5230\u5176\u901a\u9053\u83b7\u53d6\u6d88\u606f\uff0c\u4e3b\u9898\u4e0d\u80fd\u4f9d\u8d56\u4e8e\u5178\u578b\u7684 go-chan \u63a5\u6536\u8bed\u4e49\uff0c\u56e0\u4e3a\u5728 go-chan \u4e0a\u63a5\u6536\u7684\u591a\u4e2a goroutine \u5c06\u5206\u53d1\u6d88\u606f\uff0c\u800c\u671f\u671b\u7684\u6700\u7ec8\u7ed3\u679c\u662f\u5c06\u6bcf\u4e2a\u6d88\u606f\u590d\u5236\u5230\u6bcf\u4e2a\u901a\u9053\uff08goroutine\uff09\u3002\\n\\n\u76f8\u53cd\uff0c\u6bcf\u4e2a\u4e3b\u9898\u90fd\u7ef4\u62a4\u7740 3 \u4e2a\u4e3b\u8981\u7684 goroutine\u3002 \u7b2c\u4e00\u4e2a\u79f0\u4e3a\u8def\u7531\u5668\uff0c\u8d1f\u8d23\u4ece\u4f20\u5165\u7684 go-chan \u8bfb\u53d6\u65b0\u53d1\u5e03\u7684\u6d88\u606f\u5e76\u5c06\u5b83\u4eec\u5b58\u50a8\u5728\u961f\u5217\uff08\u5185\u5b58\u6216\u78c1\u76d8\uff09\u4e2d\u3002\\n\\n\u7b2c\u4e8c\u4e2a\u53eb\u505a messagePump\uff0c\u8d1f\u8d23\u5c06\u6d88\u606f\u590d\u5236\u5e76\u63a8\u9001\u5230\u901a\u9053\uff0c\u5982\u4e0a\u6240\u8ff0\u3002\\n\\n\u7b2c\u4e09\u4e2a\u8d1f\u8d23 DiskQueue IO\uff0c\u7a0d\u540e\u5c06\u8ba8\u8bba\u3002\\n\\n\u901a\u9053\u7a0d\u5fae\u590d\u6742\u4e00\u70b9\uff0c\u4f46\u662f\u5171\u4eab\u66b4\u9732\u5355\u4e2a\u8f93\u5165\u548c\u5355\u4e2a\u8f93\u51fa go-chan \u7684\u57fa\u672c\u76ee\u6807\uff08\u4ee5\u62bd\u8c61\u51fa\u5185\u90e8\u6d88\u606f\u53ef\u80fd\u5728\u5185\u5b58\u6216\u78c1\u76d8\u4e0a\u7684\u4e8b\u5b9e\uff09\uff1a\\n\\n![682fc358-5f76-11e3-9b05-3d5baba67f13.png](https://cdn.nlark.com/yuque/0/2019/png/402881/1563261049592-5a5f0207-3183-4872-8332-0b7d593ad9dc.png)\\n\\n\u6b64\u5916\uff0c\u6bcf\u4e2a\u901a\u9053\u7ef4\u62a4 2 \u4e2a\u6309\u65f6\u95f4\u6392\u5e8f\u7684\u4f18\u5148\u7ea7\u961f\u5217\uff0c\u8d1f\u8d23\u5ef6\u8fdf\u548c\u6b63\u5728\u8fdb\u884c\u7684\u6d88\u606f\u8d85\u65f6\uff08\u4ee5\u53ca 2 \u4e2a\u968f\u9644\u7684 goroutine \u7528\u4e8e\u76d1\u63a7\u5b83\u4eec\uff09\u3002\\n\\n\u901a\u8fc7\u7ba1\u7406\u6bcf\u901a\u9053\u6570\u636e\u7ed3\u6784\u6765\u6539\u8fdb\u5e76\u884c\u5316\uff0c\u800c\u4e0d\u662f\u4f9d\u8d56\u4e8e Go \u8fd0\u884c\u65f6\u7684\u5168\u5c40\u8ba1\u65f6\u5668\u8c03\u5ea6\u7a0b\u5e8f\u3002\\n\\n\u6ce8\u610f\uff1a\u5728\u5185\u90e8\uff0cGo \u8fd0\u884c\u65f6\u4f7f\u7528\u5355\u4e2a\u4f18\u5148\u7ea7\u961f\u5217\u548c goroutine \u6765\u7ba1\u7406\u8ba1\u65f6\u5668\u3002 \u8fd9\u652f\u6301\uff08\u4f46\u4e0d\u9650\u4e8e\uff09\u6574\u4e2a\u65f6\u95f4\u5305\u3002 \u5b83\u901a\u5e38\u4e0d\u9700\u8981\u7528\u6237\u65f6\u95f4\u6392\u5e8f\u7684\u4f18\u5148\u7ea7\u961f\u5217\uff0c\u4f46\u91cd\u8981\u7684\u662f\u8981\u8bb0\u4f4f\u5b83\u662f\u4e00\u4e2a\u5355\u4e00\u9501\u5b9a\u7684\u6570\u636e\u7ed3\u6784\uff0c\u53ef\u80fd\u4f1a\u5f71\u54cd GOMAXPROCS> 1 \u7684\u6027\u80fd\u3002 \u8bf7\u53c2\u9605 runtime / time.go\u3002\\n\\n### \u540e\u7aef/ DiskQueue\\n\\nNSQ \u7684\u8bbe\u8ba1\u76ee\u6807\u4e4b\u4e00\u662f\u9650\u5236\u5185\u5b58\u4e2d\u4fdd\u5b58\u7684\u6d88\u606f\u6570\u91cf\u3002 \u5b83\u901a\u8fc7 DiskQueue\uff08\u5b83\u62e5\u6709\u4e3b\u9898\u6216\u901a\u9053\u7684\u7b2c\u4e09\u4e2a\u4e3b\u8981 goroutine\uff09\u900f\u660e\u5730\u5c06\u6d88\u606f\u6ea2\u51fa\u5199\u5165\u78c1\u76d8\u6765\u5b9e\u73b0\u6b64\u76ee\u7684\u3002\\n\\n\u7531\u4e8e\u5185\u5b58\u961f\u5217\u53ea\u662f\u4e00\u4e2a go-chan\uff0c\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u9996\u5148\u5c06\u6d88\u606f\u8def\u7531\u5230\u5185\u5b58\u662f\u5f88\u7b80\u5355\u7684\uff0c\u7136\u540e\u56de\u9000\u5230\u78c1\u76d8\uff1a\\n\\n```\\nfor msg := range c.incomingMsgChan {\\n    select {\\n    case c.memoryMsgChan <- msg:\\n    default:\\n        err := WriteMessageToBackend(&msgBuf, msg, c.backend)\\n        if err != nil {\\n            // ... handle errors ...\\n        }\\n    }\\n}\\n```\\n\\n\u5229\u7528 Go \u7684 select \u8bed\u53e5\uff0c\u53ea\u9700\u51e0\u884c\u4ee3\u7801\u5373\u53ef\u8868\u793a\u6b64\u529f\u80fd\uff1a\u4e0a\u8ff0\u9ed8\u8ba4\u60c5\u51b5\u4ec5\u5728 memoryMsgChan \u5df2\u6ee1\u65f6\u6267\u884c\u3002\\n\\nNSQ \u8fd8\u5177\u6709\u77ed\u6682\u4e3b\u9898/\u6e20\u9053\u7684\u6982\u5ff5\u3002 \u5b83\u4eec\u4e22\u5f03\u6d88\u606f\u6ea2\u51fa\uff08\u800c\u4e0d\u662f\u5199\u5165\u78c1\u76d8\uff09\u5e76\u5728\u5b83\u4eec\u4e0d\u518d\u6709\u5ba2\u6237\u8ba2\u9605\u65f6\u6d88\u5931\u3002 \u8fd9\u662f Go \u63a5\u53e3\u7684\u5b8c\u7f8e\u7528\u4f8b\u3002 \u4e3b\u9898\u548c\u901a\u9053\u5177\u6709\u58f0\u660e\u4e3a\u540e\u7aef\u63a5\u53e3\u800c\u4e0d\u662f\u5177\u4f53\u7c7b\u578b\u7684\u7ed3\u6784\u6210\u5458\u3002 \u6b63\u5e38\u4e3b\u9898\u548c\u901a\u9053\u4f7f\u7528 DiskQueue\uff0c\u800c DummyBackendQueue \u4e2d\u4f7f\u7528\u77ed\u6682\u7684\u5b58\u6839\uff0c\u5b9e\u73b0\u65e0\u64cd\u4f5c\u540e\u7aef\u3002\\n\\n### \u964d\u4f4e GC \u538b\u529b\\n\\n\u5728\u4efb\u4f55\u5783\u573e\u6536\u96c6\u73af\u5883\u4e2d\uff0c\u60a8\u90fd\u4f1a\u53d7\u5230\u541e\u5410\u91cf\uff08\u6267\u884c\u6709\u7528\u5de5\u4f5c\uff09\uff0c\u5ef6\u8fdf\uff08\u54cd\u5e94\u6027\uff09\u548c\u9a7b\u7559\u96c6\u5927\u5c0f\uff08\u5360\u7528\u7a7a\u95f4\uff09\u4e4b\u95f4\u7684\u7d27\u5f20\u5173\u7cfb\u3002\\n\\n\u4ece Go 1.2 \u5f00\u59cb\uff0cGC \u5c31\u662f\u6807\u8bb0 - \u626b\u63cf\uff08\u5e76\u884c\uff09\uff0c\u975e\u4ee3\u6570\uff0c\u975e\u538b\u7f29\uff0c\u505c\u6b62\u4e16\u754c\uff0c\u800c\u4e14\u5927\u591a\u6570\u90fd\u662f\u7cbe\u786e\u7684\u3002 \u5b83\u5927\u90e8\u5206\u90fd\u662f\u7cbe\u786e\u7684\uff0c\u56e0\u4e3a\u5176\u4f59\u7684\u5de5\u4f5c\u6ca1\u6709\u53ca\u65f6\u5b8c\u6210\uff08\u5b83\u662f\u9488\u5bf9 Go 1.3\uff09\u3002\\n\\nGo GC \u80af\u5b9a\u4f1a\u7ee7\u7eed\u6539\u8fdb\uff0c\u4f46\u666e\u904d\u7684\u4e8b\u5b9e\u662f\uff1a\u4f60\u521b\u9020\u7684\u5783\u573e\u8d8a\u5c11\uff0c\u4f60\u6536\u96c6\u7684\u65f6\u95f4\u5c31\u8d8a\u5c11\u3002\\n\\n\u9996\u5148\uff0c\u4e86\u89e3 GC \u5728\u5b9e\u9645\u5de5\u4f5c\u8d1f\u8f7d\u4e0b\u7684\u8868\u73b0\u975e\u5e38\u91cd\u8981\u3002 \u4e3a\u6b64\uff0cnsqd \u4ee5 statsd \u683c\u5f0f\uff08\u4ee5\u53ca\u5176\u4ed6\u5185\u90e8\u6307\u6807\uff09\u53d1\u5e03 GC \u7edf\u8ba1\u6570\u636e\u3002 nsqadmin \u663e\u793a\u8fd9\u4e9b\u6307\u6807\u7684\u56fe\u8868\uff0c\u8ba9\u60a8\u6df1\u5165\u4e86\u89e3 GC \u5728\u9891\u7387\u548c\u6301\u7eed\u65f6\u95f4\u65b9\u9762\u7684\u5f71\u54cd.\\n\\n\u4e3a\u4e86\u771f\u6b63\u51cf\u5c11\u5783\u573e\uff0c\u60a8\u9700\u8981\u77e5\u9053\u5b83\u7684\u751f\u6210\u4f4d\u7f6e\u3002 Go \u5de5\u5177\u94fe\u518d\u4e00\u6b21\u63d0\u4f9b\u4e86\u7b54\u6848\uff1a\\n\\n- \u4f7f\u7528\u6d4b\u8bd5\u5305\u5e76\u4f7f\u7528 **go test -benchmem**\u6765\u6d4b\u8bd5\u70ed\u4ee3\u7801\u8def\u5f84\u3002 \u5b83\u63cf\u8ff0\u4e86\u6bcf\u6b21\u8fed\u4ee3\u7684\u5206\u914d\u6570\u91cf\uff08\u57fa\u51c6\u8fd0\u884c\u53ef\u4ee5\u4e0e benchcmp \u8fdb\u884c\u6bd4\u8f83\uff09\u3002\\n- \u4f7f\u7528**go build -gcflags -m**\u6784\u5efa\uff0c\u8f93\u51fa\u8f6c\u4e49\u5206\u6790\u7684\u7ed3\u679c\u3002\\n\\n\u8003\u8651\u5230\u8fd9\u4e00\u70b9\uff0c\u4ee5\u4e0b\u4f18\u5316\u8bc1\u660e\u5bf9 nsqd \u5f88\u6709\u7528\\n\\n- \u907f\u514d[]\u5b57\u8282\u5230\u5b57\u7b26\u4e32\u8f6c\u6362\u3002\\n- \u91cd\u7528\u7f13\u51b2\u533a\u6216\u5bf9\u8c61\uff08\u6709\u4e00\u5929\u53ef\u80fd\u662f sync.Pool \u53c8\u662f\u95ee\u9898 4720\uff09\u3002\\n- \u9884\u5206\u914d\u5207\u7247\uff08\u6307\u5b9a make \u4e2d\u7684\u5bb9\u91cf\uff09\u5e76\u59cb\u7ec8\u77e5\u9053\u7ebf\u4e0a\u9879\u76ee\u7684\u6570\u91cf\u548c\u5927\u5c0f\u3002\\n- \u5bf9\u5404\u79cd\u53ef\u914d\u7f6e\u62e8\u53f7\u5e94\u7528\u5408\u7406\u7684\u9650\u5236\uff08\u4f8b\u5982\u6d88\u606f\u5927\u5c0f\uff09\u3002\\n- \u907f\u514d\u88c5\u7bb1\uff08\u4f7f\u7528 interface {}\uff09\u6216\u4e0d\u5fc5\u8981\u7684\u5305\u88c5\u5668\u7c7b\u578b\uff08\u6bd4\u5982\u201c\u591a\u503c\u201dgo-chan \u7684\u7ed3\u6784\uff09\u3002\\n- \u907f\u514d\u5728\u70ed\u4ee3\u7801\u8def\u5f84\u4e2d\u4f7f\u7528\u5ef6\u8fdf\uff08\u5b83\u5206\u914d\uff09\u3002\\n\\n### TCP \u534f\u8bae\\n\\nNSQ TCP \u534f\u8bae\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50\uff0c\u5176\u4e2d\u4f7f\u7528\u8fd9\u4e9b GC \u4f18\u5316\u6982\u5ff5\u4ea7\u751f\u4e86\u5f88\u5927\u7684\u6548\u679c\u3002\\n\\n\u8be5\u534f\u8bae\u91c7\u7528\u957f\u5ea6\u524d\u7f00\u5e27\u7ed3\u6784\uff0c\u4f7f\u7f16\u7801\u548c\u89e3\u7801\u53d8\u5f97\u7b80\u5355\u548c\u9ad8\u6548\uff1a\\n\\n```\\n[x][x][x][x][x][x][x][x][x][x][x][x]...\\n|  (int32) ||  (int32) || (binary)\\n|  4-byte  ||  4-byte  || N-byte\\n------------------------------------...\\n    size      frame ID     data\\n```\\n\\n\u7531\u4e8e\u5e27\u7684\u7ec4\u4ef6\u7684\u786e\u5207\u7c7b\u578b\u548c\u5927\u5c0f\u662f\u63d0\u524d\u77e5\u9053\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u907f\u514d[`encoding/binary`](http://golang.org/pkg/encoding/binary/)\u5305\u7684\u65b9\u4fbf\u6027 [`Read()`](http://golang.org/pkg/encoding/binary/#Read)\u548c[`Write()`](http://golang.org/pkg/encoding/binary/#Write)\u5305\u88c5\u5668\uff08\u53ca\u5176\u65e0\u5173\u7684\u63a5\u53e3\u67e5\u627e\u548c\u8f6c\u6362\uff09\uff0c\u800c\u662f\u8c03\u7528\u9002\u5f53\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6[`binary.BigEndian`](http://golang.org/pkg/encoding/binary/#ByteOrder) \u65b9\u6cd5\u76f4\u63a5\u3002\\n\\n\u4e3a\u4e86\u51cf\u5c11\u5957\u63a5\u5b57 IO \u7cfb\u7edf\u8c03\u7528\uff0c\u5ba2\u6237\u7aef net.Conn \u5305\u542b bufio.Reader \u548c bufio.Writer\u3002 Reader \u516c\u5f00\u4e86 ReadSlice\uff08\uff09\uff0c\u5b83\u91cd\u7528\u4e86\u5b83\u7684\u5185\u90e8\u7f13\u51b2\u533a\u3002 \u8fd9\u5728\u8bfb\u53d6\u63d2\u5ea7\u65f6\u51e0\u4e4e\u6d88\u9664\u4e86\u5206\u914d\uff0c\u5927\u5927\u964d\u4f4e\u4e86 GC \u7684\u538b\u529b\u3002 \u8fd9\u662f\u53ef\u80fd\u7684\uff0c\u56e0\u4e3a\u4e0e\u5927\u591a\u6570\u547d\u4ee4\u76f8\u5173\u8054\u7684\u6570\u636e\u4e0d\u4f1a\u8f6c\u4e49\uff08\u5728\u4e0d\u662f\u8fd9\u6837\u7684\u8fb9\u7f18\u60c5\u51b5\u4e0b\uff0c\u6570\u636e\u88ab\u663e\u5f0f\u590d\u5236\uff09\u3002\\n\\n\u5728\u66f4\u4f4e\u7ea7\u522b\uff0cMessageID \u88ab\u58f0\u660e\u4e3a[16]\u5b57\u8282\uff0c\u4ee5\u4fbf\u80fd\u591f\u5c06\u5176\u7528\u4f5c\u6620\u5c04\u952e\uff08\u5207\u7247\u4e0d\u80fd\u7528\u4f5c\u6620\u5c04\u952e\uff09\u3002 \u4f46\u662f\uff0c\u7531\u4e8e\u4ece\u5957\u63a5\u5b57\u8bfb\u53d6\u7684\u6570\u636e\u5b58\u50a8\u4e3a[]\u5b57\u8282\uff0c\u800c\u4e0d\u662f\u901a\u8fc7\u5206\u914d\u5b57\u7b26\u4e32\u952e\u4ea7\u751f\u5783\u573e\uff0c\u5e76\u4e14\u4e3a\u4e86\u907f\u514d\u4ece\u5207\u7247\u5230 MessageID \u7684\u540e\u5907\u6570\u7ec4\u7684\u526f\u672c\uff0c\u4f7f\u7528\u4e0d\u5b89\u5168\u7684\u5305\u76f4\u63a5\u8f6c\u6362\u5207\u7247\u5230\u4e00\u4e2a MessageID\uff1a\\n\\n```\\nid := *(*nsq.MessageID)(unsafe.Pointer(&msgID))\\n```\\n\\n\u6ce8\u610f\uff1a\u8fd9\u662f\u4e00\u4e2a\u9ed1\u5ba2\u3002 \u5982\u679c\u7f16\u8bd1\u5668\u5bf9\u6b64\u8fdb\u884c\u4e86\u4f18\u5316\u5e76\u4e14\u95ee\u9898 3512 \u53ef\u4ee5\u89e3\u51b3\u6b64\u95ee\u9898\uff0c\u5219\u6ca1\u6709\u5fc5\u8981\u3002 \u5b83\u8fd8\u503c\u5f97\u9605\u8bfb\u95ee\u9898 5376\uff0c\u8be5\u95ee\u9898\u8ba8\u8bba\u4e86\u201cconst like\u201d\u5b57\u8282\u7c7b\u578b\u7684\u53ef\u80fd\u6027\uff0c\u5b83\u53ef\u4ee5\u5728\u63a5\u53d7\u5b57\u7b26\u4e32\u7684\u60c5\u51b5\u4e0b\u4e92\u6362\u4f7f\u7528\uff0c\u800c\u65e0\u9700\u5206\u914d\u548c\u590d\u5236\u3002\\n\\n\u7c7b\u4f3c\u5730\uff0cGo \u6807\u51c6\u5e93\u4ec5\u5728\u5b57\u7b26\u4e32\u4e0a\u63d0\u4f9b\u6570\u5b57\u8f6c\u6362\u65b9\u6cd5\u3002 \u4e3a\u4e86\u907f\u514d\u5b57\u7b26\u4e32\u5206\u914d\uff0cnsqd \u4f7f\u7528\u76f4\u63a5\u5728[]\u5b57\u8282\u4e0a\u64cd\u4f5c\u7684\u81ea\u5b9a\u4e49\u57fa\u672c 10 \u8f6c\u6362\u65b9\u6cd5\u3002\\n\\n\u8fd9\u4e9b\u4f3c\u4e4e\u662f\u5fae\u4f18\u5316\uff0c\u4f46 TCP \u534f\u8bae\u5305\u542b\u4e00\u4e9b\u6700\u70ed\u95e8\u7684\u4ee3\u7801\u8def\u5f84\u3002 \u603b\u7684\u6765\u8bf4\uff0c\u5b83\u4eec\u4ee5\u6bcf\u79d2\u6570\u4e07\u6761\u6d88\u606f\u7684\u901f\u5ea6\uff0c\u5bf9\u5206\u914d\u6570\u91cf\u548c\u5f00\u9500\u4ea7\u751f\u4e86\u91cd\u5927\u5f71\u54cd\uff1a\\n\\n```\\nbenchmark                    old ns/op    new ns/op    delta\\nBenchmarkProtocolV2Data           3575         1963  -45.09%\\n\\nbenchmark                    old ns/op    new ns/op    delta\\nBenchmarkProtocolV2Sub256        57964        14568  -74.87%\\nBenchmarkProtocolV2Sub512        58212        16193  -72.18%\\nBenchmarkProtocolV2Sub1k         58549        19490  -66.71%\\nBenchmarkProtocolV2Sub2k         63430        27840  -56.11%\\n\\nbenchmark                   old allocs   new allocs    delta\\nBenchmarkProtocolV2Sub256           56           39  -30.36%\\nBenchmarkProtocolV2Sub512           56           39  -30.36%\\nBenchmarkProtocolV2Sub1k            56           39  -30.36%\\nBenchmarkProtocolV2Sub2k            58           42  -27.59%\\n```\\n\\n### HTTP\\n\\nNSQ \u7684 HTTP API \u5efa\u7acb\u5728 Go \u7684 net / http \u5305\u4e4b\u4e0a\u3002 \u56e0\u4e3a\u5b83\u53ea\u662f HTTP\uff0c\u6240\u4ee5\u51e0\u4e4e\u4efb\u4f55\u73b0\u4ee3\u7f16\u7a0b\u73af\u5883\u90fd\u53ef\u4ee5\u4f7f\u7528\u5b83\uff0c\u800c\u65e0\u9700\u7279\u6b8a\u7684\u5ba2\u6237\u7aef\u5e93\u3002\\n\\n\u5b83\u7684\u7b80\u6d01\u6027\u63a9\u76d6\u4e86\u5b83\u7684\u5f3a\u5927\u529f\u80fd\uff0c\u56e0\u4e3a Go \u7684 HTTP \u5de5\u5177\u7bb1\u6700\u6709\u8da3\u7684\u4e00\u4e2a\u65b9\u9762\u662f\u5b83\u652f\u6301\u7684\u5404\u79cd\u8c03\u8bd5\u529f\u80fd\u3002 net / http / pprof \u5305\u76f4\u63a5\u4e0e\u672c\u673a HTTP \u670d\u52a1\u5668\u96c6\u6210\uff0c\u516c\u5f00\u7aef\u70b9\u4ee5\u68c0\u7d22 CPU\uff0c\u5806\uff0cgoroutine \u548c OS \u7ebf\u7a0b\u914d\u7f6e\u6587\u4ef6\u3002 \u8fd9\u4e9b\u53ef\u4ee5\u76f4\u63a5\u4ece go \u5de5\u5177\u4e2d\u5b9a\u4f4d\uff1a\\n\\n```\\n$ go tool pprof http://127.0.0.1:4151/debug/pprof/profile\\n```\\n\\n\u8fd9\u5bf9\u4e8e\u8c03\u8bd5\u548c\u5206\u6790\u6b63\u5728\u8fd0\u884c\u7684\u8fdb\u7a0b\u975e\u5e38\u6709\u4ef7\u503c\uff01\\n\\n\u6b64\u5916\uff0c/stats \u7aef\u70b9\u4ee5 JSON \u6216\u6f02\u4eae\u6253\u5370\u7684\u6587\u672c\u8fd4\u56de\u5927\u91cf\u5ea6\u91cf\u6807\u51c6\uff0c\u4f7f\u7ba1\u7406\u5458\u53ef\u4ee5\u8f7b\u677e\u5b9e\u65f6\u5730\u4ece\u547d\u4ee4\u884c\u8fdb\u884c\u5185\u7701\uff1a\\n\\n```\\n$ watch -n 0.5 \'curl -s http://127.0.0.1:4151/stats | grep -v connected\'\\n```\\n\\n\u8fd9\u4ea7\u751f\u8fde\u7eed\u8f93\u51fa\uff0c\u5982\uff1a\\n\\n```\\n[page_views     ] depth: 0     be-depth: 0     msgs: 105525994 e2e%: 6.6s, 6.2s, 6.2s\\n    [page_view_counter        ] depth: 0     be-depth: 0     inflt: 432  def: 0    re-q: 34684 timeout: 34038 msgs: 105525994 e2e%: 5.1s, 5.1s, 4.6s\\n    [realtime_score           ] depth: 1828  be-depth: 0     inflt: 1368 def: 0    re-q: 25188 timeout: 11336 msgs: 105525994 e2e%: 9.0s, 9.0s, 7.8s\\n    [variants_writer          ] depth: 0     be-depth: 0     inflt: 592  def: 0    re-q: 37068 timeout: 37068 msgs: 105525994 e2e%: 8.2s, 8.2s, 8.2s\\n\\n[poll_requests  ] depth: 0     be-depth: 0     msgs: 11485060 e2e%: 167.5ms, 167.5ms, 138.1ms\\n    [social_data_collector    ] depth: 0     be-depth: 0     inflt: 2    def: 3    re-q: 7568  timeout: 402   msgs: 11485060 e2e%: 186.6ms, 186.6ms, 138.1ms\\n\\n[social_data    ] depth: 0     be-depth: 0     msgs: 60145188 e2e%: 199.0s, 199.0s, 199.0s\\n    [events_writer            ] depth: 0     be-depth: 0     inflt: 226  def: 0    re-q: 32584 timeout: 30542 msgs: 60145188 e2e%: 6.7s, 6.7s, 6.7s\\n    [social_delta_counter     ] depth: 17328 be-depth: 7327  inflt: 179  def: 1    re-q: 155843 timeout: 11514 msgs: 60145188 e2e%: 234.1s, 234.1s, 231.8s\\n\\n[time_on_site_ticks] depth: 0     be-depth: 0     msgs: 35717814 e2e%: 0.0ns, 0.0ns, 0.0ns\\n    [tail821042#ephemeral     ] depth: 0     be-depth: 0     inflt: 0    def: 0    re-q: 0     timeout: 0     msgs: 33909699 e2e%: 0.0ns, 0.0ns, 0.0ns\\n```\\n\\n\u6700\u540e\uff0c\u6bcf\u4e2a\u65b0\u7684 Go \u7248\u672c\u901a\u5e38\u90fd\u4f1a\u5e26\u6765\u53ef\u8861\u91cf\u7684\u6027\u80fd\u63d0\u5347\u3002 \u5bf9\u6700\u65b0\u7248\u672c\u7684 Go \u8fdb\u884c\u91cd\u65b0\u7f16\u8bd1\u63d0\u4f9b\u514d\u8d39\u63d0\u5347\u65f6\u603b\u662f\u5f88\u597d\uff01\\n\\n### \u4f9d\u8d56\\n\\n\u6765\u81ea\u5176\u4ed6\u751f\u6001\u7cfb\u7edf\uff0cGo \u7684\u7ba1\u7406\u4f9d\u8d56\u5173\u7cfb\u7684\u54f2\u5b66\uff08\u6216\u7f3a\u4e4f\uff09\u9700\u8981\u4e00\u70b9\u65f6\u95f4\u6765\u4e60\u60ef\u3002\\n\\nNSQ \u4ece\u4e00\u4e2a\u5355\u4e00\u7684\u5de8\u578b\u4ed3\u5e93\u53d1\u5c55\u800c\u6765\uff0c\u5177\u6709\u76f8\u5bf9\u8fdb\u53e3\uff0c\u5185\u90e8\u5305\u4e4b\u95f4\u51e0\u4e4e\u6ca1\u6709\u5206\u79bb\uff0c\u5b8c\u5168\u63a5\u53d7\u5173\u4e8e\u7ed3\u6784\u548c\u4f9d\u8d56\u7ba1\u7406\u7684\u63a8\u8350\u6700\u4f73\u5b9e\u8df5\u3002\\n\\n\u6709\u4e24\u79cd\u4e3b\u8981\u7684\u601d\u60f3\u6d41\u6d3e\uff1a\\n\\n1. \u4f9b\u5e94\uff1a\u5c06\u6b63\u786e\u4fee\u8ba2\u7684\u4f9d\u8d56\u9879\u590d\u5236\u5230\u5e94\u7528\u7a0b\u5e8f\u7684\u5b58\u50a8\u5e93\u4e2d\uff0c\u5e76\u4fee\u6539\u5bfc\u5165\u8def\u5f84\u4ee5\u5f15\u7528\u672c\u5730\u526f\u672c\u3002\\n2. Virtual Env\uff1a\u5217\u51fa\u60a8\u9700\u8981\u7684\u4f9d\u8d56\u9879\u7684\u4fee\u8ba2\u7248\uff0c\u5e76\u5728\u6784\u5efa\u65f6\u751f\u6210\u5305\u542b\u8fd9\u4e9b\u56fa\u5b9a\u4f9d\u8d56\u9879\u7684\u539f\u59cb GOPATH \u73af\u5883\u3002\\n\\n\u6ce8\u610f\uff1a\u8fd9\u5b9e\u9645\u4e0a\u4ec5\u9002\u7528\u4e8e\u4e8c\u8fdb\u5236\u5305\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u53ef\u5bfc\u5165\u5305\u6765\u8bf4\uff0c\u5bf9\u4e8e\u4f7f\u7528\u54ea\u4e2a\u7248\u672c\u7684\u4f9d\u8d56\u9879\u505a\u51fa\u4e2d\u95f4\u51b3\u7b56\u662f\u6ca1\u6709\u610f\u4e49\u7684\u3002\\n\\nNSQ \u4f7f\u7528 gpm \u4e3a\u4e0a\u9762\u7684\uff082\uff09\u63d0\u4f9b\u652f\u6301\u3002\\n\\n\u5b83\u7684\u5de5\u4f5c\u539f\u7406\u662f\u5c06\u60a8\u7684\u4f9d\u8d56\u9879\u8bb0\u5f55\u5728 Godeps \u6587\u4ef6\u4e2d\uff0c\u6211\u4eec\u7a0d\u540e\u5c06\u5176\u7528\u4e8e\u6784\u5efa GOPATH \u73af\u5883\u3002\\n\\n### \u6d4b\u8bd5\\n\\nGo \u4e3a\u7f16\u5199\u6d4b\u8bd5\u548c\u57fa\u51c6\u6d4b\u8bd5\u63d0\u4f9b\u4e86\u575a\u5b9e\u7684\u5185\u7f6e\u652f\u6301\uff0c\u56e0\u4e3a Go \u4f7f\u5f97\u5e76\u53d1\u64cd\u4f5c\u7684\u5efa\u6a21\u53d8\u5f97\u5982\u6b64\u7b80\u5355\uff0c\u6240\u4ee5\u5728\u6d4b\u8bd5\u73af\u5883\u4e2d\u5efa\u7acb\u4e00\u4e2a\u5b8c\u6574\u7684 nsqd \u5b9e\u4f8b\u662f\u5fae\u4e0d\u8db3\u9053\u7684\u3002\\n\\n\u4f46\u662f\uff0c\u521d\u59cb\u5b9e\u73b0\u7684\u4e00\u4e2a\u65b9\u9762\u6210\u4e3a\u6d4b\u8bd5\u7684\u95ee\u9898\uff1a\u5168\u5c40\u72b6\u6001\u3002\u6700\u660e\u663e\u7684\u7f6a\u72af\u662f\u4f7f\u7528\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\uff0c\u8be5\u53d8\u91cf\u5728\u8fd0\u884c\u65f6\u4fdd\u5b58\u5bf9 nsqd \u5b9e\u4f8b\u7684\u5f15\u7528\uff0c\u5373 var nsqd \\\\* NSQd\u3002\\n\\n\u67d0\u4e9b\u6d4b\u8bd5\u4f1a\u901a\u8fc7\u4f7f\u7528\u77ed\u683c\u5f0f\u53d8\u91cf\u8d4b\u503c\uff08\u5373 nsqd\uff1a= NewNSQd\uff08...\uff09\uff09\u65e0\u610f\u4e2d\u5728\u672c\u5730\u8303\u56f4\u5185\u5c4f\u853d\u6b64\u5168\u5c40\u53d8\u91cf\u3002\u8fd9\u610f\u5473\u7740\u5168\u5c40\u5f15\u7528\u5e76\u672a\u6307\u5411\u5f53\u524d\u6b63\u5728\u8fd0\u884c\u7684\u5b9e\u4f8b\uff0c\u4ece\u800c\u7834\u574f\u4e86\u6d4b\u8bd5\u3002\\n\\n\u8981\u89e3\u51b3\u6b64\u95ee\u9898\uff0c\u5c06\u4f20\u9012\u4e00\u4e2a Context \u7ed3\u6784\uff0c\u5176\u4e2d\u5305\u542b\u914d\u7f6e\u5143\u6570\u636e\u548c\u5bf9\u7236 nsqd \u7684\u5f15\u7528\u3002\u6240\u6709\u5bf9\u5168\u5c40\u72b6\u6001\u7684\u5f15\u7528\u90fd\u88ab\u672c\u5730\u4e0a\u4e0b\u6587\u66ff\u6362\uff0c\u5141\u8bb8\u5b50\uff08\u4e3b\u9898\uff0c\u901a\u9053\uff0c\u534f\u8bae\u5904\u7406\u7a0b\u5e8f\u7b49\uff09\u5b89\u5168\u5730\u8bbf\u95ee\u6b64\u6570\u636e\u5e76\u4f7f\u5176\u66f4\u53ef\u9760\u5730\u8fdb\u884c\u6d4b\u8bd5\u3002\\n\\n### \u7a33\u5065\u6027\\n\\n\u9762\u5bf9\u4e0d\u65ad\u53d8\u5316\u7684\u7f51\u7edc\u6761\u4ef6\u6216\u610f\u5916\u4e8b\u4ef6\u800c\u4e0d\u5065\u58ee\u7684\u7cfb\u7edf\u662f\u5728\u5206\u5e03\u5f0f\u751f\u4ea7\u73af\u5883\u4e2d\u4e0d\u80fd\u5f88\u597d\u5730\u8fd0\u884c\u7684\u7cfb\u7edf\u3002\\n\\nNSQ \u7684\u8bbe\u8ba1\u548c\u5b9e\u73b0\u65b9\u5f0f\u5141\u8bb8\u7cfb\u7edf\u5bb9\u5fcd\u6545\u969c\u5e76\u4ee5\u4e00\u81f4\uff0c\u53ef\u9884\u6d4b\u548c\u4e0d\u4ee4\u4eba\u60ca\u8bb6\u7684\u65b9\u5f0f\u8fd0\u884c\u3002\\n\\n\u6700\u91cd\u8981\u7684\u7406\u5ff5\u662f\u5feb\u901f\u5931\u8d25\uff0c\u5c06\u9519\u8bef\u89c6\u4e3a\u81f4\u547d\u9519\u8bef\uff0c\u5e76\u63d0\u4f9b\u8c03\u8bd5\u786e\u5b9e\u53d1\u751f\u7684\u4efb\u4f55\u95ee\u9898\u7684\u65b9\u6cd5\u3002\\n\\n\u4f46\u662f\uff0c\u4e3a\u4e86\u505a\u51fa\u53cd\u5e94\uff0c\u4f60\u9700\u8981\u80fd\u591f\u53d1\u73b0\u5f02\u5e38\u60c5\u51b5......\\n\\n### \u5fc3\u8df3\u548c\u8d85\u65f6\\n\\nNSQ TCP \u534f\u8bae\u662f\u9762\u5411\u63a8\u9001\u7684\u3002\u5728\u8fde\u63a5\uff0c\u63e1\u624b\u548c\u8ba2\u9605\u4e4b\u540e\uff0c\u6d88\u8d39\u8005\u5904\u4e8e RDY \u72b6\u6001 0.\u5f53\u6d88\u8d39\u8005\u51c6\u5907\u597d\u63a5\u6536\u6d88\u606f\u65f6\uff0c\u5b83\u5c06\u8be5 RDY \u72b6\u6001\u66f4\u65b0\u4e3a\u5b83\u613f\u610f\u63a5\u53d7\u7684\u6d88\u606f\u7684\u6570\u91cf\u3002 NSQ \u5ba2\u6237\u7aef\u5e93\u5728\u540e\u53f0\u4e0d\u65ad\u5730\u7ba1\u7406\u5b83\uff0c\u4ece\u800c\u4ea7\u751f\u6d41\u63a7\u5236\u7684\u6d88\u606f\u6d41\u3002\\n\\nnsqd \u4f1a\u5b9a\u671f\u901a\u8fc7\u8fde\u63a5\u53d1\u9001\u5fc3\u8df3\u3002\u5ba2\u6237\u7aef\u53ef\u4ee5\u914d\u7f6e\u5fc3\u8df3\u4e4b\u95f4\u7684\u95f4\u9694\uff0c\u4f46 nsqd \u5728\u53d1\u9001\u4e0b\u4e00\u4e2a\u4e4b\u524d\u9700\u8981\u54cd\u5e94\u3002\\n\\n\u5e94\u7528\u7a0b\u5e8f\u7ea7\u5fc3\u8df3\u548c RDY \u72b6\u6001\u7684\u7ec4\u5408\u907f\u514d\u4e86\u884c\u5934\u963b\u585e\uff0c\u5426\u5219\u4f1a\u5bfc\u81f4\u5fc3\u8df3\u65e0\u6548\uff08\u5373\uff0c\u5982\u679c\u6d88\u8d39\u8005\u5728\u5904\u7406\u6d88\u606f\u6d41\u65f6\u843d\u540e\u4e8e OS \u7684\u63a5\u6536\u7f13\u51b2\u533a\u5c06\u586b\u6ee1\uff0c\u963b\u6b62\u5fc3\u8df3\uff09\u3002\\n\\n\u4e3a\u4e86\u4fdd\u8bc1\u8fdb\u5ea6\uff0c\u6240\u6709\u7f51\u7edc IO \u90fd\u4e0e\u76f8\u5bf9\u4e8e\u914d\u7f6e\u7684\u5fc3\u8df3\u95f4\u9694\u7684\u622a\u6b62\u65f6\u95f4\u7ed1\u5b9a\u3002\u8fd9\u610f\u5473\u7740\u4f60\u53ef\u4ee5\u4ece\u5b57\u9762\u4e0a\u62d4\u6389 nsqd \u548c\u6d88\u8d39\u8005\u4e4b\u95f4\u7684\u7f51\u7edc\u8fde\u63a5\uff0c\u5b83\u5c06\u68c0\u6d4b\u5e76\u6b63\u786e\u5904\u7406\u9519\u8bef\u3002\\n\\n\u68c0\u6d4b\u5230\u81f4\u547d\u9519\u8bef\u65f6\uff0c\u5f3a\u5236\u5173\u95ed\u5ba2\u6237\u7aef\u8fde\u63a5\u3002\u6b63\u5728\u8fdb\u884c\u7684\u6d88\u606f\u8d85\u65f6\u5e76\u91cd\u65b0\u6392\u961f\u4ee5\u4fbf\u4f20\u9012\u7ed9\u53e6\u4e00\u4e2a\u6d88\u8d39\u8005\u3002\u6700\u540e\uff0c\u8bb0\u5f55\u9519\u8bef\u5e76\u589e\u52a0\u5404\u79cd\u5185\u90e8\u6307\u6807\u3002\\n\\n### \u7ba1\u7406 Goroutines\\n\\n\u542f\u52a8 goroutines \u975e\u5e38\u5bb9\u6613\u3002 \u4e0d\u5e78\u7684\u662f\uff0c\u7f16\u6392\u6e05\u7406\u5de5\u4f5c\u5e76\u4e0d\u5bb9\u6613\u3002 \u907f\u514d\u6b7b\u9501\u4e5f\u5177\u6709\u6311\u6218\u6027\u3002 \u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u8fd9\u5f52\u7ed3\u4e3a\u4e00\u4e2a\u6392\u5e8f\u95ee\u9898\uff0c\u5728\u4e0a\u6e38 goroutines \u53d1\u9001\u5b83\u4e4b\u524d\uff0c\u5728 go-chan \u4e0a\u63a5\u6536\u7684 goroutine \u9000\u51fa\u3002\\n\\n\u4e3a\u4ec0\u4e48\u8981\u5173\u5fc3\u5462\uff1f \u8fd9\u5f88\u7b80\u5355\uff0c\u5b64\u7acb\u7684 goroutine \u662f\u4e00\u4e2a\u5185\u5b58\u6cc4\u6f0f\u3002 \u957f\u65f6\u95f4\u8fd0\u884c\u7684\u5b88\u62a4\u8fdb\u7a0b\u4e2d\u7684\u5185\u5b58\u6cc4\u6f0f\u662f\u4e0d\u597d\u7684\uff0c\u7279\u522b\u662f\u5f53\u671f\u671b\u60a8\u7684\u8fdb\u7a0b\u5728\u5176\u4ed6\u6240\u6709\u5931\u8d25\u65f6\u90fd\u5c06\u4fdd\u6301\u7a33\u5b9a\u65f6\u3002\\n\\n\u66f4\u590d\u6742\u7684\u662f\uff0c\u5178\u578b\u7684 nsqd \u8fdb\u7a0b\u5728\u6d88\u606f\u4f20\u9012\u4e2d\u6d89\u53ca\u8bb8\u591a goroutine\u3002 \u5728\u5185\u90e8\uff0c\u6d88\u606f\u201c\u6240\u6709\u6743\u201d\u7ecf\u5e38\u53d1\u751f\u53d8\u5316\u3002 \u4e3a\u4e86\u80fd\u591f\u5e72\u51c0\u5730\u5173\u95ed\uff0c\u8003\u8651\u6240\u6709\u8fdb\u7a0b\u5185\u6d88\u606f\u975e\u5e38\u91cd\u8981\u3002\\n\\n\u867d\u7136\u6ca1\u6709\u4efb\u4f55\u9b54\u6cd5\u5b50\u5f39\uff0c\u4f46\u4ee5\u4e0b\u6280\u672f\u4f7f\u5176\u66f4\u5bb9\u6613\u7ba1\u7406......\\n\\n#### WaitGroups\\n\\n\u540c\u6b65\u5305\u63d0\u4f9b\u4e86 sync.WaitGroup\uff0c\u53ef\u7528\u4e8e\u6267\u884c\u6709\u591a\u5c11 goroutine \u7684\u5b9e\u65f6\u8ba1\u7b97\uff08\u5e76\u63d0\u4f9b\u7b49\u5f85\u9000\u51fa\u7684\u65b9\u6cd5\uff09\u3002\\n\\n\u4e3a\u4e86\u51cf\u5c11\u5178\u578b\u7684\u6837\u677f\uff0cnsqd \u4f7f\u7528\u8fd9\u4e2a\u5305\u88c5\u5668\uff1a\\n\\n```\\ntype WaitGroupWrapper struct {\\n    sync.WaitGroup\\n}\\n\\nfunc (w *WaitGroupWrapper) Wrap(cb func()) {\\n    w.Add(1)\\n    go func() {\\n        cb()\\n        w.Done()\\n    }()\\n}\\n\\n// can be used as follows:\\nwg := WaitGroupWrapper{}\\nwg.Wrap(func() { n.idPump() })\\n...\\nwg.Wait()\\n```\\n\\n#### \u9000\u51fa\u4fe1\u53f7\\n\\n\u5728\u591a\u4e2a\u5b50 goroutine \u4e2d\u89e6\u53d1\u4e8b\u4ef6\u7684\u6700\u7b80\u5355\u65b9\u6cd5\u662f\u63d0\u4f9b\u4e00\u4e2a\u5728\u51c6\u5907\u5c31\u7eea\u65f6\u5173\u95ed\u7684 go-chan\u3002 \u5728\u8be5 go-chan \u4e0a\u7684\u6240\u6709\u672a\u51b3\u63a5\u6536\u5c06\u88ab\u6fc0\u6d3b\uff0c\u800c\u4e0d\u662f\u5fc5\u987b\u5411\u6bcf\u4e2a goroutine \u53d1\u9001\u5355\u72ec\u7684\u4fe1\u53f7\u3002\\n\\n```\\nfunc work() {\\n    exitChan := make(chan int)\\n    go task1(exitChan)\\n    go task2(exitChan)\\n    time.Sleep(5 * time.Second)\\n    close(exitChan)\\n}\\nfunc task1(exitChan chan int) {\\n    <-exitChan\\n    log.Printf(\\"task1 exiting\\")\\n}\\n\\nfunc task2(exitChan chan int) {\\n    <-exitChan\\n    log.Printf(\\"task2 exiting\\")\\n}\\n```\\n\\n#### \u540c\u6b65\u9000\u51fa\\n\\n\u5b9e\u73b0\u4e00\u4e2a\u53ef\u9760\u7684\uff0c\u65e0\u6b7b\u9501\u7684\u9000\u51fa\u8def\u5f84\u975e\u5e38\u96be\u4ee5\u89e3\u51b3\u6240\u6709\u6b63\u5728\u8fdb\u884c\u7684\u6d88\u606f\u3002 \u4e00\u4e9b\u63d0\u793a\uff1a\\n\\n1. \u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u8d1f\u8d23\u53d1\u9001 go-chan \u7684 goroutine \u4e5f\u5e94\u8be5\u8d1f\u8d23\u5173\u95ed\u5b83\u3002\\n2. \u5982\u679c\u6d88\u606f\u4e0d\u80fd\u4e22\u5931\uff0c\u8bf7\u786e\u4fdd\u6e05\u7a7a\u76f8\u5173\u7684 go-chans\uff08\u7279\u522b\u662f\u65e0\u7f13\u51b2\u7684\uff01\uff09\u4ee5\u4fdd\u8bc1\u53d1\u9001\u8005\u53ef\u4ee5\u53d6\u5f97\u8fdb\u5c55\u3002\\n3. \u6216\u8005\uff0c\u5982\u679c\u6d88\u606f\u4e0d\u518d\u76f8\u5173\uff0c\u5219\u5e94\u5c06\u5355\u4e2a go-chan \u4e0a\u7684\u53d1\u9001\u8f6c\u6362\u4e3a\u9009\u62e9\uff0c\u5e76\u6dfb\u52a0\u9000\u51fa\u4fe1\u53f7\uff08\u5982\u4e0a\u6240\u8ff0\uff09\u4ee5\u4fdd\u8bc1\u8fdb\u5ea6\u3002\\n4. \u4e00\u822c\u987a\u5e8f\u5e94\u8be5\u662f\uff1a\\n\\n5. 1. \u505c\u6b62\u63a5\u53d7\u65b0\u8fde\u63a5\uff08\u5173\u95ed\u4fa6\u542c\u5668\uff09\\n   2. \u4fe1\u53f7\u9000\u51fa\u5b50 goroutines\uff08\u89c1\u4e0a\u6587\uff09\\n   3. \u5728 WaitGroup \u4e0a\u7b49\u5f85 goroutine \u9000\u51fa\uff08\u89c1\u4e0a\u6587\uff09\\n   4. \u6062\u590d\u7f13\u51b2\u7684\u6570\u636e\\n   5. \u5237\u65b0\u7559\u5728\u78c1\u76d8\u4e0a\u7684\u4efb\u4f55\u4e1c\u897f\\n\\n#### \u65e5\u5fd7\\n\\n\u6700\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528\u7684\u6700\u91cd\u8981\u7684\u5de5\u5177\u662f\u8bb0\u5f55\u7684 goroutines \u7684\u5165\u53e3\u548c\u51fa\u53e3\uff01 \u5b83\u4f7f\u5f97\u5728\u6b7b\u9501\u6216\u6cc4\u6f0f\u7684\u60c5\u51b5\u4e0b\u8bc6\u522b\u7f6a\u9b41\u7978\u9996\u53d8\u5f97\u66f4\u52a0\u5bb9\u6613\u3002\\n\\nnsqd \u65e5\u5fd7\u884c\u5305\u62ec\u5c06 goroutine \u4e0e\u5176\u5144\u5f1f\uff08\u548c\u7236\u7ea7\uff09\u76f8\u5173\u8054\u7684\u4fe1\u606f\uff0c\u4f8b\u5982\u5ba2\u6237\u7aef\u7684\u8fdc\u7a0b\u5730\u5740\u6216\u4e3b\u9898/\u901a\u9053\u540d\u79f0\u3002\\n\\n\u65e5\u5fd7\u662f\u5197\u957f\u7684\uff0c\u4f46\u5e76\u4e0d\u8be6\u7ec6\u5230\u65e5\u5fd7\u538b\u5012\u6027\u7684\u7a0b\u5ea6\u3002 \u6709\u4e00\u6761\u7ec6\u7ebf\uff0c\u4f46 nsqd \u503e\u5411\u4e8e\u5728\u53d1\u751f\u6545\u969c\u65f6\u5728\u65e5\u5fd7\u4e2d\u63d0\u4f9b\u66f4\u591a\u4fe1\u606f\uff0c\u800c\u4e0d\u662f\u8bd5\u56fe\u4ee5\u727a\u7272\u5b9e\u7528\u6027\u4e3a\u4ee3\u4ef7\u6765\u51cf\u5c11\u5e72\u6270\u3002"},{"id":"/Gogs\u5728Docker\u4e0b\u7684\u90e8\u7f72","metadata":{"permalink":"/blog/tech/Gogs\u5728Docker\u4e0b\u7684\u90e8\u7f72","source":"@site/tech/Gogs\u5728Docker\u4e0b\u7684\u90e8\u7f72.md","title":"Gogs \u5728 Docker \u4e0b\u7684\u90e8\u7f72","description":"Gogs","date":"2020-06-30T05:09:37.000Z","formattedDate":"2020\u5e746\u670830\u65e5","tags":[{"label":"gogs","permalink":"/blog/tech/tags/gogs"},{"label":"docker","permalink":"/blog/tech/tags/docker"},{"label":"devops","permalink":"/blog/tech/tags/devops"},{"label":"git","permalink":"/blog/tech/tags/git"}],"readingTime":4.105,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["gogs","docker","devops","git"]},"prevItem":{"title":"NSQ \u4ecb\u7ecd","permalink":"/blog/tech/NSQ\u57fa\u7840\u77e5\u8bc6"},"nextItem":{"title":"tech","permalink":"/blog/tech/README"}},"content":"## Gogs\\n\\nGogs \u662f\u4e00\u6b3e\u6781\u6613\u642d\u5efa\u7684\u81ea\u52a9 Git \u670d\u52a1\u3002\\n\\nGogs \u662f\u7528 Go \u8bed\u8a00\u5f00\u53d1\u7684\uff0c\u6700\u7b80\u5355\u3001\u6700\u5feb\u901f\u548c\u6700\u8f7b\u677e\u7684\u65b9\u5f0f\u642d\u5efa\u81ea\u52a9 Git \u670d\u52a1\u3002\\n\\n- \u6613\u5b89\u88c5\\n\\n  \u9664\u4e86\u53ef\u4ee5\u6839\u636e\u64cd\u4f5c\u7cfb\u7edf\u5e73\u53f0\u901a\u8fc7 [\u4e8c\u8fdb\u5236\u8fd0\u884c](https://gogs.io/docs/installation/install_from_binary.html \\"\u4e8c\u8fdb\u5236\u8fd0\u884c\\")\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7 [Docker](https://github.com/gogits/gogs/tree/master/docker \\"Docker \u5b89\u88c5\\") \u6216 [Vagrant](https://github.com/geerlingguy/ansible-vagrant-examples/tree/master/gogs \\"Vagrant \u5b89\u88c5\\")\uff0c\u4ee5\u53ca [\u5305\u7ba1\u7406](https://gogs.io/docs/installation/install_from_packages.html \\"\u5305\u7ba1\u7406\\") \u5b89\u88c5\u3002\\n\\n- \u8de8\u5e73\u53f0\\n\\n  \u4efb\u4f55 Go \u8bed\u8a00\u652f\u6301\u7684\u5e73\u53f0\u90fd\u53ef\u4ee5\u8fd0\u884c Gogs\uff0c\u5305\u62ec Windows\u3001Mac\u3001Linux \u4ee5\u53ca ARM\u3002\\n\\n- \u8f7b\u91cf\u7ea7\\n\\n  \u4e00\u4e2a\u5ec9\u4ef7\u7684\u6811\u8393\u6d3e\u7684\u914d\u7f6e\u8db3\u4ee5\u6ee1\u8db3 Gogs \u7684\u6700\u4f4e\u7cfb\u7edf\u786c\u4ef6\u8981\u6c42\u3002\u6700\u5927\u7a0b\u5ea6\u4e0a\u8282\u7701\u670d\u52a1\u5668\u8d44\u6e90\\n\\n- \u5f00\u6e90\u5316\\n\\n  \u6240\u6709\u7684\u4ee3\u7801\u90fd\u5f00\u6e90\u5728 [GitHub](https://github.com/gogits/gogs/ \\"Gogs\\") \u4e0a\\n\\n\u5e76\u4e14\u652f\u6301\u591a\u79cd\u6570\u636e\u5e93\uff0c\u4f8b\u5982 MySQL\u3001MSSQL\u3001SQLite3 \u7b49\u3002\u672c\u6587\u5c31\u4ee5 Mysql \u53ca SQLite3 \u4e3a\u4f8b\uff0c\u4ecb\u7ecd\u4e0b\u90e8\u7f72\u914d\u7f6e\u3002\u4e0b\u9762\u90fd\u4ee5 docker-compose \u65b9\u5f0f\u90e8\u7f72\uff0c\u5b89\u88c5\u65b9\u6cd5\u89c1[\u5b98\u7f51](https://docs.docker.com/compose/install/ \\"Docker Compose\\")\u3002\\n\\n## Gogs + MySQL\\n\\n### 1. \u914d\u7f6e\u6587\u4ef6\\n\\n`docker-compose.yml`\\n\\n```yaml\\nversion: \\"3\\"\\nservices:\\n  gogs:\\n    restart: always # \u81ea\u52a8\u91cd\u542f\\n    image: gogs/gogs\\n    container_name: gogs\\n    ports:\\n      - \\"6022:22\\" # ssh \u7aef\u53e3\\n      - \\"6023:3000\\" # Web \u8bbf\u95ee\u7aef\u53e3\\n    volumes:\\n      - ./gogs-data:/data # \u6570\u636e\u5b58\u50a8\\n    depends_on:\\n      - mysql\\n  mysql:\\n    restart: always\\n    image: mysql:5\\n    container_name: mysql\\n    environment:\\n      MYSQL_ROOT_PASSWORD: 123456\\n      MYSQL_USER: gogs # gogs \u8bbf\u95ee\u6570\u636e\u5e93\u7528\u7684\u8d26\u53f7\\n      MYSQL_PASSWORD: gogs123456\\n    ports:\\n      - \\"6006:3306\\"\\n    volumes:\\n      - ./conf/my.cnf:/etc/mysql/my.cnf\\n      - ./mysql:/var/lib/mysql\\n      - /etc/localtime:/etc/localtime:ro\\n    # \u4e00\u822c\u4f1a\u5bf9 MySQL \u8fdb\u884c\u914d\u7f6e\uff0c\u6240\u4ee5\u4e0a\u9762\u91c7\u7528\u4e86 cnf \u6587\u4ef6\u7684\u5f62\u5f0f\uff0c\u5982\u679c\u53ea\u662f\u4fee\u6539\u5b57\u7b26\u96c6\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 command \u7684\u5f62\u5f0f\uff0c\u5982\u4e0b\u9762\u6240\u793a\\n    # command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci\\n\\n```\\n\\n`my.cnf`\\n\\n```text\\n[client]\\ndefault-character-set=utf8mb4\\n\\n[mysql]\\ndefault-character-set=utf8mb4\\n\\n[mysqld]\\ncharacter-set-server=utf8mb4\\ncollation-server=utf8mb4_unicode_ci\\n```\\n\\n> \u6ce8\u610f\uff1a`MYSQL_USER` \u5e76\u975e\u5fc5\u987b\uff0c\u5b89\u88c5\u9875\u9762\u4f1a\u8981\u6c42\u8f93\u5165\u7528\u6237\u540d\uff0c\u5982\u679c\u6ca1\u6709\u914d\u7f6e MYSQL_USER \uff0c\u4e5f\u53ef\u4ee5\u7528 root \u8d26\u6237\uff0c\u6b64\u65f6\u8bb0\u5f97\u8bbe\u7f6e `MYSQL_ROOT_PASSWORD`\u3002\\n\\n### 2. \u90e8\u7f72\\n\\n\u62f7\u8d1d\u4e0a\u8ff0\u6587\u4ef6\u5230\u670d\u52a1\u5668\u4e0a\\n\\n\u7136\u540e\u6267\u884c`docker-compose up -d`\uff0c\u4f1a\u81ea\u52a8\u62c9\u53d6\u955c\u50cf\uff0c\u5e76\u542f\u52a8\u5bb9\u5668\u3002\\n\\n\u5982\u679c\u4e0d\u662f\u7528`root`\u8bbf\u95ee\u6570\u636e\u5e93\uff0c\u5c31\u5148\u4e0d\u6025\u7740\u6253\u5f00\u6d4f\u89c8\u5668\u5b89\u88c5 Gogs\uff0c\u5148\u7528 `HediSQL`\uff08\u8bbf\u95ee\u6570\u636e\u5e93\u5de5\u5177\uff09\u6253\u5f00\u6570\u636e\u5e93\uff0c\u8d4b\u4e88`gogs`\u7528\u6237\u8fdc\u7a0b\u8bbf\u95ee\u6743\u9650\uff0c\u5426\u5219\u5b89\u88c5\u662f\u4f1a\u62a5\u9519\u3002\\n\\n`\u6570\u636e\u5e93\u8bbe\u7f6e\u4e0d\u6b63\u786e\uff1aError 1044: Access denied for user \'gogs\'@\'%\' to database \'gogs\'`\uff0c\u5c31\u662f\u6ca1\u6709\u7ed9`gogs`\u8bbf\u95ee\u6743\u9650\u3002\\n\\n![](https://cdn.nlark.com/yuque/0/2020/jpeg/402881/1587383720318-15f19c41-86ff-44be-9d7a-89b5c33cf67b.jpeg)\\n\\n\u8fd8\u9700\u8981\u81ea\u5df1\u521b\u5efa\u4e2a\u6570\u636e\u5e93\uff0c\u4f8b\u5982\uff1a`gogs`\uff08Gogs \u80fd\u81ea\u52a8\u521b\u5efa\u66f4\u597d\uff09\u3002\\n\\n\u914d\u7f6e\u597d\u6570\u636e\u5e93\u6743\u9650\u540e\uff0c\u7528\u6d4f\u89c8\u5668\u6253\u5f00`http://ip:6023`\u8fdb\u884c Gogs \u7684\u5b89\u88c5\u3002\\n\\n\u9700\u8981\u4fee\u6539\u7684\u5185\u5bb9\uff1a\\n\\n```yaml\\n\u6570\u636e\u5e93\u4e3b\u673a: mysql:3306\\n\u6570\u636e\u5e93\u7528\u6237: gogs\\n\u6570\u636e\u5e93\u7528\u6237\u5bc6\u7801: \u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\\n\\n\u57df\u540d: localhost # \u6539\u6210\u81ea\u5df1\u7684\\nSSH \u7aef\u53e3\u53f7 : 6022\\nHTTP \u7aef\u53e3\u53f7 : 6023\\n\u5e94\u7528 URL : http://localhost:6023/\\n```\\n\\n![](https://cdn.nlark.com/yuque/0/2020/jpeg/402881/1587384049043-ef1ac310-c913-436d-aa8e-99d05ab5a823.jpeg)\\n\\n\u5b89\u88c5\u4e0a\u8ff0\u914d\u7f6e\u597d\u540e\uff0c\u70b9\u51fb`\u7acb\u5373\u5b89\u88c5`\uff0c\u5c31\u5927\u529f\u544a\u6210\u4e86\u3002\\n\\n![](https://cdn.nlark.com/yuque/0/2020/jpeg/402881/1587384662318-3cfa16a9-2707-4324-9f8b-ccc001110ae8.jpeg)\\n\\n> \u53ef\u9009\u8bbe\u7f6e\u4e2d\uff0c\u53ef\u4ee5\u7981\u7528\u6ce8\u518c\u529f\u80fd\uff0c\u5728\u7981\u7528\u6ce8\u518c\u529f\u80fd\u65f6\u9700\u8981\u914d\u7f6e\u7ba1\u7406\u5458\u8d26\u53f7\u3002\\n>\\n> PS\uff1a\u7ba1\u7406\u5458\u8d26\u53f7\u4e0d\u80fd\u4e3a`admin`\uff0c\u4f1a\u62a5\u9519\\n\\n## Gogs + SQLite3\\n\\n\u65b9\u5f0f\u5c31\u66f4\u7b80\u5355\u4e86\\n\\n### 1. \u914d\u7f6e\u6587\u4ef6\\n\\n`docker-compose.yml`\\n\\n```yaml\\nversion: \\"3\\"\\nservices:\\n  gogs:\\n    restart: always    # \u81ea\u52a8\u91cd\u542f\\n    image: gogs/gogs\\n    container_name: gogs\\n    ports:\\n      - \'6022:22\'      # ssh \u7aef\u53e3\\n      - \'6023:3000\'    # Web \u8bbf\u95ee\u7aef\u53e3\\n    volumes:\\n      - ./gogs-data:/data   # \u6570\u636e\u5b58\u50a8\\n\\n```\\n\\n### 2. \u90e8\u7f72\\n\\n\u62f7\u8d1d\u4e0a\u8ff0\u6587\u4ef6\u5230\u670d\u52a1\u5668\u4e0a\\n\\n\u7136\u540e\u6267\u884c`docker-compose up -d`\uff0c\u4f1a\u81ea\u52a8\u62c9\u53d6\u955c\u50cf\uff0c\u5e76\u542f\u52a8\u5bb9\u5668\u3002\\n\\n\u7528\u6d4f\u89c8\u5668\u6253\u5f00`http://ip:6023`\u8fdb\u884c Gogs \u7684\u5b89\u88c5\u3002\u8bb0\u5f97\u4fee\u6539\u7aef\u53e3\u548c\u57df\u540d\uff0c\u7136\u540e\u70b9\u51fb\u5b89\u88c5\u5c31\u53ef\u4ee5\u4e86\u3002\\n\\n![](https://cdn.nlark.com/yuque/0/2020/jpeg/402881/1587384996036-e8ad0f2d-02d5-493a-bedf-79651c0f1924.jpeg)"},{"id":"/README","metadata":{"permalink":"/blog/tech/README","source":"@site/tech/README.md","title":"tech","description":"Git","date":"2020-06-30T04:14:26.000Z","formattedDate":"2020\u5e746\u670830\u65e5","tags":[],"readingTime":0.32,"hasTruncateMarker":false,"authors":[],"frontMatter":{},"prevItem":{"title":"Gogs \u5728 Docker \u4e0b\u7684\u90e8\u7f72","permalink":"/blog/tech/Gogs\u5728Docker\u4e0b\u7684\u90e8\u7f72"}},"content":"## Git\\n\\n[Gogs \u5728 Docker \u4e0b\u7684\u90e8\u7f72](./Gogs \u5728 Docker \u4e0b\u7684\u90e8\u7f72.md)\\n\\n## MQ\\n\\n### NSQ\\n\\n[NSQ \u57fa\u7840\u77e5\u8bc6](./NSQ \u57fa\u7840\u77e5\u8bc6.md)\\n\\n## Redis\\n\\n[Redis \u53d1\u5e03\u8ba2\u9605\u6a21\u5f0f](./Redis \u53d1\u5e03\u8ba2\u9605\u6a21\u5f0f.md)\\n\\n## Java\\n\\n[JVM \u5fc5\u4f1a\u7684\u77e5\u8bc6](./JVM \u5fc5\u4f1a\u7684\u77e5\u8bc6.md)"}]}')}}]);